MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.47, (c) 1998, 2006 microEngineering Labs, Inc. All Rights Reserved.  
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\18F2420.INC"
                      00001 ;****************************************************************
                      00002 ;*  18F2420.INC                                                 *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 06/05/06                                        *
                      00008 ;*  Version   : 2.47                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00017         LIST
                      00018         LIST p = 18F2420, r = dec, w = -311, w = -230, f = inhx32
                      00019         INCLUDE "P18F2420.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F2420 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01291         LIST
300000 F1FF           00020         __CONFIG    _CONFIG1H, _OSC_XT_1H
300002 F31F           00021         __CONFIG    _CONFIG2H, _WDT_ON_2H & _WDTPS_512_2H
300004 FDFF           00022         __CONFIG    _CONFIG3H, _PBADEN_OFF_3H
300006 FFBB           00023         __CONFIG    _CONFIG4L, _LVP_OFF_4L & _XINST_OFF_4L
                      00026         LIST
  00F00000            00027 EEPROM_START    EQU     0F00000h
  00000040            00028 BLOCK_SIZE      EQU     64
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 #define         OSC              8
                      00010 #define         LCD_DREG                 PORTC
                      00011 #define         LCD_DBIT                 4
                      00012 #define         LCD_RSREG                PORTC
                      00013 #define         LCD_RSBIT                0
                      00014 #define         LCD_EREG                 PORTC
                      00015 #define         LCD_EBIT                 3
                      00016 #define         LCD_BITS                 4
                      00017 #define         LCD_LINES                2
                      00018 
  00000000            00019 RAM_START                       EQU     00000h
  000002FF            00020 RAM_END                         EQU     002FFh
  00000003            00021 RAM_BANKS                       EQU     00003h
  00000080            00022 BANK0_START                     EQU     00080h
  000000FF            00023 BANK0_END                       EQU     000FFh
  00000100            00024 BANK1_START                     EQU     00100h
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000001FF            00025 BANK1_END                       EQU     001FFh
  00000200            00026 BANK2_START                     EQU     00200h
  000002FF            00027 BANK2_END                       EQU     002FFh
  00000000            00028 BANKA_START                     EQU     00000h
  0000007F            00029 BANKA_END                       EQU     0007Fh
                      00030 
  00000000            00031 FLAGS                           EQU     RAM_START + 000h
  00000001            00032 R0                              EQU     RAM_START + 001h
  00000003            00033 R1                              EQU     RAM_START + 003h
  00000005            00034 R2                              EQU     RAM_START + 005h
  00000007            00035 R3                              EQU     RAM_START + 007h
  00000009            00036 R4                              EQU     RAM_START + 009h
  0000000B            00037 R5                              EQU     RAM_START + 00Bh
  0000000D            00038 R6                              EQU     RAM_START + 00Dh
  0000000F            00039 R7                              EQU     RAM_START + 00Fh
  00000011            00040 R8                              EQU     RAM_START + 011h
  00000013            00041 GOP                             EQU     RAM_START + 013h
  00000014            00042 RM1                             EQU     RAM_START + 014h
  00000015            00043 RM2                             EQU     RAM_START + 015h
  00000016            00044 RR1                             EQU     RAM_START + 016h
  00000017            00045 RR2                             EQU     RAM_START + 017h
  00000018            00046 RS1                             EQU     RAM_START + 018h
  00000019            00047 RS2                             EQU     RAM_START + 019h
  00000F81            00048 _PORTL                          EQU      PORTB
  00000F82            00049 _PORTH                          EQU      PORTC
  00000F93            00050 _TRISL                          EQU      TRISB
  00000F94            00051 _TRISH                          EQU      TRISC
                      00052 #define _temp_ref               _PORTA??2
                      00053 #define _flow_ref               _PORTA??3
                      00054 #define _temp1                  _PORTA??0
                      00055 #define _temp2                  _PORTA??1
                      00056 #define _PORTA??2                PORTA, 002h
                      00057 #define _PORTA??3                PORTA, 003h
                      00058 #define _PORTA??0                PORTA, 000h
                      00059 #define _PORTA??1                PORTA, 001h
                      00060 
                      00061 ; EEPROM data.
                      00062 
                      00063 
                      00064         INCLUDE "LCD.MAC"
                      00001 
                      00012         LIST
                      00065         INCLUDE "C:\PBP\PBPPIC18.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC18.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 06/05/06                                          *
                      00008 ;*  Version   : 2.47                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00079   LIST
                      00080 ; Oscillator is 8MHz
                      01147   LIST
000000                01148     ORG RESET_ORG               ; Reset vector at 0
                      01152   LIST
000000 6A00           01153         clrf    FLAGS           ; Clear all flags on reset
                      01157   LIST
000002 EF6E F000      01158         goto    INIT            ; Finish initialization
                      02918   LIST
000006 6E08           02919 LCDOUT  movwf   R3 + 1          ; Save char
                      02920 
000008 9682           02921         bcf     LCD_EREG, LCD_EBIT      ; Set E low
00000A 9082           02922         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
00000C 9082           02923         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      02924 
00000E 9694           02925         bcf     (LCD_EREG) + 12h, LCD_EBIT      ; Set E to output
000010 9094           02926         bcf     (LCD_RSREG) + 12h, LCD_RSBIT    ; Set RS to output
000012 9094           02927         bcf     (LCD_RWREG) + 12h, LCD_RWBIT    ; Set RW to output
                      02928     if (LCD_BITS == 8)
                      02929         clrf    (LCD_DREG) + 12h        ; Set port to all output
                      02930     else
                      02931       if (LCD_DBIT == 0)
                      02932         movlw   0f0h
                      02933       else
000014 0E0F           02934         movlw   0fh
                      02935       endif
000016 1694           02936         andwf   (LCD_DREG) + 12h, F     ; Set proper half of port to output
000018 5008           02937         movf    R3 + 1, W       ; Get back char
                      02938     endif
                      02939 
00001A B200           02940         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
00001C D022           02941         bra     lcdout1         ; Yes
                      02942 
00001E 0E3A           02943         movlw   high 15000      ; Wait at least 15ms
000020 6E02           02944         movwf   R0 + 1
000022 0E98           02945         movlw   low 15000
000024 EC58 F000      02946         call    PAUSEUSL
                      02947 
000028 0E33           02948         movlw   33h             ; Init lcd
00002A 6E07           02949         movwf   R3              ; Save char
00002C D82F           02950         rcall   lcdloop         ; Send init
                      02951 
00002E 0E13           02952         movlw   high 5000       ; Wait at least 5ms
000030 6E02           02953         movwf   R0 + 1
000032 0E88           02954         movlw   low 5000
000034 EC58 F000      02955         call    PAUSEUSL
                      02956 
000038 D829           02957         rcall   lcdloop         ; Send init again
                      02958 
00003A 0E64           02959         movlw   100             ; Wait at least 100us
00003C EC57 F000      02960         call    PAUSEUS
                      02961 
000040 D825           02962         rcall   lcdloop         ; Send init more time
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02963 
000042 0E64           02964         movlw   100             ; Wait at least 100us
000044 EC57 F000      02965         call    PAUSEUS
                      02966 
                      02967     if (LCD_BITS != 8)
000048 0E22           02968         movlw   22h             ; Set 4-bit mode
00004A 6E07           02969         movwf   R3              ; Save character
00004C D81F           02970         rcall   lcdloop         ; Set interface to 4-bit mode
                      02971     endif
                      02972 
                      02973     if (LCD_BITS == 8)
                      02974       if (LCD_LINES == 1)
                      02975         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      02976       else
                      02977         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      02978       endif
                      02979     else
                      02980       if (LCD_LINES == 1)
                      02981         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      02982       else
00004E 0E28           02983         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      02984       endif
                      02985     endif
000050 D807           02986         rcall   lcdoutcom       ; Send function set
                      02987 
000052 0E0C           02988         movlw   0ch             ; Display on, no cursor, no blink
000054 D805           02989         rcall   lcdoutcom
                      02990 
000056 0E06           02991         movlw   06h             ; Lcd entry mode set, increment, no shift
000058 D803           02992         rcall   lcdoutcom
                      02993 
00005A 8200           02994         bsf     LCDINITFLAG     ; Set to initialized
                      02995 
00005C 5008           02996         movf    R3 + 1, W       ; Get saved char back
00005E D001           02997         bra     lcdout1
                      02998 
000060 8000           02999 lcdoutcom bsf   LCDCDFLAG       ; Set command
                      03000 
000062 6E07           03001 lcdout1 movwf   R3              ; Save char if 4 bit
000064 A000           03002         btfss   LCDCDFLAG       ; Command this time?
000066 D00B           03003         bra     lcdchkcd        ; No
                      03004 
000068 9082           03005         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
00006A 0803           03006         sublw   3
00006C E30E           03007         bnc     lcdsend         ; Short delay
                      03008 
00006E D80D           03009         rcall   lcdsend         ; Long delay
000070 0E07           03010         movlw   high LCD_COMMANDUS      ; Wait for command to complete
000072 6E02           03011         movwf   R0 + 1
000074 0ED0           03012         movlw   low LCD_COMMANDUS
000076 EC58 F000      03013         call    PAUSEUSL
00007A 80D8           03014         bsf     STATUS, C       ; Set no timeout for Serout2mod
00007C 0012           03015         return
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03016 
00007E 8000           03017 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
000080 08FE           03018         sublw   0feh            ; Command next time? (char still in W)
000082 B4D8           03019         btfsc   STATUS, Z
000084 EF6B F000      03020         goto    DUNN            ; Yes - nothing to do this time (C set)
                      03021 
000088 8082           03022         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
                      03023 
00008A                03024 lcdsend
                      03025     if (LCD_BITS == 8)
                      03026 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03027         movf    R3, W           ; Get char back
                      03028         movwf   LCD_DREG        ; Write char to the port
                      03029       if (OSC > 16)
                      03030         nop                     ; Minimum 1us enable time
                      03031       endif
                      03032       if (OSC > 20)
                      03033         bra     $ + 2
                      03034       endif
                      03035       if (OSC > 25)
                      03036         bra     $ + 2
                      03037       endif
                      03038       if (OSC > 33)
                      03039         nop
                      03040       endif
                      03041       if (OSC > 40)
                      03042         bra     $ + 2
                      03043       endif
                      03044         bcf     LCDCDFLAG       ; Indicate data next time
                      03045         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03046     else
                      03047 
                      03048       if (LCD_DBIT == 0)
                      03049         swapf   R3, F           ; Swap top and bottom nibbles
                      03050       endif
                      03051 
00008A A000           03052         btfss   LCDCDFLAG       ; First time through only
00008C 9000           03053 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03054 
00008E 8682           03055         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03056 
                      03057       if (LCD_DBIT == 0)
                      03058         movlw   0f0h            ; Clear lcd data port
                      03059       else
000090 0E0F           03060         movlw   0fh             ; Clear lcd data port
                      03061       endif
000092 1682           03062         andwf   LCD_DREG, F
                      03063 
000094 5007           03064         movf    R3, W           ; Isolate proper nibble of char
                      03065       if (LCD_DBIT == 0)
                      03066         andlw   0fh
                      03067       else
000096 0BF0           03068         andlw   0f0h
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03069       endif
000098 1282           03070         iorwf   LCD_DREG, F     ; Write char to port
                      03071 
                      03072       if (OSC > 20)
                      03073         nop                     ; Minimum 1us enable time
                      03074       endif
                      03075       if (OSC > 25)
                      03076         bra     $ + 2
                      03077       endif
                      03078       if (OSC > 33)
                      03079         nop
                      03080       endif
                      03081       if (OSC > 40)
                      03082         bra     $ + 2
                      03083       endif
                      03084 
00009A 9682           03085         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
00009C 3A07           03086         swapf   R3, F           ; Get to other nibble
                      03087 
                      03088       if (OSC > 20)
                      03089         nop                     ; Minimum 1us not-enabled time
                      03090       endif
                      03091       if (OSC > 25)
                      03092         bra     $ + 2
                      03093       endif
                      03094       if (OSC > 33)
                      03095         nop
                      03096       endif
                      03097       if (OSC > 40)
                      03098         bra     $ + 2
                      03099       endif
                      03100 
00009E B000           03101         btfsc   LCDCDFLAG
0000A0 D7F5           03102         bra     lcdloop         ; Send lower 4 to lcd
                      03103     endif
                      03104 
0000A2 0E32           03105         movlw   LCD_DATAUS      ; Wait for data operation to complete
0000A4 EC57 F000      03106         call    PAUSEUS
0000A8 80D8           03107         bsf     STATUS, C       ; Set no timeout for Serout2mod
0000AA EF6B F000      03108         goto    DUNN
                      06319   LIST
0000AE 6A02           06320 PAUSEUS clrf    R0 + 1          ; 1
0000B0 0FF4           06321 PAUSEUSL addlw  -12             ; 1 Subtract overhead
0000B2 6E01           06322         movwf   R0              ; 1
0000B4 1E02           06323         comf    R0 + 1, F       ; 1
0000B6 0EFE           06324         movlw   -2              ; 1
0000B8 A0D8           06325         btfss   STATUS, C       ; 1 / 2
0000BA D003           06326         bra     pauseush        ; 2 / 0
0000BC 2601           06327 pauseusloop addwf R0, F         ; 1
0000BE B0D8           06328         btfsc   STATUS, C       ; 1 / 2
0000C0 D7FD           06329         bra     pauseusloop     ; 2 / 0
0000C2 2601           06330 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06331         CLRWDT?NOP              ; 1 Keep Watchdog clear
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifndef NO_CLRWDT
0000C4 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
0000C6 3E02           06332         incfsz  R0 + 1, F       ; 1 / 2
0000C8 D7F9           06333         bra     pauseusloop     ; 2 / 0
0000CA 0000           06334         nop                     ; 1
0000CC B001           06335         btfsc   R0, 0           ; 1 / 2
0000CE D000           06336         bra     $ + 2           ; 2 / 0 Burn an extra cycle
0000D0 B001           06337         btfsc   R0, 0           ; 1 / 2
0000D2 D000           06338         bra     $ + 2           ; 2 / 0 Burn an extra cycle
0000D4 0012           06339         return                  ; 2 + 3 (call + setup)
                      07647   LIST
0000D6 0100           07648 DUNN    movlb   0               ; 1 Reset banks to 0
                      07649 DUNN3   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
0000D8 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
0000DA 0012           07650 DUNNRET return                  ; 2 Done
                      07663   LIST
0000DC                07664 INIT
                      07708   LIST
0000DC                07709 main
                      00066 
                      00067         MOVE?CB 000h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) > BANKA_END) & ((TRISC) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0000DC 6A94               M         clrf    TRISC
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISC
                          M     endif
                      00068         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
0000DE 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000E0 DF92               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00069         LCDOUT?C        001h
                          M         MOVE?CA 001h
0000E2 0E01               M         movlw   low (001h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000E4 DF90               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00070         LCDOUT?C        048h
                          M         MOVE?CA 048h
0000E6 0E48               M         movlw   low (048h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000E8 DF8E               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00071         LCDOUT?C        065h
                          M         MOVE?CA 065h
0000EA 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000EC DF8C               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00072         LCDOUT?C        06Ch
                          M         MOVE?CA 06Ch
0000EE 0E6C               M         movlw   low (06Ch)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000F0 DF8A               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00073         LCDOUT?C        06Ch
                          M         MOVE?CA 06Ch
0000F2 0E6C               M         movlw   low (06Ch)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000F4 DF88               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00074         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
0000F6 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000F8 DF86               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00075         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
0000FA 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0000FC DF84               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00076         LCDOUT?C        0C0h
                          M         MOVE?CA 0C0h
0000FE 0EC0               M         movlw   low (0C0h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000100 DF82               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00077         LCDOUT?C        057h
                          M         MOVE?CA 057h
000102 0E57               M         movlw   low (057h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000104 DF80               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00078         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
000106 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000108 DF7E               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00079         LCDOUT?C        072h
                          M         MOVE?CA 072h
00010A 0E72               M         movlw   low (072h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00010C DF7C               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00080         LCDOUT?C        06Ch
                          M         MOVE?CA 06Ch
00010E 0E6C               M         movlw   low (06Ch)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000110 DF7A               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00081         LCDOUT?C        064h
                          M         MOVE?CA 064h
000112 0E64               M         movlw   low (064h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000114 DF78               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00082 
                      00083         END
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          00000008
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
BANK0_END                         000000FF
BANK0_START                       00000080
BANK1_END                         000001FF
BANK1_START                       00000100
BANK2_END                         000002FF
BANK2_START                       00000200
BANKA_END                         0000007F
BANKA_START                       00000000
BANKED                            00000001
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_BIT                          00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCP2_REG                          00000F82
CCPR1                             00000FBE
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019A
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DONE                              00000001
DUNN                              000000D6
DUNN3                             000000D8
DUNNRET                           000000DA
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
FAST                              00000001
FERR                              00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FLTS                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000013
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000033
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000033
HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              000000DC
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L?CALL                            
L?GOTO                            
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            00000006
LCDOUT?C                          
LCDOUT_USED                       00000001
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

LCD_DBIT                          4
LCD_DREG                          PORTC
LCD_EBIT                          3
LCD_EREG                          PORTC
LCD_LINES                         2
LCD_RSBIT                         0
LCD_RSREG                         PORTC
LCD_RWBIT                         00000000
LCD_RWREG                         00000F82
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MCLR                              00000003
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OSC                               8
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
PAUSEUS                           000000AE
PAUSEUSL                          000000B0
PAUSEUS_USED                      00000001
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_BANK                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PWM1CON                           00000FB7
R                                 00000002
R0                                00000001
R1                                00000003
R2                                00000005
R3                                00000007
R4                                00000009
R5                                0000000B
R6                                0000000D
R7                                0000000F
R8                                00000011
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000003
RAM_END                           000002FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD16                              00000007
RE3                               00000003
RESET_ORG                         00000000
RI                                00000004
RM1                               00000014
RM2                               00000015
RR1                               00000016
RR2                               00000017
RS1                               00000018
RS2                               00000019
RSEN                              00000001
RST?RP                            
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PORTA??0                         PORTA, 000h
_PORTA??1                         PORTA, 001h
_PORTA??2                         PORTA, 002h
_PORTA??3                         PORTA, 003h
_PORTH                            00000F82
_PORTL                            00000F81
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_TRISH                            00000F94
_TRISL                            00000F93
_USED                             00000001
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
MPASM  5.51                           LCD.ASM   1-21-2018  0:36:32         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F2420                         00000001
_flow_ref                         _PORTA??3
_temp1                            _PORTA??0
_temp2                            _PORTA??1
_temp_ref                         _PORTA??2
lcdchkcd                          0000007E
lcdloop                           0000008C
lcdout1                           00000062
lcdoutcom                         00000060
lcdsend                           0000008A
main                              000000DC
pauseush                          000000C2
pauseusloop                       000000BC


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXX---------- ---------------- ----------------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:   286
Program Memory Bytes Free: 16098


Errors   :     0
Warnings :     0 reported,     4 suppressed
Messages :     0 reported,     0 suppressed

