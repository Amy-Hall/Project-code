

'define CCP1_REG PORTC
'define CCP1_BIT 2

TRISIO.4 =1
TRISIO.2 =0
counter con 4   'label GPIO.4 as input
out con 2

'ADCON0 = %00000101 ' Set ADC_CLOCK to RC (DEFINE ACD_CLOCK inoperative on the 16F88x)
'ADCON1 = %00000000 ' Right-Justify result in ADRESH:ADRESL registers
'ADCON2 = %10000111
'TRISA = %11111111 ' Set PORTA to all input 

frequency var word
analog_out var word

mainloop:  
    COUNT counter, 1000, frequency     'whats min count to still be accurate....?
    if (GPIO.4 == 0) then
        high GPIO.2
    else 
        low GPIO.2
    endif
    frequency = frequency/1 -200           'would be times 2 (for 500) but the /4 for clk issues
    analog_out = (frequency*255)/200              '0 to 5V out proportional to 200 to 400 frequency Hz

'    analog_out = 50
   ' HPWm 1, analog_out, 245 
    goto mainloop
end
