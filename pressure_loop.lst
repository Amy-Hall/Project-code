MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.47, (c) 1998, 2006 microEngineering Labs, Inc. All Rights Reserved.  
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\18F2420.INC"
                      00001 ;****************************************************************
                      00002 ;*  18F2420.INC                                                 *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 06/05/06                                        *
                      00008 ;*  Version   : 2.47                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00017         LIST
                      00018         LIST p = 18F2420, r = dec, w = -311, w = -230, f = inhx32
                      00019         INCLUDE "P18F2420.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F2420 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01291         LIST
300000 F1FF           00020         __CONFIG    _CONFIG1H, _OSC_XT_1H
300002 F31F           00021         __CONFIG    _CONFIG2H, _WDT_ON_2H & _WDTPS_512_2H
300004 FDFF           00022         __CONFIG    _CONFIG3H, _PBADEN_OFF_3H
300006 FFBB           00023         __CONFIG    _CONFIG4L, _LVP_OFF_4L & _XINST_OFF_4L
                      00026         LIST
  00F00000            00027 EEPROM_START    EQU     0F00000h
  00000040            00028 BLOCK_SIZE      EQU     64
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 #define         OSC              4
                      00010 #define         LCD_DREG                 PORTC
                      00011 #define         LCD_DBIT                 4
                      00012 #define         LCD_RSREG                PORTC
                      00013 #define         LCD_RSBIT                0
                      00014 #define         LCD_EREG                 PORTC
                      00015 #define         LCD_EBIT                 3
                      00016 #define         LCD_BITS                 4
                      00017 #define         LCD_LINES                2
                      00018 #define         ADC_BITS                 10
                      00019 #define         ADC_SAMPLEUS             50 
                      00020 #define         CCP1_REG                 PORTC
                      00021 #define         CCP1_BIT                 2
                      00022 
  00000000            00023 RAM_START                       EQU     00000h
  000002FF            00024 RAM_END                         EQU     002FFh
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00025 RAM_BANKS                       EQU     00003h
  00000080            00026 BANK0_START                     EQU     00080h
  000000FF            00027 BANK0_END                       EQU     000FFh
  00000100            00028 BANK1_START                     EQU     00100h
  000001FF            00029 BANK1_END                       EQU     001FFh
  00000200            00030 BANK2_START                     EQU     00200h
  000002FF            00031 BANK2_END                       EQU     002FFh
  00000000            00032 BANKA_START                     EQU     00000h
  0000007F            00033 BANKA_END                       EQU     0007Fh
                      00034 
  00000000            00035 FLAGS                           EQU     RAM_START + 000h
  00000001            00036 R0                              EQU     RAM_START + 001h
  00000003            00037 R1                              EQU     RAM_START + 003h
  00000005            00038 R2                              EQU     RAM_START + 005h
  00000007            00039 R3                              EQU     RAM_START + 007h
  00000009            00040 R4                              EQU     RAM_START + 009h
  0000000B            00041 R5                              EQU     RAM_START + 00Bh
  0000000D            00042 R6                              EQU     RAM_START + 00Dh
  0000000F            00043 R7                              EQU     RAM_START + 00Fh
  00000011            00044 R8                              EQU     RAM_START + 011h
  00000013            00045 T1                              EQU     RAM_START + 013h
  00000015            00046 GOP                             EQU     RAM_START + 015h
  00000016            00047 RM1                             EQU     RAM_START + 016h
  00000017            00048 RM2                             EQU     RAM_START + 017h
  00000018            00049 RR1                             EQU     RAM_START + 018h
  00000019            00050 RR2                             EQU     RAM_START + 019h
  0000001A            00051 RS1                             EQU     RAM_START + 01Ah
  0000001B            00052 RS2                             EQU     RAM_START + 01Bh
  0000001C            00053 _p_in                           EQU     RAM_START + 01Ch
  0000001E            00054 _p_pwm_val                      EQU     RAM_START + 01Eh
  00000020            00055 _p_ref                          EQU     RAM_START + 020h
  00000022            00056 _p_val                          EQU     RAM_START + 022h
  00000024            00057 _pressure                       EQU     RAM_START + 024h
  00000026            00058 _pressure_ref                   EQU     RAM_START + 026h
  00000F81            00059 _PORTL                          EQU      PORTB
  00000F82            00060 _PORTH                          EQU      PORTC
  00000F93            00061 _TRISL                          EQU      TRISB
  00000F94            00062 _TRISH                          EQU      TRISC
                      00063 #define _TRISC??2                TRISC, 002h
                      00064 #define _CCP1CON??4              CCP1CON, 004h
                      00065 #define _p_pwm_val??0           _p_pwm_val, 000h
                      00066 #define _CCP1CON??5              CCP1CON, 005h
                      00067 #define _p_pwm_val??1           _p_pwm_val, 001h
                      00068 
                      00069 ; EEPROM data.
                      00070 
                      00071 
                      00072         INCLUDE "PRESSU~1.MAC"
                      00001 
                      00272         LIST
                      00073         INCLUDE "C:\PBP\PBPPIC18.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC18.LIB                                                  *
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 06/05/06                                          *
                      00008 ;*  Version   : 2.47                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00074   LIST
                      00075 ; Oscillator is 4MHz
                      01147   LIST
000000                01148     ORG RESET_ORG               ; Reset vector at 0
                      01152   LIST
000000 6A00           01153         clrf    FLAGS           ; Clear all flags on reset
                      01157   LIST
000002 EF1F F001      01158         goto    INIT            ; Finish initialization
                      02911   LIST
000006 50E9           02912 LCDOUTJ movf    FSR0L, W        ; Jumpman entry
                      02918   LIST
000008 6E08           02919 LCDOUT  movwf   R3 + 1          ; Save char
                      02920 
00000A 9682           02921         bcf     LCD_EREG, LCD_EBIT      ; Set E low
00000C 9082           02922         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
00000E 9082           02923         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      02924 
000010 9694           02925         bcf     (LCD_EREG) + 12h, LCD_EBIT      ; Set E to output
000012 9094           02926         bcf     (LCD_RSREG) + 12h, LCD_RSBIT    ; Set RS to output
000014 9094           02927         bcf     (LCD_RWREG) + 12h, LCD_RWBIT    ; Set RW to output
                      02928     if (LCD_BITS == 8)
                      02929         clrf    (LCD_DREG) + 12h        ; Set port to all output
                      02930     else
                      02931       if (LCD_DBIT == 0)
                      02932         movlw   0f0h
                      02933       else
000016 0E0F           02934         movlw   0fh
                      02935       endif
000018 1694           02936         andwf   (LCD_DREG) + 12h, F     ; Set proper half of port to output
00001A 5008           02937         movf    R3 + 1, W       ; Get back char
                      02938     endif
                      02939 
00001C B200           02940         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
00001E D022           02941         bra     lcdout1         ; Yes
                      02942 
000020 0E3A           02943         movlw   high 15000      ; Wait at least 15ms
000022 6E02           02944         movwf   R0 + 1
000024 0E98           02945         movlw   low 15000
000026 ECAD F000      02946         call    PAUSEUSL
                      02947 
00002A 0E33           02948         movlw   33h             ; Init lcd
00002C 6E07           02949         movwf   R3              ; Save char
00002E D82F           02950         rcall   lcdloop         ; Send init
                      02951 
000030 0E13           02952         movlw   high 5000       ; Wait at least 5ms
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000032 6E02           02953         movwf   R0 + 1
000034 0E88           02954         movlw   low 5000
000036 ECAD F000      02955         call    PAUSEUSL
                      02956 
00003A D829           02957         rcall   lcdloop         ; Send init again
                      02958 
00003C 0E64           02959         movlw   100             ; Wait at least 100us
00003E ECAC F000      02960         call    PAUSEUS
                      02961 
000042 D825           02962         rcall   lcdloop         ; Send init more time
                      02963 
000044 0E64           02964         movlw   100             ; Wait at least 100us
000046 ECAC F000      02965         call    PAUSEUS
                      02966 
                      02967     if (LCD_BITS != 8)
00004A 0E22           02968         movlw   22h             ; Set 4-bit mode
00004C 6E07           02969         movwf   R3              ; Save character
00004E D81F           02970         rcall   lcdloop         ; Set interface to 4-bit mode
                      02971     endif
                      02972 
                      02973     if (LCD_BITS == 8)
                      02974       if (LCD_LINES == 1)
                      02975         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      02976       else
                      02977         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      02978       endif
                      02979     else
                      02980       if (LCD_LINES == 1)
                      02981         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      02982       else
000050 0E28           02983         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      02984       endif
                      02985     endif
000052 D807           02986         rcall   lcdoutcom       ; Send function set
                      02987 
000054 0E0C           02988         movlw   0ch             ; Display on, no cursor, no blink
000056 D805           02989         rcall   lcdoutcom
                      02990 
000058 0E06           02991         movlw   06h             ; Lcd entry mode set, increment, no shift
00005A D803           02992         rcall   lcdoutcom
                      02993 
00005C 8200           02994         bsf     LCDINITFLAG     ; Set to initialized
                      02995 
00005E 5008           02996         movf    R3 + 1, W       ; Get saved char back
000060 D001           02997         bra     lcdout1
                      02998 
000062 8000           02999 lcdoutcom bsf   LCDCDFLAG       ; Set command
                      03000 
000064 6E07           03001 lcdout1 movwf   R3              ; Save char if 4 bit
000066 A000           03002         btfss   LCDCDFLAG       ; Command this time?
000068 D00B           03003         bra     lcdchkcd        ; No
                      03004 
00006A 9082           03005         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00006C 0803           03006         sublw   3
00006E E30E           03007         bnc     lcdsend         ; Short delay
                      03008 
000070 D80D           03009         rcall   lcdsend         ; Long delay
000072 0E07           03010         movlw   high LCD_COMMANDUS      ; Wait for command to complete
000074 6E02           03011         movwf   R0 + 1
000076 0ED0           03012         movlw   low LCD_COMMANDUS
000078 ECAD F000      03013         call    PAUSEUSL
00007C 80D8           03014         bsf     STATUS, C       ; Set no timeout for Serout2mod
00007E 0012           03015         return
                      03016 
000080 8000           03017 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
000082 08FE           03018         sublw   0feh            ; Command next time? (char still in W)
000084 B4D8           03019         btfsc   STATUS, Z
000086 EF1C F001      03020         goto    DUNN            ; Yes - nothing to do this time (C set)
                      03021 
00008A 8082           03022         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
                      03023 
00008C                03024 lcdsend
                      03025     if (LCD_BITS == 8)
                      03026 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03027         movf    R3, W           ; Get char back
                      03028         movwf   LCD_DREG        ; Write char to the port
                      03029       if (OSC > 16)
                      03030         nop                     ; Minimum 1us enable time
                      03031       endif
                      03032       if (OSC > 20)
                      03033         bra     $ + 2
                      03034       endif
                      03035       if (OSC > 25)
                      03036         bra     $ + 2
                      03037       endif
                      03038       if (OSC > 33)
                      03039         nop
                      03040       endif
                      03041       if (OSC > 40)
                      03042         bra     $ + 2
                      03043       endif
                      03044         bcf     LCDCDFLAG       ; Indicate data next time
                      03045         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03046     else
                      03047 
                      03048       if (LCD_DBIT == 0)
                      03049         swapf   R3, F           ; Swap top and bottom nibbles
                      03050       endif
                      03051 
00008C A000           03052         btfss   LCDCDFLAG       ; First time through only
00008E 9000           03053 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03054 
000090 8682           03055         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03056 
                      03057       if (LCD_DBIT == 0)
                      03058         movlw   0f0h            ; Clear lcd data port
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03059       else
000092 0E0F           03060         movlw   0fh             ; Clear lcd data port
                      03061       endif
000094 1682           03062         andwf   LCD_DREG, F
                      03063 
000096 5007           03064         movf    R3, W           ; Isolate proper nibble of char
                      03065       if (LCD_DBIT == 0)
                      03066         andlw   0fh
                      03067       else
000098 0BF0           03068         andlw   0f0h
                      03069       endif
00009A 1282           03070         iorwf   LCD_DREG, F     ; Write char to port
                      03071 
                      03072       if (OSC > 20)
                      03073         nop                     ; Minimum 1us enable time
                      03074       endif
                      03075       if (OSC > 25)
                      03076         bra     $ + 2
                      03077       endif
                      03078       if (OSC > 33)
                      03079         nop
                      03080       endif
                      03081       if (OSC > 40)
                      03082         bra     $ + 2
                      03083       endif
                      03084 
00009C 9682           03085         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
00009E 3A07           03086         swapf   R3, F           ; Get to other nibble
                      03087 
                      03088       if (OSC > 20)
                      03089         nop                     ; Minimum 1us not-enabled time
                      03090       endif
                      03091       if (OSC > 25)
                      03092         bra     $ + 2
                      03093       endif
                      03094       if (OSC > 33)
                      03095         nop
                      03096       endif
                      03097       if (OSC > 40)
                      03098         bra     $ + 2
                      03099       endif
                      03100 
0000A0 B000           03101         btfsc   LCDCDFLAG
0000A2 D7F5           03102         bra     lcdloop         ; Send lower 4 to lcd
                      03103     endif
                      03104 
0000A4 0E32           03105         movlw   LCD_DATAUS      ; Wait for data operation to complete
0000A6 ECAC F000      03106         call    PAUSEUS
0000AA 80D8           03107         bsf     STATUS, C       ; Set no timeout for Serout2mod
0000AC EF1C F001      03108         goto    DUNN
                      05040   LIST
0000B0 9E15           05041 SEROUT2DEC bcf  GOP, 7          ; Blanking off
0000B2 500A           05042         movf    R4 + 1, W       ; 0 digits?
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000B4 B4D8           05043         btfsc   STATUS, Z
0000B6 8E15           05044         bsf     GOP, 7          ; Yes, blanking on
0000B8 0E05           05045         movlw   5               ; 5 digits max to do
0000BA 6E09           05046         movwf   R4
0000BC 0E27           05047         movlw   high 10000      ; Find 10,000s
0000BE 6E04           05048         movwf   R1 + 1
0000C0 0E10           05049         movlw   low 10000
0000C2 D80C           05050         rcall   serout2ddig     ; Do the work
                      05051       ifdef SEROUT2TO_USED
                      05052         btfss   STATUS, C       ; Timed out?
                      05053         return                  ; Yes
                      05054       endif
0000C4 0E03           05055         movlw   high 1000       ; Find 1,000s
0000C6 6E04           05056         movwf   R1 + 1
0000C8 0EE8           05057         movlw   low 1000
0000CA D808           05058         rcall   serout2ddig     ; Do the work
                      05059       ifdef SEROUT2TO_USED
                      05060         btfss   STATUS, C       ; Timed out?
                      05061         return                  ; Yes
                      05062       endif
0000CC 6A04           05063         clrf    R1 + 1          ; Find 100s
0000CE 0E64           05064         movlw   100
0000D0 D805           05065         rcall   serout2ddig     ; Do the work
                      05066       ifdef SEROUT2TO_USED
                      05067         btfss   STATUS, C       ; Timed out?
                      05068         return                  ; Yes
                      05069       endif
0000D2 6A04           05070         clrf    R1 + 1          ; Find 10s
0000D4 0E0A           05071         movlw   10
0000D6 D802           05072         rcall   serout2ddig     ; Do the work
                      05073       ifdef SEROUT2TO_USED
                      05074         btfss   STATUS, C       ; Timed out?
                      05075         return                  ; Yes
                      05076       endif
0000D8 5005           05077         movf    R2, W           ; Get the 1s
0000DA D008           05078         bra     SEROUT2SEND     ; Send the 1s and exit
                      05079 
0000DC 6E03           05080 serout2ddig movwf R1            ; Save last piece
0000DE 5006           05081         movf    R2 + 1, W       ; Move remainder to dividend
0000E0 6E02           05082         movwf   R0 + 1
0000E2 5005           05083         movf    R2, W
0000E4 6E01           05084         movwf   R0
0000E6 ECDF F000      05085         call    DIV             ; Do the math
0000EA 5001           05086         movf    R0, W           ; Get the result
                      05087 ;       bra     SEROUT2SEND     ; Fall through
                      05094   LIST
0000EC 6E01           05095 SEROUT2SEND movwf R0            ; Save char for a moment
0000EE 4E09           05096         dcfsnz  R4, F           ; Bump down count while we're here
0000F0 9E15           05097         bcf     GOP, 7
0000F2 500A           05098         movf    R4 + 1, W       ; Get number of digits to send
0000F4 E003           05099         bz      serout2send1    ; If zero digits skip count compare
0000F6 5C09           05100         subwf   R4, W           ; Send if within count
0000F8 B0D8           05101         btfsc   STATUS, C
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000FA 0012           05102         return
0000FC 5001           05103 serout2send1 movf  R0, W        ; Get char back
                      05104       ifdef SEROUT2TO_USED
                      05105         bsf     STATUS, C       ; Set carry for no timeout in case of blanking
                      05106       endif
0000FE A4D8           05107         btfss   STATUS, Z       ; If zero, goto blank check
000100 9E15           05108         bcf     GOP, 7          ; Not zero so clear blank
000102 BE15           05109         btfsc   GOP, 7          ; If blanking on, don't send
000104 0012           05110         return
000106 0F30           05111         addlw   '0'             ; Add ASCII offset
000108 EF16 F001      05112         goto    JUMPMAN         ; Send it
                      05930   LIST
00010C                05931 ADCIN
                      05932       ifdef ADCON2
00010C 36E8           05933         rlcf    WREG, F         ; Move channel into proper position
00010E 36E8           05934         rlcf    WREG, F
000110 0B3C           05935         andlw   03ch            ; Mask channel
000112 0901           05936         iorlw   1               ; Turn on ADC
000114 12C2           05937         iorwf   ADCON0, F       ; Set the one bits
000116 09C0           05938         iorlw   0c0h
000118 16C2           05939         andwf   ADCON0, F       ; Clear the zero bits
00011A 50C0           05940         movf    ADCON2, W       ; Set up clock source
00011C 0BF8           05941         andlw   0f8h
00011E 0903           05942         iorlw   (ADC_CLOCK) & 7
000120 6EC0           05943         movwf   ADCON2
                      05944       else
                      05945         rlcf    WREG, F         ; Move channel into proper position
                      05946         rlcf    WREG, F
                      05947         rlcf    WREG, F
                      05948         andlw   038h            ; Mask channel
                      05949         iorlw   (((ADC_CLOCK) & 3) << 6) | 1    ; Set up clock source and turn on ADC
                      05950         movwf   ADCON0
                      05951       endif
                      05952       if ((ADC_SAMPLEUS) != 0)
000122 0E00           05953         movlw   (ADC_SAMPLEUS) >> 8     ; Get sample time
000124 6E02           05954         movwf   R0 + 1
000126 0E32           05955         movlw   low (ADC_SAMPLEUS)
000128 ECAD F000      05956         call    PAUSEUSL        ; Wait sample time
                      05957       endif
00012C 82C2           05958         bsf     ADCON0, GO_DONE ; Start conversion
00012E B2C2           05959 adcinloop btfsc ADCON0, GO_DONE ; Wait for conversion to complete
000130 D7FE           05960         bra     adcinloop
                      05961       if ((ADC_BITS) <= 8)
                      05962         clrf    R0 + 1
                      05963         movf    ADRESH, W       ; Get 8-bit result
                      05964       else
000132 50C4           05965         movf    ADRESH, W       ; Get 16-bit result
000134 6E02           05966         movwf   R0 + 1
000136 50C3           05967         movf    ADRESL, W
                      05968       endif
000138 EF1C F001      05969         goto    DUNN
                      06227   LIST
00013C 6A04           06228 PAUSE   clrf    R1 + 1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00013E 6E03           06229 PAUSEL  movwf   R1
000140 0EFF           06230 pauseloop movlw -1              ; 1 (9)
000142 2603           06231         addwf   R1, F           ; 1
000144 A0D8           06232         btfss   STATUS, C       ; 1 / 2
000146 2604           06233         addwf   R1 + 1, F       ; 1 / 0
000148 A0D8           06234         btfss   STATUS, C       ; 2
00014A EF1C F001      06235         goto    DUNN
00014E 0E03           06236         movlw   (PAUSE_DELAY) >> 8      ; 1
000150 6E02           06237         movwf   R0 + 1          ; 1
000152 0EDF           06238         movlw   low (PAUSE_DELAY)       ; 1
000154 D802           06239         rcall   PAUSEUSL        ; -2 (PAUSEUSL gives you 2 less than you ask for)
000156 D7F4           06240         bra     pauseloop       ; 2
                      06284   LIST
000158 6A02           06285 PAUSEUS clrf    R0 + 1          ; 1
00015A 0FE8           06286 PAUSEUSL addlw  -24             ; 1 Subtract overhead
00015C 6E01           06287         movwf   R0              ; 1
00015E 1E02           06288         comf    R0 + 1, F       ; 1
000160 0EFC           06289         movlw   -4              ; 1
000162 A0D8           06290         btfss   STATUS, C       ; 1 / 2
000164 D003           06291         bra     pauseush        ; 2 / 0
000166 2601           06292 pauseusloop addwf R0, F         ; 1
000168 B0D8           06293         btfsc   STATUS, C       ; 1 / 2
00016A D7FD           06294         bra     pauseusloop     ; 2 / 0
00016C 2601           06295 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06296         CLRWDT?NOP              ; 1 Keep Watchdog clear
                          M     ifndef NO_CLRWDT
00016E 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000170 3E02           06297         incfsz  R0 + 1, F       ; 1 / 2
000172 D7F9           06298         bra     pauseusloop     ; 2 / 0
000174 B001           06299         btfsc   R0, 0           ; 1 / 2
000176 D000           06300         bra     $ + 2           ; 2 / 0 Burn an extra cycle
000178 A201           06301         btfss   R0, 1           ; 1 / 2
00017A D002           06302         bra     pauseusdone     ; 2 / 0
00017C 0000           06303         nop                     ; 1
00017E D000           06304         bra     $ + 2           ; 2 Burn an extra 2 cycles
000180 0012           06305 pauseusdone return              ; 2 + 3 (call + setup)
                      06977   LIST
000182 90D8           06978 shiftrloop bcf  STATUS, C       ; Shift in 0 bits
000184 3202           06979         rrcf    R0 + 1, F       ; Shift right once
000186 3201           06980         rrcf    R0, F
000188 0FFF           06981 SHIFTR  addlw   -1
00018A E2FB           06982         bc      shiftrloop      ; Done?
00018C 5001           06983         movf    R0, W           ; Move low part of result to W
00018E EF1C F001      06984         goto    DUNN
                      07120   LIST
000192 6E03           07121 CMPGE   movwf   R1
000194 0E03           07122         movlw   3               ; Mask for = >
000196 D003           07123         bra     CMP
                      07186   LIST
000198 6E03           07187 CMPLE   movwf   R1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00019A 0E06           07188         movlw   6               ; Mask for < =
00019C D000           07189         bra     CMP
                      07271   LIST
00019E 6E09           07272 CMP     movwf   R4              ; Save compare state
0001A0 5004           07273         movf    R1 + 1, W       ; Flags = MSB(R0) - MSB(R1)
0001A2 5C02           07274         subwf   R0 + 1, W
0001A4 E102           07275         bnz     cmpnoteq        ; If unequal then done
0001A6 5003           07276         movf    R1, W           ; Flags = LSB(R0) - LSB(R1)
0001A8 5C01           07277         subwf   R0, W
0001AA 0E04           07278 cmpnoteq movlw  4               ; W = 4 if R0 < R1
0001AC B0D8           07279         btfsc   STATUS, C
0001AE 0E01           07280         movlw   1               ; W = 1 if R0 > R1
0001B0 B4D8           07281         btfsc   STATUS, Z
0001B2 0E02           07282         movlw   2               ; W = 2 if R0 == R1
0001B4 1409           07283         andwf   R4, W           ; Mask for compare state
0001B6 A4D8           07284         btfss   STATUS, Z
0001B8 0EFF           07285         movlw   -1
0001BA EF1C F001      07286         goto    DUNN
                      07496   LIST
0001BE 6A06           07497 DIV     clrf    R2 + 1
0001C0 6A05           07498         clrf    R2
                      07499 
0001C2 0E10           07500 DIV32DIV movlw   16
0001C4 6E07           07501         movwf   R3
                      07502 
0001C6 3402           07503 divloop rlcf    R0 + 1, W
0001C8 3605           07504         rlcf    R2, F
0001CA 3606           07505         rlcf    R2 + 1, F
0001CC 5003           07506         movf    R1, W
0001CE 5E05           07507         subwf   R2, F
0001D0 5004           07508         movf    R1 + 1, W
0001D2 5A06           07509         subwfb  R2 + 1, F
                      07510 
0001D4 E205           07511         bc      divok
0001D6 5003           07512         movf    R1, W
0001D8 2605           07513         addwf   R2, F
0001DA 5004           07514         movf    R1 + 1, W
0001DC 2206           07515         addwfc  R2 + 1, F
                      07516 
0001DE 90D8           07517         bcf     STATUS, C
                      07518 
0001E0 3601           07519 divok   rlcf    R0, F
0001E2 3602           07520         rlcf    R0 + 1, F
                      07521 
0001E4 2E07           07522         decfsz  R3, F
0001E6 D7EF           07523         bra     divloop
0001E8 5001           07524         movf    R0, W           ; Get low byte to W
0001EA EF1C F001      07525         goto    DUNN
                      07542   LIST
0001EE 5003           07543 MUL     movf    R1, W
0001F0 0207           07544         mulwf   R3              ; R1 * R3 = PRODHL
                      07545 
0001F2 CFF4 F006      07546         movff   PRODH, R2 + 1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F6 CFF3 F005      07547         movff   PRODL, R2
                      07548 
0001FA 5004           07549         movf    R1 + 1, W
0001FC 0208           07550         mulwf   R3 + 1          ; R1 + 1 * R3 + 1 = PRODHL
                      07551 
0001FE CFF4 F002      07552         movff   PRODH, R0 + 1
000202 CFF3 F001      07553         movff   PRODL, R0
                      07554 
000206 5003           07555         movf    R1, W
000208 0208           07556         mulwf   R3 + 1          ; R1 * R3 + 1 = PRODHL
                      07557 
00020A 50F3           07558         movf    PRODL, W        ; Add cross products
00020C 2606           07559         addwf   R2 + 1, F
00020E 50F4           07560         movf    PRODH, W
000210 2201           07561         addwfc  R0, F
000212 6AE8           07562         clrf    WREG
000214 2202           07563         addwfc  R0 + 1, F
                      07564 
000216 5004           07565         movf    R1 + 1, W
000218 0207           07566         mulwf   R3              ; R1 + 1 * R3 = PRODHL
                      07567 
00021A 50F3           07568         movf    PRODL, W        ; Add cross products
00021C 2606           07569         addwf   R2 + 1, F
00021E 50F4           07570         movf    PRODH, W
000220 2201           07571         addwfc  R0, F
000222 6AE8           07572         clrf    WREG
000224 2202           07573         addwfc  R0 + 1, F
                      07574 
000226 5005           07575         movf    R2, W           ; Get low byte to W
000228 EF1C F001      07576         goto    DUNN
                      07627   LIST
00022C 6EE9           07628 JUMPMAN movwf   FSR0L
00022E 6AFB           07629         clrf    PCLATU
000230 5012           07630         movf    R8 + 1, W
000232 6EFA           07631         movwf   PCLATH
000234 5011           07632         movf    R8, W
000236 6EF9           07633         movwf   PCL
                      07647   LIST
000238 0100           07648 DUNN    movlb   0               ; 1 Reset banks to 0
                      07649 DUNN3   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
00023A 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
00023C 0012           07650 DUNNRET return                  ; 2 Done
                      07663   LIST
00023E                07664 INIT
                      07708   LIST
00023E                07709 main
                      00074 
                      00075         MOVE?CB 040h, OSCCON
                          M         CHK?RP  OSCCON
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((OSCCON) > BANKA_END) & ((OSCCON) < (0f01h + BANKA_END)))
                          M       if (((OSCCON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON)
                          M PREV_BANK = high (OSCCON)
                          M       endif
                          M     endif
                          M     if (low (040h) == 0)
                          M         clrf    OSCCON
                          M     else
00023E 0E40               M         movlw   low (040h)
000240 6ED3               M         movwf   OSCCON
                          M     endif
                      00076         MOVE?CB 000h, ADCON1
                          M         CHK?RP  ADCON1
                          M     if (((ADCON1) > BANKA_END) & ((ADCON1) < (0f01h + BANKA_END)))
                          M       if (((ADCON1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON1)
                          M PREV_BANK = high (ADCON1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000242 6AC1               M         clrf    ADCON1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   ADCON1
                          M     endif
                      00077         MOVE?CB 087h, ADCON2
                          M         CHK?RP  ADCON2
                          M     if (((ADCON2) > BANKA_END) & ((ADCON2) < (0f01h + BANKA_END)))
                          M       if (((ADCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON2)
                          M PREV_BANK = high (ADCON2)
                          M       endif
                          M     endif
                          M     if (low (087h) == 0)
                          M         clrf    ADCON2
                          M     else
000244 0E87               M         movlw   low (087h)
000246 6EC0               M         movwf   ADCON2
                          M     endif
                      00078         MOVE?CB 0FFh, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) > BANKA_END) & ((TRISA) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISA
                          M     else
000248 0EFF               M         movlw   low (0FFh)
00024A 6E92               M         movwf   TRISA
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00079         MOVE?CB 000h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) > BANKA_END) & ((TRISC) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00024C 6A94               M         clrf    TRISC
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISC
                          M     endif
                      00080         MOVE?CT 000h, _TRISC??2
                          M         CHK?RP  TRISC
                          M     if (((TRISC) > BANKA_END) & ((TRISC) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     TRISC,  002h
                          M     else
00024E 9494               M         bcf     TRISC,  002h
                          M     endif
                      00081         MOVE?CB 00Ch, CCP1CON
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
                          M     if (low (00Ch) == 0)
                          M         clrf    CCP1CON
                          M     else
000250 0E0C               M         movlw   low (00Ch)
000252 6EBD               M         movwf   CCP1CON
                          M     endif
                      00082         MOVE?CB 007h, T2CON
                          M         CHK?RP  T2CON
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
                          M     if (low (007h) == 0)
                          M         clrf    T2CON
                          M     else
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000254 0E07               M         movlw   low (007h)
000256 6ECA               M         movwf   T2CON
                          M     endif
                      00083         MOVE?CB 0FFh, PR2
                          M         CHK?RP  PR2
                          M     if (((PR2)   > BANKA_END) & ((PR2)   < (0f01h + BANKA_END)))
                          M       if (((PR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PR2)
                          M PREV_BANK = high (PR2)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    PR2
                          M     else
000258 0EFF               M         movlw   low (0FFh)
00025A 6ECB               M         movwf   PR2
                          M     endif
                      00084         MOVE?CW 032h, _p_pwm_val
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _p_pwm_val
                          M         movlw   high (032h)
                          M         movwf   (_p_pwm_val) + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _p_pwm_val
                          M       else
00025C 0E32               M         movlw   low (032h)
00025E 6E1E               M         movwf   _p_pwm_val
                          M       endif
                          M       if ((high (032h)) == 0)
000260 6A1F               M         clrf    (_p_pwm_val) + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_p_pwm_val) + 1
                          M       endif
                          M     endif
                      00085         MOVE?TT _p_pwm_val??0, _CCP1CON??4
                          M     if (((_p_pwm_val) <= BANKA_END) | ((_p_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000262 B01E               M         btfsc   _p_pwm_val, 000h
000264 88BD               M         bsf     CCP1CON, 004h
000266 A01E               M         btfss   _p_pwm_val, 000h
000268 98BD               M         bcf     CCP1CON, 004h
                          M     else
                          M       if (((_p_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _p_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _p_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M           else
                          M         MOVE?TA _p_pwm_val, 000h
                          M         MOVE?AT CCP1CON, 004h
                          M           endif
                          M       endif
                          M     endif
                      00086         MOVE?TT _p_pwm_val??1, _CCP1CON??5
                          M     if (((_p_pwm_val) <= BANKA_END) | ((_p_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
00026A B21E               M         btfsc   _p_pwm_val, 001h
00026C 8ABD               M         bsf     CCP1CON, 005h
00026E A21E               M         btfss   _p_pwm_val, 001h
000270 9ABD               M         bcf     CCP1CON, 005h
                          M     else
                          M       if (((_p_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _p_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _p_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M           else
                          M         MOVE?TA _p_pwm_val, 001h
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AT CCP1CON, 005h
                          M           endif
                          M       endif
                          M     endif
                      00087         SHIFTR?WCB      _p_pwm_val, 002h, CCPR1L
                          M     if (002h == 1)
                          M         CHK?RP  _p_pwm_val
                          M         rrcf    _p_pwm_val + 1, W
                          M         rrcf    _p_pwm_val, W
                          M         MOVE?AB CCPR1L
                          M     else
                          M         MOVE?WW _p_pwm_val, R0
                          M         MOVE?BB _p_pwm_val, R0
000272 C01E F001          M         movff   _p_pwm_val, R0
                          M         MOVE?BB (_p_pwm_val) + 1, (R0) + 1
000276 C01F F002          M         movff   (_p_pwm_val) + 1, (R0) + 1
                          M         MOVE?CA 002h
00027A 0E02               M         movlw   low (002h)
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
00027C DF85               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB CCPR1L
                          M         CHK?RP  CCPR1L
                          M     if (((CCPR1L) > BANKA_END) & ((CCPR1L) < (0f01h + BANKA_END)))
                          M       if (((CCPR1L) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCPR1L)
                          M PREV_BANK = high (CCPR1L)
                          M       endif
                          M     endif
00027E 6EBE               M         movwf   CCPR1L
                          M     endif
                      00088         PAUSE?C 003E8h
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (high (003E8h) == 0)
                          M         MOVE?CA 003E8h
                          M         L?CALL  PAUSE
                          M     else
                          M         MOVE?CB high (003E8h), R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low (high (003E8h)) == 0)
                          M         clrf    R1 + 1
                          M     else
000280 0E03               M         movlw   low (high (003E8h))
000282 6E04               M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (003E8h)
000284 0EE8               M         movlw   low (low (003E8h))
                          M         L?CALL  PAUSEL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEL
                          M     else
                          M       if ((PAUSEL) < 1)
                          M         call    PAUSEL
                          M       else
                          M         if ((PAUSEL) > $)
                          M         call    PAUSEL
                          M         else
                          M           if ((PAUSEL) < ($ - 3ffh))
                          M         call    PAUSEL
                          M           else
000286 DF5B               M         rcall   PAUSEL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00089         MOVE?CW 064h, _p_pwm_val
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         movlw   low (064h)
                          M         movwf   _p_pwm_val
                          M         movlw   high (064h)
                          M         movwf   (_p_pwm_val) + 1
                          M     else
                          M       if (low (064h) == 0)
                          M         clrf    _p_pwm_val
                          M       else
000288 0E64               M         movlw   low (064h)
00028A 6E1E               M         movwf   _p_pwm_val
                          M       endif
                          M       if ((high (064h)) == 0)
00028C 6A1F               M         clrf    (_p_pwm_val) + 1
                          M       else
                          M         movlw   high (064h)
                          M         movwf   (_p_pwm_val) + 1
                          M       endif
                          M     endif
                      00090         MOVE?TT _p_pwm_val??0, _CCP1CON??4
                          M     if (((_p_pwm_val) <= BANKA_END) | ((_p_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
00028E B01E               M         btfsc   _p_pwm_val, 000h
000290 88BD               M         bsf     CCP1CON, 004h
000292 A01E               M         btfss   _p_pwm_val, 000h
000294 98BD               M         bcf     CCP1CON, 004h
                          M     else
                          M       if (((_p_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _p_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _p_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M           else
                          M         MOVE?TA _p_pwm_val, 000h
                          M         MOVE?AT CCP1CON, 004h
                          M           endif
                          M       endif
                          M     endif
                      00091         MOVE?TT _p_pwm_val??1, _CCP1CON??5
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_p_pwm_val) <= BANKA_END) | ((_p_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
000296 B21E               M         btfsc   _p_pwm_val, 001h
000298 8ABD               M         bsf     CCP1CON, 005h
00029A A21E               M         btfss   _p_pwm_val, 001h
00029C 9ABD               M         bcf     CCP1CON, 005h
                          M     else
                          M       if (((_p_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _p_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _p_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M           else
                          M         MOVE?TA _p_pwm_val, 001h
                          M         MOVE?AT CCP1CON, 005h
                          M           endif
                          M       endif
                          M     endif
                      00092         SHIFTR?WCB      _p_pwm_val, 002h, CCPR1L
                          M     if (002h == 1)
                          M         CHK?RP  _p_pwm_val
                          M         rrcf    _p_pwm_val + 1, W
                          M         rrcf    _p_pwm_val, W
                          M         MOVE?AB CCPR1L
                          M     else
                          M         MOVE?WW _p_pwm_val, R0
                          M         MOVE?BB _p_pwm_val, R0
00029E C01E F001          M         movff   _p_pwm_val, R0
                          M         MOVE?BB (_p_pwm_val) + 1, (R0) + 1
0002A2 C01F F002          M         movff   (_p_pwm_val) + 1, (R0) + 1
                          M         MOVE?CA 002h
0002A6 0E02               M         movlw   low (002h)
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
0002A8 DF6F               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB CCPR1L
                          M         CHK?RP  CCPR1L
                          M     if (((CCPR1L) > BANKA_END) & ((CCPR1L) < (0f01h + BANKA_END)))
                          M       if (((CCPR1L) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCPR1L)
                          M PREV_BANK = high (CCPR1L)
                          M       endif
                          M     endif
0002AA 6EBE               M         movwf   CCPR1L
                          M     endif
                      00093 
                      00094         LABEL?L _main   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _main
                          M         XALL
                          M     else
0002AC                    M _main
                          M     endif
                      00095         MOVE?CB 00Dh, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (00Dh) == 0)
                          M         clrf    ADCON0
                          M     else
0002AC 0E0D               M         movlw   low (00Dh)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002AE 6EC2               M         movwf   ADCON0
                          M     endif
                      00096         ADCIN?CW        003h, _p_ref
                          M         MOVE?CA 003h
0002B0 0E03               M         movlw   low (003h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
                          M         call    ADCIN
                          M           else
0002B2 DF2C               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _p_ref
                          M         MOVE?AB _p_ref
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
0002B4 6E20               M         movwf   _p_ref
                          M         MOVE?BB (R0)  + 1, (_p_ref) + 1
0002B6 C002 F021          M         movff   (R0) + 1, (_p_ref) + 1
                      00097         MUL?WCW _p_ref, 03Fh, T1
                          M         MOVE?WW _p_ref, R3
                          M         MOVE?BB _p_ref, R3
0002BA C020 F007          M         movff   _p_ref, R3
                          M         MOVE?BB (_p_ref) + 1, (R3) + 1
0002BE C021 F008          M         movff   (_p_ref) + 1, (R3) + 1
                          M         MOVE?CW 03Fh, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (03Fh)
                          M         movwf   R1
                          M         movlw   high (03Fh)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (03Fh) == 0)
                          M         clrf    R1
                          M       else
0002C2 0E3F               M         movlw   low (03Fh)
0002C4 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (03Fh)) == 0)
0002C6 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (03Fh)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
0002C8 DF92               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0002CA 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
0002CC C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00098         DIV?WCW T1, 008h, _pressure_ref
                          M     if (008h == 2)
                          M         bcf     STATUS, C
                          M       if (_pressure_ref == T1)
                          M         CHK?RP  _pressure_ref
                          M         rrcf    _pressure_ref + 1, F
                          M         rrcf    _pressure_ref, F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB _pressure_ref + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB _pressure_ref
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
0002D0 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0002D4 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 008h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (008h)
                          M         movwf   R1
                          M         movlw   high (008h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (008h) == 0)
                          M         clrf    R1
                          M       else
0002D8 0E08               M         movlw   low (008h)
0002DA 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (008h)) == 0)
0002DC 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (008h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
0002DE DF6F               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _pressure_ref
                          M         MOVE?AB _pressure_ref
                          M         CHK?RP  _pressure_ref
                          M     if (((_pressure_ref) > BANKA_END) & ((_pressure_ref) < (0f01h + BANKA_END)))
                          M       if (((_pressure_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_pressure_ref)
                          M PREV_BANK = high (_pressure_ref)
                          M       endif
                          M     endif
0002E0 6E26               M         movwf   _pressure_ref
                          M         MOVE?BB (R0)  + 1, (_pressure_ref) + 1
0002E2 C002 F027          M         movff   (R0) + 1, (_pressure_ref) + 1
                          M     endif
                      00099         GOSUB?L _get_pressure
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  _get_pressure
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_pressure
                          M     else
                          M       if ((_get_pressure) < 1)
                          M         call    _get_pressure
                          M       else
                          M         if ((_get_pressure) > $)
0002E6 EC22 F002          M         call    _get_pressure
                          M         else
                          M           if ((_get_pressure) < ($ - 3ffh))
                          M         call    _get_pressure
                          M           else
                          M         rcall   _get_pressure
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0002EA                    M dlabel
                      00100         GOSUB?L _get_water_p_pwm
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _get_water_p_pwm
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_water_p_pwm
                          M     else
                          M       if ((_get_water_p_pwm) < 1)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    _get_water_p_pwm
                          M       else
                          M         if ((_get_water_p_pwm) > $)
0002EA EC62 F002          M         call    _get_water_p_pwm
                          M         else
                          M           if ((_get_water_p_pwm) < ($ - 3ffh))
                          M         call    _get_water_p_pwm
                          M           else
                          M         rcall   _get_water_p_pwm
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0002EE                    M dlabel
                      00101         MOVE?TT _p_pwm_val??0, _CCP1CON??4
                          M     if (((_p_pwm_val) <= BANKA_END) | ((_p_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
0002EE B01E               M         btfsc   _p_pwm_val, 000h
0002F0 88BD               M         bsf     CCP1CON, 004h
0002F2 A01E               M         btfss   _p_pwm_val, 000h
0002F4 98BD               M         bcf     CCP1CON, 004h
                          M     else
                          M       if (((_p_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _p_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _p_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M           else
                          M         MOVE?TA _p_pwm_val, 000h
                          M         MOVE?AT CCP1CON, 004h
                          M           endif
                          M       endif
                          M     endif
                      00102         MOVE?TT _p_pwm_val??1, _CCP1CON??5
                          M     if (((_p_pwm_val) <= BANKA_END) | ((_p_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
0002F6 B21E               M         btfsc   _p_pwm_val, 001h
0002F8 8ABD               M         bsf     CCP1CON, 005h
0002FA A21E               M         btfss   _p_pwm_val, 001h
0002FC 9ABD               M         bcf     CCP1CON, 005h
                          M     else
                          M       if (((_p_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _p_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _p_pwm_val
                          M         btfsc   _p_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _p_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M           else
                          M         MOVE?TA _p_pwm_val, 001h
                          M         MOVE?AT CCP1CON, 005h
                          M           endif
                          M       endif
                          M     endif
                      00103         SHIFTR?WCB      _p_pwm_val, 002h, CCPR1L
                          M     if (002h == 1)
                          M         CHK?RP  _p_pwm_val
                          M         rrcf    _p_pwm_val + 1, W
                          M         rrcf    _p_pwm_val, W
                          M         MOVE?AB CCPR1L
                          M     else
                          M         MOVE?WW _p_pwm_val, R0
                          M         MOVE?BB _p_pwm_val, R0
0002FE C01E F001          M         movff   _p_pwm_val, R0
                          M         MOVE?BB (_p_pwm_val) + 1, (R0) + 1
000302 C01F F002          M         movff   (_p_pwm_val) + 1, (R0) + 1
                          M         MOVE?CA 002h
000306 0E02               M         movlw   low (002h)
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
000308 DF3F               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB CCPR1L
                          M         CHK?RP  CCPR1L
                          M     if (((CCPR1L) > BANKA_END) & ((CCPR1L) < (0f01h + BANKA_END)))
                          M       if (((CCPR1L) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCPR1L)
                          M PREV_BANK = high (CCPR1L)
                          M       endif
                          M     endif
00030A 6EBE               M         movwf   CCPR1L
                          M     endif
                      00104         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
00030C 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00030E DE7C               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00105         LCDOUT?C        001h
                          M         MOVE?CA 001h
000310 0E01               M         movlw   low (001h)
                          M         L?CALL  LCDOUT
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000312 DE7A               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00106         LCDOUT?C        070h
                          M         MOVE?CA 070h
000314 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000316 DE78               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00107         LCDOUT?C        05Fh
                          M         MOVE?CA 05Fh
000318 0E5F               M         movlw   low (05Fh)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00031A DE76               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00108         LCDOUT?C        069h
                          M         MOVE?CA 069h
00031C 0E69               M         movlw   low (069h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00031E DE74               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00109         LCDOUT?C        06Eh
                          M         MOVE?CA 06Eh
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000320 0E6E               M         movlw   low (06Eh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000322 DE72               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00110         LCDOUT?C        03Dh
                          M         MOVE?CA 03Dh
000324 0E3D               M         movlw   low (03Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000326 DE70               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00111         LCDOUTCOUNT?C   000h
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000328 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00112         LCDOUTNUM?W     _p_in
                          M         MOVE?WW _p_in, R2
                          M         MOVE?BB _p_in, R2
00032A C01C F005          M         movff   _p_in, R2
                          M         MOVE?BB (_p_in) + 1, (R2) + 1
00032E C01D F006          M         movff   (_p_in) + 1, (R2) + 1
                      00113         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000332 0E06               M         movlw   low (LCDOUTJ)
000334 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000336 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
000338 DEBB               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00114         LCDOUT?C        020h
                          M         MOVE?CA 020h
00033A 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00033C DE65               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00115         LCDOUT?C        020h
                          M         MOVE?CA 020h
00033E 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000340 DE63               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00116         LCDOUT?C        070h
                          M         MOVE?CA 070h
000342 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000344 DE61               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00117         LCDOUT?C        072h
                          M         MOVE?CA 072h
000346 0E72               M         movlw   low (072h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000348 DE5F               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00118         LCDOUT?C        065h
                          M         MOVE?CA 065h
00034A 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00034C DE5D               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00119         LCDOUT?C        073h
                          M         MOVE?CA 073h
00034E 0E73               M         movlw   low (073h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000350 DE5B               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00120         LCDOUT?C        03Dh
                          M         MOVE?CA 03Dh
000352 0E3D               M         movlw   low (03Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000354 DE59               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00121         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000356 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00122         LCDOUTNUM?W     _pressure
                          M         MOVE?WW _pressure, R2
                          M         MOVE?BB _pressure, R2
000358 C024 F005          M         movff   _pressure, R2
                          M         MOVE?BB (_pressure) + 1, (R2) + 1
00035C C025 F006          M         movff   (_pressure) + 1, (R2) + 1
                      00123         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000360 0E06               M         movlw   low (LCDOUTJ)
000362 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000364 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
000366 DEA4               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00124         LCDOUT?C        020h
                          M         MOVE?CA 020h
000368 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00036A DE4E               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00125         LCDOUT?C        020h
                          M         MOVE?CA 020h
00036C 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00036E DE4C               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00126         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
000370 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000372 DE4A               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00127         LCDOUT?C        0C0h
                          M         MOVE?CA 0C0h
000374 0EC0               M         movlw   low (0C0h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000376 DE48               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00128         LCDOUT?C        070h
                          M         MOVE?CA 070h
000378 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00037A DE46               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00129         LCDOUT?C        05Fh
                          M         MOVE?CA 05Fh
00037C 0E5F               M         movlw   low (05Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00037E DE44               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00130         LCDOUT?C        076h
                          M         MOVE?CA 076h
000380 0E76               M         movlw   low (076h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000382 DE42               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00131         LCDOUT?C        061h
                          M         MOVE?CA 061h
000384 0E61               M         movlw   low (061h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000386 DE40               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00132         LCDOUT?C        06Ch
                          M         MOVE?CA 06Ch
000388 0E6C               M         movlw   low (06Ch)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00038A DE3E               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00133         LCDOUT?C        03Dh
                          M         MOVE?CA 03Dh
00038C 0E3D               M         movlw   low (03Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00038E DE3C               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00134         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000390 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00135         LCDOUTNUM?W     _p_val
                          M         MOVE?WW _p_val, R2
                          M         MOVE?BB _p_val, R2
000392 C022 F005          M         movff   _p_val, R2
                          M         MOVE?BB (_p_val) + 1, (R2) + 1
000396 C023 F006          M         movff   (_p_val) + 1, (R2) + 1
                      00136         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
00039A 0E06               M         movlw   low (LCDOUTJ)
00039C 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
00039E 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
0003A0 DE87               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00137         LCDOUT?C        020h
                          M         MOVE?CA 020h
0003A2 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003A4 DE31               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00138         LCDOUT?C        020h
                          M         MOVE?CA 020h
0003A6 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003A8 DE2F               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00139         LCDOUT?C        072h
                          M         MOVE?CA 072h
0003AA 0E72               M         movlw   low (072h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003AC DE2D               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00140         LCDOUT?C        065h
                          M         MOVE?CA 065h
0003AE 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003B0 DE2B               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00141         LCDOUT?C        066h
                          M         MOVE?CA 066h
0003B2 0E66               M         movlw   low (066h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003B4 DE29               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00142         LCDOUT?C        03Dh
                          M         MOVE?CA 03Dh
0003B6 0E3D               M         movlw   low (03Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003B8 DE27               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00143         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (low (000h) == 0)
0003BA 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00144         LCDOUTNUM?W     _p_ref
                          M         MOVE?WW _p_ref, R2
                          M         MOVE?BB _p_ref, R2
0003BC C020 F005          M         movff   _p_ref, R2
                          M         MOVE?BB (_p_ref) + 1, (R2) + 1
0003C0 C021 F006          M         movff   (_p_ref) + 1, (R2) + 1
                      00145         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
0003C4 0E06               M         movlw   low (LCDOUTJ)
0003C6 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
0003C8 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
0003CA DE72               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00146         LCDOUT?C        020h
                          M         MOVE?CA 020h
0003CC 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003CE DE1C               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00147         LCDOUT?C        070h
                          M         MOVE?CA 070h
0003D0 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003D2 DE1A               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00148         LCDOUT?C        072h
                          M         MOVE?CA 072h
0003D4 0E72               M         movlw   low (072h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003D6 DE18               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00149         LCDOUT?C        065h
                          M         MOVE?CA 065h
0003D8 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003DA DE16               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00150         LCDOUT?C        073h
                          M         MOVE?CA 073h
0003DC 0E73               M         movlw   low (073h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003DE DE14               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00151         LCDOUT?C        05Fh
                          M         MOVE?CA 05Fh
0003E0 0E5F               M         movlw   low (05Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003E2 DE12               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00152         LCDOUT?C        072h
                          M         MOVE?CA 072h
0003E4 0E72               M         movlw   low (072h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003E6 DE10               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00153         LCDOUT?C        065h
                          M         MOVE?CA 065h
0003E8 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003EA DE0E               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00154         LCDOUT?C        066h
                          M         MOVE?CA 066h
0003EC 0E66               M         movlw   low (066h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003EE DE0C               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00155         LCDOUT?C        03Dh
                          M         MOVE?CA 03Dh
0003F0 0E3D               M         movlw   low (03Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003F2 DE0A               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00156         LCDOUT?C        020h
                          M         MOVE?CA 020h
0003F4 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003F6 DE08               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00157         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F8 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00158         LCDOUTNUM?W     _pressure_ref
                          M         MOVE?WW _pressure_ref, R2
                          M         MOVE?BB _pressure_ref, R2
0003FA C026 F005          M         movff   _pressure_ref, R2
                          M         MOVE?BB (_pressure_ref) + 1, (R2) + 1
0003FE C027 F006          M         movff   (_pressure_ref) + 1, (R2) + 1
                      00159         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000402 0E06               M         movlw   low (LCDOUTJ)
000404 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000406 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
000408 DE53               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00160         LCDOUT?C        020h
                          M         MOVE?CA 020h
00040A 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00040C EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00161         LCDOUT?C        070h
                          M         MOVE?CA 070h
000410 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000412 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00162         LCDOUT?C        077h
                          M         MOVE?CA 077h
000416 0E77               M         movlw   low (077h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000418 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00163         LCDOUT?C        06Dh
                          M         MOVE?CA 06Dh
00041C 0E6D               M         movlw   low (06Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00041E EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00164         LCDOUT?C        03Dh
                          M         MOVE?CA 03Dh
000422 0E3D               M         movlw   low (03Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000424 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00165         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000428 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00166         LCDOUTNUM?W     _p_pwm_val
                          M         MOVE?WW _p_pwm_val, R2
                          M         MOVE?BB _p_pwm_val, R2
00042A C01E F005          M         movff   _p_pwm_val, R2
                          M         MOVE?BB (_p_pwm_val) + 1, (R2) + 1
00042E C01F F006          M         movff   (_p_pwm_val) + 1, (R2) + 1
                      00167         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000432 0E06               M         movlw   low (LCDOUTJ)
000434 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000436 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
000438 DE3B               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00168         PAUSE?C 0FAh
                          M     if (high (0FAh) == 0)
                          M         MOVE?CA 0FAh
00043A 0EFA               M         movlw   low (0FAh)
                          M         L?CALL  PAUSE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSE
                          M     else
                          M       if ((PAUSE) < 1)
                          M         call    PAUSE
                          M       else
                          M         if ((PAUSE) > $)
                          M         call    PAUSE
                          M         else
                          M           if ((PAUSE) < ($ - 3ffh))
                          M         call    PAUSE
                          M           else
00043C DE7F               M         rcall   PAUSE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M         MOVE?CB high (0FAh), R1 + 1
                          M         MOVE?CA low (0FAh)
                          M         L?CALL  PAUSEL
                          M     endif
                      00169         GOTO?L  _main
                          M         L?GOTO  _main
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_main))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _main
                          M     else
                          M       if ((_main) < 1)
                          M         goto    _main
                          M       else
                          M         if ((_main) > $)
                          M         goto    _main
                          M         else
                          M           if ((_main) < ($ - 3ffh))
                          M         goto    _main
                          M           else
00043E D736               M         bra     _main
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00170         END?    
  0000                    M     local loop
000440 0003               M loop    sleep
000442 D7FE               M         bra     loop
                      00171 
                      00172         LABEL?L _get_pressure   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_pressure
                          M         XALL
                          M     else
000444                    M _get_pressure
                          M     endif
                      00173         MOVE?CB 011h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (011h) == 0)
                          M         clrf    ADCON0
                          M     else
000444 0E11               M         movlw   low (011h)
000446 6EC2               M         movwf   ADCON0
                          M     endif
                      00174         ADCIN?CW        004h, _p_in
                          M         MOVE?CA 004h
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000448 0E04               M         movlw   low (004h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
                          M         call    ADCIN
                          M           else
00044A DE60               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _p_in
                          M         MOVE?AB _p_in
                          M         CHK?RP  _p_in
                          M     if (((_p_in) > BANKA_END) & ((_p_in) < (0f01h + BANKA_END)))
                          M       if (((_p_in) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_in)
                          M PREV_BANK = high (_p_in)
                          M       endif
                          M     endif
00044C 6E1C               M         movwf   _p_in
                          M         MOVE?BB (R0)  + 1, (_p_in) + 1
00044E C002 F01D          M         movff   (R0) + 1, (_p_in) + 1
                      00175         MUL?WCW _p_in, 03Ch, T1
                          M         MOVE?WW _p_in, R3
                          M         MOVE?BB _p_in, R3
000452 C01C F007          M         movff   _p_in, R3
                          M         MOVE?BB (_p_in) + 1, (R3) + 1
000456 C01D F008          M         movff   (_p_in) + 1, (R3) + 1
                          M         MOVE?CW 03Ch, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (03Ch)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R1
                          M         movlw   high (03Ch)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (03Ch) == 0)
                          M         clrf    R1
                          M       else
00045A 0E3C               M         movlw   low (03Ch)
00045C 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (03Ch)) == 0)
00045E 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (03Ch)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000460 DEC6               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000462 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000464 C006 F014          M         movff   (R2) + 1, (T1) + 1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00176         DIV?WCW T1, 038h, T1
                          M     if (038h == 2)
                          M         bcf     STATUS, C
                          M       if (T1   == T1)
                          M         CHK?RP  T1
                          M         rrcf    T1   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000468 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00046C C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 038h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (038h)
                          M         movwf   R1
                          M         movlw   high (038h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (038h) == 0)
                          M         clrf    R1
                          M       else
000470 0E38               M         movlw   low (038h)
000472 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (038h)) == 0)
000474 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (038h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
000476 DEA3               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000478 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
00047A C002 F014          M         movff   (R0) + 1, (T1) + 1
                          M     endif
                      00177         SUB?WCW T1, 023h, _p_val
                          M     if (_p_val == T1)
                          M         movlw   low (023h)
                          M         CHK?RP  _p_val
                          M         subwf   _p_val, F
                          M         movlw   (023h) >> 8
                          M         subwfb  _p_val + 1, F
                          M     else
00047E 0E23               M         movlw   low (023h)
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000480 5C13               M         subwf   T1,  W
                          M         MOVE?AB _p_val
                          M         CHK?RP  _p_val
                          M     if (((_p_val) > BANKA_END) & ((_p_val) < (0f01h + BANKA_END)))
                          M       if (((_p_val) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_p_val)
                          M PREV_BANK = high (_p_val)
                          M       endif
                          M     endif
000482 6E22               M         movwf   _p_val
000484 0E00               M         movlw   (023h) >> 8
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000486 5814               M         subwfb  T1  + 1, W
                          M         MOVE?AB _p_val + 1
                          M         CHK?RP  _p_val + 1
                          M     if (((_p_val + 1) > BANKA_END) & ((_p_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_p_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val + 1)
                          M PREV_BANK = high (_p_val + 1)
                          M       endif
                          M     endif
000488 6E23               M         movwf   _p_val + 1
                          M     endif
                      00178         MUL?WCW _p_in, 019h, T1
                          M         MOVE?WW _p_in, R3
                          M         MOVE?BB _p_in, R3
00048A C01C F007          M         movff   _p_in, R3
                          M         MOVE?BB (_p_in) + 1, (R3) + 1
00048E C01D F008          M         movff   (_p_in) + 1, (R3) + 1
                          M         MOVE?CW 019h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (019h)
                          M         movwf   R1
                          M         movlw   high (019h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (019h) == 0)
                          M         clrf    R1
                          M       else
000492 0E19               M         movlw   low (019h)
000494 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (019h)) == 0)
000496 6A04               M         clrf    (R1)   + 1
                          M       else
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   high (019h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000498 DEAA               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00049A 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
00049C C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00179         DIV?WCW T1, 003h, T1
                          M     if (003h == 2)
                          M         bcf     STATUS, C
                          M       if (T1   == T1)
                          M         CHK?RP  T1
                          M         rrcf    T1   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
0004A0 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0004A4 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 003h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (003h)
                          M         movwf   R1
                          M         movlw   high (003h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (003h) == 0)
                          M         clrf    R1
                          M       else
0004A8 0E03               M         movlw   low (003h)
0004AA 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (003h)) == 0)
0004AC 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (003h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
0004AE DE87               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0004B0 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
0004B2 C002 F014          M         movff   (R0) + 1, (T1) + 1
                          M     endif
                      00180         SUB?WCW T1, 00115h, _pressure
                          M     if (_pressure == T1)
                          M         movlw   low (00115h)
                          M         CHK?RP  _pressure
                          M         subwf   _pressure, F
                          M         movlw   (00115h) >> 8
                          M         subwfb  _pressure + 1, F
                          M     else
0004B6 0E15               M         movlw   low (00115h)
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0004B8 5C13               M         subwf   T1,  W
                          M         MOVE?AB _pressure
                          M         CHK?RP  _pressure
                          M     if (((_pressure) > BANKA_END) & ((_pressure) < (0f01h + BANKA_END)))
                          M       if (((_pressure) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_pressure)
                          M PREV_BANK = high (_pressure)
                          M       endif
                          M     endif
0004BA 6E24               M         movwf   _pressure
0004BC 0E01               M         movlw   (00115h) >> 8
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004BE 5814               M         subwfb  T1  + 1, W
                          M         MOVE?AB _pressure + 1
                          M         CHK?RP  _pressure + 1
                          M     if (((_pressure + 1) > BANKA_END) & ((_pressure + 1) < (0f01h + BANKA_END)))
                          M       if (((_pressure + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_pressure + 1)
                          M PREV_BANK = high (_pressure + 1)
                          M       endif
                          M     endif
0004C0 6E25               M         movwf   _pressure + 1
                          M     endif
                      00181         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
0004C2 0012               M         return
                      00182 
                      00183         LABEL?L _get_water_p_pwm        
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_water_p_pwm
                          M         XALL
                          M     else
0004C4                    M _get_water_p_pwm
                          M     endif
                      00184         CMPGE?WWL       _p_val, _p_ref, L00001
                          M         MOVE?WW _p_val, R0
                          M         MOVE?BB _p_val, R0
0004C4 C022 F001          M         movff   _p_val, R0
                          M         MOVE?BB (_p_val) + 1, (R0) + 1
0004C8 C023 F002          M         movff   (_p_val) + 1, (R0) + 1
                          M         MOVE?WWA _p_ref, R1
                          M         MOVE?BB (_p_ref) + 1, (R1) + 1
0004CC C021 F004          M         movff   (_p_ref) + 1, (R1) + 1
                          M         MOVE?BA _p_ref
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004D0 5020               M         movf    _p_ref, W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
                          M         call    CMPGE
                          M           else
0004D2 DE5F               M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00001
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0004D4 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
0004D6 EFA6 F002          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
                          M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00185         CMPGE?WCL       _p_pwm_val, 078h, L00003
                          M         MOVE?WW _p_pwm_val, R0
                          M         MOVE?BB _p_pwm_val, R0
0004DA C01E F001          M         movff   _p_pwm_val, R0
                          M         MOVE?BB (_p_pwm_val) + 1, (R0) + 1
0004DE C01F F002          M         movff   (_p_pwm_val) + 1, (R0) + 1
                          M         MOVE?CB (078h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (low ((078h) >> 8) == 0)
0004E2 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((078h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (078h)
0004E4 0E78               M         movlw   low (low (078h))
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
                          M         call    CMPGE
                          M           else
0004E6 DE55               M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00003))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M             else
                          M         bov     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0004E8 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
0004EA EFA3 F002          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 3ffh))
                          M         goto    L00003
                          M             else
                          M         bra     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00186         SUB?WWW _p_ref, _p_val, T1
                          M     if (T1   == _p_ref)
                          M         MOVE?BA _p_val
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _p_val + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _p_val
                          M         CHK?RP  _p_val
                          M     if (((_p_val) > BANKA_END) & ((_p_val) < (0f01h + BANKA_END)))
                          M       if (((_p_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val)
                          M PREV_BANK = high (_p_val)
                          M       endif
                          M     endif
0004EE 5022               M         movf    _p_val, W
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
0004F0 5C20               M         subwf   _p_ref, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0004F2 6E13               M         movwf   T1
                          M         MOVE?BA _p_val + 1
                          M         CHK?RP  _p_val + 1
                          M     if (((_p_val + 1) > BANKA_END) & ((_p_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_p_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val + 1)
                          M PREV_BANK = high (_p_val + 1)
                          M       endif
                          M     endif
0004F4 5023               M         movf    _p_val + 1, W
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
0004F6 5821               M         subwfb  _p_ref + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0004F8 6E14               M         movwf   T1 + 1
                          M     endif
                      00187         CMPLE?WCL       T1, 005h, L00005
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
0004FA C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0004FE C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CB (005h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((005h) >> 8) == 0)
000502 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((005h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (005h)
000504 0E05               M         movlw   low (low (005h))
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
                          M         call    CMPLE
                          M           else
000506 DE48               M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00005
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00005))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M             else
                          M         bov     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000508 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00005
                          M       else
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((L00005) < 1)
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
00050A EF9E F002          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 3ffh))
                          M         goto    L00005
                          M             else
                          M         bra     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00188         SUB?WWW _p_ref, _p_val, T1
                          M     if (T1   == _p_ref)
                          M         MOVE?BA _p_val
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _p_val + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _p_val
                          M         CHK?RP  _p_val
                          M     if (((_p_val) > BANKA_END) & ((_p_val) < (0f01h + BANKA_END)))
                          M       if (((_p_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val)
                          M PREV_BANK = high (_p_val)
                          M       endif
                          M     endif
00050E 5022               M         movf    _p_val, W
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
000510 5C20               M         subwf   _p_ref, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000512 6E13               M         movwf   T1
                          M         MOVE?BA _p_val + 1
                          M         CHK?RP  _p_val + 1
                          M     if (((_p_val + 1) > BANKA_END) & ((_p_val + 1) < (0f01h + BANKA_END)))
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((_p_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val + 1)
                          M PREV_BANK = high (_p_val + 1)
                          M       endif
                          M     endif
000514 5023               M         movf    _p_val + 1, W
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
000516 5821               M         subwfb  _p_ref + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000518 6E14               M         movwf   T1 + 1
                          M     endif
                      00189         DIV?WCW T1, 032h, T1
                          M     if (032h == 2)
                          M         bcf     STATUS, C
                          M       if (T1   == T1)
                          M         CHK?RP  T1
                          M         rrcf    T1   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
00051A C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00051E C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
000522 0E32               M         movlw   low (032h)
000524 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
000526 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
000528 DE4A               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00052A 6E13               M         movwf   T1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB (R0)  + 1, (T1)   + 1
00052C C002 F014          M         movff   (R0) + 1, (T1) + 1
                          M     endif
                      00190         ADD?WWW _p_pwm_val, T1, _p_pwm_val
                          M     if (_p_pwm_val == _p_pwm_val)
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000530 5013               M         movf    T1,  W
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
000532 261E               M         addwf   _p_pwm_val, F
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000534 5014               M         movf    T1 + 1, W
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
000536 221F               M         addwfc  _p_pwm_val + 1, F
                          M     else
                          M       if (_p_pwm_val == T1)
                          M         MOVE?BA _p_pwm_val
                          M         CHK?RP  _p_pwm_val
                          M         addwf   _p_pwm_val, F
                          M         MOVE?BA _p_pwm_val + 1
                          M         CHK?RP  _p_pwm_val
                          M         addwfc  _p_pwm_val + 1, F
                          M       else
                          M         MOVE?BA _p_pwm_val
                          M         CHK?RP  T1
                          M         addwf   T1,   W
                          M         MOVE?AB _p_pwm_val
                          M         MOVE?BA _p_pwm_val + 1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T1
                          M         addwfc  T1   + 1, W
                          M         MOVE?AB _p_pwm_val + 1
                          M       endif
                          M     endif
                      00191         GOTO?L  L00006
                          M         L?GOTO  L00006
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00006))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00006
                          M     else
                          M       if ((L00006) < 1)
                          M         goto    L00006
                          M       else
                          M         if ((L00006) > $)
000538 EFA1 F002          M         goto    L00006
                          M         else
                          M           if ((L00006) < ($ - 3ffh))
                          M         goto    L00006
                          M           else
                          M         bra     L00006
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00192         LABEL?L L00005  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00005
                          M         XALL
                          M     else
00053C                    M L00005
                          M     endif
                      00193         ADD?WCW _p_pwm_val, 001h, _p_pwm_val
                          M     if (_p_pwm_val == _p_pwm_val)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((001h) == 1)
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
00053C 2A1E               M         incf    _p_pwm_val, F
00053E B4D8               M         btfsc   STATUS, Z
000540 2A1F               M         incf    _p_pwm_val + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  _p_pwm_val
                          M         addwf   _p_pwm_val, F
                          M         movlw   (001h) >> 8
                          M         addwfc  _p_pwm_val + 1, F
                          M       endif
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _p_pwm_val
                          M         addwf   _p_pwm_val, W
                          M         MOVE?AB _p_pwm_val
                          M         movlw   (001h) >> 8
                          M         CHK?RP  _p_pwm_val
                          M         addwfc  _p_pwm_val + 1, W
                          M         MOVE?AB _p_pwm_val + 1
                          M     endif
                      00194         LABEL?L L00006  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00006
                          M         XALL
                          M     else
000542                    M L00006
                          M     endif
                      00195         GOTO?L  L00004
                          M         L?GOTO  L00004
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00004))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00004
                          M     else
                          M       if ((L00004) < 1)
                          M         goto    L00004
                          M       else
                          M         if ((L00004) > $)
000542 EFA6 F002          M         goto    L00004
                          M         else
                          M           if ((L00004) < ($ - 3ffh))
                          M         goto    L00004
                          M           else
                          M         bra     L00004
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00196         LABEL?L L00003  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00003
                          M         XALL
                          M     else
000546                    M L00003
                          M     endif
                      00197         MOVE?CW 078h, _p_pwm_val
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (078h)
                          M         movwf   _p_pwm_val
                          M         movlw   high (078h)
                          M         movwf   (_p_pwm_val) + 1
                          M     else
                          M       if (low (078h) == 0)
                          M         clrf    _p_pwm_val
                          M       else
000546 0E78               M         movlw   low (078h)
000548 6E1E               M         movwf   _p_pwm_val
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if ((high (078h)) == 0)
00054A 6A1F               M         clrf    (_p_pwm_val) + 1
                          M       else
                          M         movlw   high (078h)
                          M         movwf   (_p_pwm_val) + 1
                          M       endif
                          M     endif
                      00198         LABEL?L L00004  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00004
                          M         XALL
                          M     else
00054C                    M L00004
                          M     endif
                      00199         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
                          M     else
00054C                    M L00001
                          M     endif
                      00200         CMPLE?WWL       _p_val, _p_ref, L00007
                          M         MOVE?WW _p_val, R0
                          M         MOVE?BB _p_val, R0
00054C C022 F001          M         movff   _p_val, R0
                          M         MOVE?BB (_p_val) + 1, (R0) + 1
000550 C023 F002          M         movff   (_p_val) + 1, (R0) + 1
                          M         MOVE?WWA _p_ref, R1
                          M         MOVE?BB (_p_ref) + 1, (R1) + 1
000554 C021 F004          M         movff   (_p_ref) + 1, (R1) + 1
                          M         MOVE?BA _p_ref
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
000558 5020               M         movf    _p_ref, W
                          M         L?CALL  CMPLE
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
                          M         call    CMPLE
                          M           else
00055A DE1E               M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00007
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00007))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00007) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M             else
                          M         bov     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
00055C A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
00055E EFEB F002          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 3ffh))
                          M         goto    L00007
                          M             else
                          M         bra     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00201         CMPLE?WCL       _p_pwm_val, 032h, L00009
                          M         MOVE?WW _p_pwm_val, R0
                          M         MOVE?BB _p_pwm_val, R0
000562 C01E F001          M         movff   _p_pwm_val, R0
                          M         MOVE?BB (_p_pwm_val) + 1, (R0) + 1
000566 C01F F002          M         movff   (_p_pwm_val) + 1, (R0) + 1
                          M         MOVE?CB (032h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (low ((032h) >> 8) == 0)
00056A 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((032h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (032h)
00056C 0E32               M         movlw   low (low (032h))
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
                          M         call    CMPLE
                          M           else
00056E DE14               M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00009
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00009))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M             else
                          M         bov     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000570 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
000572 EFE8 F002          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 3ffh))
                          M         goto    L00009
                          M             else
                          M         bra     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00202         SUB?WWW _p_val, _p_ref, T1
                          M     if (T1   == _p_val)
                          M         MOVE?BA _p_ref
                          M         CHK?RP  T1
                          M         subwf   T1,   F
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BA _p_ref + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _p_ref
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
000576 5020               M         movf    _p_ref, W
                          M         CHK?RP  _p_val
                          M     if (((_p_val) > BANKA_END) & ((_p_val) < (0f01h + BANKA_END)))
                          M       if (((_p_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val)
                          M PREV_BANK = high (_p_val)
                          M       endif
                          M     endif
000578 5C22               M         subwf   _p_val, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00057A 6E13               M         movwf   T1
                          M         MOVE?BA _p_ref + 1
                          M         CHK?RP  _p_ref + 1
                          M     if (((_p_ref + 1) > BANKA_END) & ((_p_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_p_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref + 1)
                          M PREV_BANK = high (_p_ref + 1)
                          M       endif
                          M     endif
00057C 5021               M         movf    _p_ref + 1, W
                          M         CHK?RP  _p_val
                          M     if (((_p_val) > BANKA_END) & ((_p_val) < (0f01h + BANKA_END)))
                          M       if (((_p_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val)
                          M PREV_BANK = high (_p_val)
                          M       endif
                          M     endif
00057E 5823               M         subwfb  _p_val + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000580 6E14               M         movwf   T1 + 1
                          M     endif
                      00203         CMPLE?WCL       T1, 005h, L00011
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000582 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000586 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CB (005h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((005h) >> 8) == 0)
00058A 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((005h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (005h)
00058C 0E05               M         movlw   low (low (005h))
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
                          M         call    CMPLE
                          M           else
00058E DE04               M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00011
                          M     ifdef USE_LINKER
                          M         CLRWDT?
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ($ == (L00011))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M             else
                          M         bov     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000590 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         goto    L00011
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((L00011) > $)
000592 EFE2 F002          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 3ffh))
                          M         goto    L00011
                          M             else
                          M         bra     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00204         SUB?WWW _p_val, _p_ref, T1
                          M     if (T1   == _p_val)
                          M         MOVE?BA _p_ref
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _p_ref + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _p_ref
                          M         CHK?RP  _p_ref
                          M     if (((_p_ref) > BANKA_END) & ((_p_ref) < (0f01h + BANKA_END)))
                          M       if (((_p_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref)
                          M PREV_BANK = high (_p_ref)
                          M       endif
                          M     endif
000596 5020               M         movf    _p_ref, W
                          M         CHK?RP  _p_val
                          M     if (((_p_val) > BANKA_END) & ((_p_val) < (0f01h + BANKA_END)))
                          M       if (((_p_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val)
                          M PREV_BANK = high (_p_val)
                          M       endif
                          M     endif
000598 5C22               M         subwf   _p_val, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00059A 6E13               M         movwf   T1
                          M         MOVE?BA _p_ref + 1
                          M         CHK?RP  _p_ref + 1
                          M     if (((_p_ref + 1) > BANKA_END) & ((_p_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_p_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_ref + 1)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_p_ref + 1)
                          M       endif
                          M     endif
00059C 5021               M         movf    _p_ref + 1, W
                          M         CHK?RP  _p_val
                          M     if (((_p_val) > BANKA_END) & ((_p_val) < (0f01h + BANKA_END)))
                          M       if (((_p_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_val)
                          M PREV_BANK = high (_p_val)
                          M       endif
                          M     endif
00059E 5823               M         subwfb  _p_val + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0005A0 6E14               M         movwf   T1 + 1
                          M     endif
                      00205         DIV?WCW T1, 032h, T1
                          M     if (032h == 2)
                          M         bcf     STATUS, C
                          M       if (T1   == T1)
                          M         CHK?RP  T1
                          M         rrcf    T1   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
0005A2 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0005A6 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
0005AA 0E32               M         movlw   low (032h)
0005AC 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
0005AE 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
0005B0 DE06               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005B2 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
0005B4 C002 F014          M         movff   (R0) + 1, (T1) + 1
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00206         SUB?WWW _p_pwm_val, T1, _p_pwm_val
                          M     if (_p_pwm_val == _p_pwm_val)
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005B8 5013               M         movf    T1,  W
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
0005BA 5E1E               M         subwf   _p_pwm_val, F
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0005BC 5014               M         movf    T1 + 1, W
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
0005BE 5A1F               M         subwfb  _p_pwm_val + 1, F
                          M     else
                          M         MOVE?BA T1
                          M         CHK?RP  _p_pwm_val
                          M         subwf   _p_pwm_val, W
                          M         MOVE?AB _p_pwm_val
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  _p_pwm_val
                          M         subwfb  _p_pwm_val + 1, W
                          M         MOVE?AB _p_pwm_val + 1
                          M     endif
                      00207         GOTO?L  L00012
                          M         L?GOTO  L00012
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00012))
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00012
                          M     else
                          M       if ((L00012) < 1)
                          M         goto    L00012
                          M       else
                          M         if ((L00012) > $)
0005C0 EFE6 F002          M         goto    L00012
                          M         else
                          M           if ((L00012) < ($ - 3ffh))
                          M         goto    L00012
                          M           else
                          M         bra     L00012
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00208         LABEL?L L00011  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00011
                          M         XALL
                          M     else
0005C4                    M L00011
                          M     endif
                      00209         SUB?WCW _p_pwm_val, 001h, _p_pwm_val
                          M     if (_p_pwm_val == _p_pwm_val)
0005C4 0E01               M         movlw   low (001h)
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
0005C6 5E1E               M         subwf   _p_pwm_val, F
0005C8 0E00               M         movlw   (001h) >> 8
0005CA 5A1F               M         subwfb  _p_pwm_val + 1, F
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _p_pwm_val
                          M         subwf   _p_pwm_val, W
                          M         MOVE?AB _p_pwm_val
                          M         movlw   (001h) >> 8
                          M         CHK?RP  _p_pwm_val
                          M         subwfb  _p_pwm_val + 1, W
                          M         MOVE?AB _p_pwm_val + 1
                          M     endif
                      00210         LABEL?L L00012  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00012
                          M         XALL
                          M     else
0005CC                    M L00012
                          M     endif
                      00211         GOTO?L  L00010
                          M         L?GOTO  L00010
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00010))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00010
                          M     else
                          M       if ((L00010) < 1)
                          M         goto    L00010
                          M       else
                          M         if ((L00010) > $)
0005CC EFEB F002          M         goto    L00010
                          M         else
                          M           if ((L00010) < ($ - 3ffh))
                          M         goto    L00010
                          M           else
                          M         bra     L00010
                          M           endif
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                      00212         LABEL?L L00009  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00009
                          M         XALL
                          M     else
0005D0                    M L00009
                          M     endif
                      00213         MOVE?CW 032h, _p_pwm_val
                          M         CHK?RP  _p_pwm_val
                          M     if (((_p_pwm_val) > BANKA_END) & ((_p_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_p_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_p_pwm_val)
                          M PREV_BANK = high (_p_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _p_pwm_val
                          M         movlw   high (032h)
                          M         movwf   (_p_pwm_val) + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _p_pwm_val
                          M       else
0005D0 0E32               M         movlw   low (032h)
0005D2 6E1E               M         movwf   _p_pwm_val
                          M       endif
                          M       if ((high (032h)) == 0)
0005D4 6A1F               M         clrf    (_p_pwm_val) + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_p_pwm_val) + 1
                          M       endif
                          M     endif
                      00214         LABEL?L L00010  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00010
                          M         XALL
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
0005D6                    M L00010
                          M     endif
                      00215         LABEL?L L00007  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00007
                          M         XALL
                          M     else
0005D6                    M L00007
                          M     endif
                      00216         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
0005D6 0012               M         return
                      00217 
                      00218         END
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 101


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCIN                             0000010C
ADCIN?CW                          
ADCIN_USED                        00000001
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          10
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      50
ADD?WCW                           
ADD?WWW                           
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
BANK0_END                         000000FF
BANK0_START                       00000080
BANK1_END                         000001FF
BANK1_START                       00000100
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 102


SYMBOL TABLE
  LABEL                             VALUE 

BANK2_END                         000002FF
BANK2_START                       00000200
BANKA_END                         0000007F
BANKA_START                       00000000
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          2
CCP1_REG                          PORTC
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 103


SYMBOL TABLE
  LABEL                             VALUE 

CCP2_BIT                          00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCP2_REG                          00000F82
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMP                               0000019E
CMPGE                             00000192
CMPGE?WCL                         
CMPGE?WWL                         
CMPGE_USED                        00000001
CMPLE                             00000198
CMPLE?WCL                         
CMPLE?WWL                         
CMPLE_USED                        00000001
CMP_USED                          00000001
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 104


SYMBOL TABLE
  LABEL                             VALUE 

D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       00000193
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DIV                               000001BE
DIV32DIV                          000001C2
DIV?WCW                           
DIV_USED                          00000001
DONE                              00000001
DUNN                              00000238
DUNN3                             0000023A
DUNNRET                           0000023C
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
END?                              
FAST                              00000001
FERR                              00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FLTS                              00000002
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 105


SYMBOL TABLE
  LABEL                             VALUE 

FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000015
GOSUB?L                           
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000019
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000019
HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              0000023E
INT0                              00000000
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 106


SYMBOL TABLE
  LABEL                             VALUE 

INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
JUMPMAN                           0000022C
JUMPMAN_USED                      00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L00001                            0000054C
L00003                            00000546
L00004                            0000054C
L00005                            0000053C
L00006                            00000542
L00007                            000005D6
L00009                            000005D0
L00010                            000005D6
L00011                            000005C4
L00012                            000005CC
L?CALL                            
L?GOTO                            
LABEL?L                           
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 107


SYMBOL TABLE
  LABEL                             VALUE 

LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            00000008
LCDOUT?C                          
LCDOUTCOUNT?C                     
LCDOUTDEC?                        
LCDOUTJ                           00000006
LCDOUTJ_USED                      00000001
LCDOUTNUM?W                       
LCDOUT_USED                       00000001
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          4
LCD_DREG                          PORTC
LCD_EBIT                          3
LCD_EREG                          PORTC
LCD_LINES                         2
LCD_RSBIT                         0
LCD_RSREG                         PORTC
LCD_RWBIT                         00000000
LCD_RWREG                         00000F82
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 108


SYMBOL TABLE
  LABEL                             VALUE 

LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MCLR                              00000003
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MUL                               000001EE
MUL?WCW                           
MUL_USED                          00000001
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OSC                               4
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 109


SYMBOL TABLE
  LABEL                             VALUE 

OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
PAUSE                             0000013C
PAUSE?C                           
PAUSEL                            0000013E
PAUSEUS                           00000158
PAUSEUSL                          0000015A
PAUSEUS_USED                      00000001
PAUSE_DELAY                       000003DF
PAUSE_USED                        00000001
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 110


SYMBOL TABLE
  LABEL                             VALUE 

PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_BANK                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PWM1CON                           00000FB7
R                                 00000002
R0                                00000001
R1                                00000003
R2                                00000005
R3                                00000007
R4                                00000009
R5                                0000000B
R6                                0000000D
R7                                0000000F
R8                                00000011
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000003
RAM_END                           000002FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 111


SYMBOL TABLE
  LABEL                             VALUE 

RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD16                              00000007
RE3                               00000003
RESET_ORG                         00000000
RETURN?                           
RI                                00000004
RM1                               00000016
RM2                               00000017
RR1                               00000018
RR2                               00000019
RS1                               0000001A
RS2                               0000001B
RSEN                              00000001
RST?RP                            
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SEROUT2DEC                        000000B0
SEROUT2DEC_USED                   00000001
SEROUT2SEND                       000000EC
SEROUT2SEND_USED                  00000001
SHIFTR                            00000188
SHIFTR?WCB                        
SHIFTR_USED                       00000001
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 112


SYMBOL TABLE
  LABEL                             VALUE 

SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SUB?WCW                           
SUB?WWW                           
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T1                                00000013
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 113


SYMBOL TABLE
  LABEL                             VALUE 

T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 114


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 115


SYMBOL TABLE
  LABEL                             VALUE 

W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP1CON??4                       CCP1CON, 004h
_CCP1CON??5                       CCP1CON, 005h
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 116


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PORTH                            00000F82
_PORTL                            00000F81
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_TRISC??2                         TRISC, 002h
_TRISH                            00000F94
_TRISL                            00000F93
_USED                             00000001
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 117


SYMBOL TABLE
  LABEL                             VALUE 

_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F2420                         00000001
_get_pressure                     00000444
_get_water_p_pwm                  000004C4
_main                             000002AC
_p_in                             0000001C
_p_pwm_val                        0000001E
_p_pwm_val??0                     _p_pwm_val, 000h
_p_pwm_val??1                     _p_pwm_val, 001h
_p_ref                            00000020
_p_val                            00000022
_pressure                         00000024
_pressure_ref                     00000026
adcinloop                         0000012E
cmpnoteq                          000001AA
divloop                           000001C6
divok                             000001E0
lcdchkcd                          00000080
lcdloop                           0000008E
lcdout1                           00000064
lcdoutcom                         00000062
lcdsend                           0000008C
main                              0000023E
pauseloop                         00000140
pauseusdone                       00000180
pauseush                          0000016C
pauseusloop                       00000166
serout2ddig                       000000DC
serout2send1                      000000FC
shiftrloop                        00000182
MPASM  5.51                      PRESSU~1.ASM   3-21-2018  11:47:00         PAGE 118


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXX-------- ---------------- ----------------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  1504
Program Memory Bytes Free: 14880


Errors   :     0
Warnings :     0 reported,     4 suppressed
Messages :     0 reported,     0 suppressed

