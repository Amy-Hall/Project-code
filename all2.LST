MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.47, (c) 1998, 2006 microEngineering Labs, Inc. All Rights Reserved.  
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\18F2420.INC"
                      00001 ;****************************************************************
                      00002 ;*  18F2420.INC                                                 *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 06/05/06                                        *
                      00008 ;*  Version   : 2.47                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00017         LIST
                      00018         LIST p = 18F2420, r = dec, w = -311, w = -230, f = inhx32
                      00019         INCLUDE "P18F2420.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F2420 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01291         LIST
300000 F1FF           00020         __CONFIG    _CONFIG1H, _OSC_XT_1H
300002 F31F           00021         __CONFIG    _CONFIG2H, _WDT_ON_2H & _WDTPS_512_2H
300004 FDFF           00022         __CONFIG    _CONFIG3H, _PBADEN_OFF_3H
300006 FFBB           00023         __CONFIG    _CONFIG4L, _LVP_OFF_4L & _XINST_OFF_4L
                      00026         LIST
  00F00000            00027 EEPROM_START    EQU     0F00000h
  00000040            00028 BLOCK_SIZE      EQU     64
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 #define         OSC              4
                      00010 #define         LCD_DREG                 PORTC
                      00011 #define         LCD_DBIT                 4
                      00012 #define         LCD_RSREG                PORTC
                      00013 #define         LCD_RSBIT                0
                      00014 #define         LCD_EREG                 PORTC
                      00015 #define         LCD_EBIT                 3
                      00016 #define         LCD_BITS                 4
                      00017 #define         LCD_LINES                2
                      00018 #define         ADC_BITS                 10
                      00019 #define         ADC_SAMPLEUS             50 
                      00020 #define         CCP1_REG                 PORTC
                      00021 #define         CCP1_BIT                 2
                      00022 
  00000000            00023 RAM_START                       EQU     00000h
  000002FF            00024 RAM_END                         EQU     002FFh
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00025 RAM_BANKS                       EQU     00003h
  00000080            00026 BANK0_START                     EQU     00080h
  000000FF            00027 BANK0_END                       EQU     000FFh
  00000100            00028 BANK1_START                     EQU     00100h
  000001FF            00029 BANK1_END                       EQU     001FFh
  00000200            00030 BANK2_START                     EQU     00200h
  000002FF            00031 BANK2_END                       EQU     002FFh
  00000000            00032 BANKA_START                     EQU     00000h
  0000007F            00033 BANKA_END                       EQU     0007Fh
                      00034 
  00000000            00035 FLAGS                           EQU     RAM_START + 000h
  00000001            00036 R0                              EQU     RAM_START + 001h
  00000003            00037 R1                              EQU     RAM_START + 003h
  00000005            00038 R2                              EQU     RAM_START + 005h
  00000007            00039 R3                              EQU     RAM_START + 007h
  00000009            00040 R4                              EQU     RAM_START + 009h
  0000000B            00041 R5                              EQU     RAM_START + 00Bh
  0000000D            00042 R6                              EQU     RAM_START + 00Dh
  0000000F            00043 R7                              EQU     RAM_START + 00Fh
  00000011            00044 R8                              EQU     RAM_START + 011h
  00000013            00045 T1                              EQU     RAM_START + 013h
  00000015            00046 T2                              EQU     RAM_START + 015h
  00000017            00047 T3                              EQU     RAM_START + 017h
  00000019            00048 GOP                             EQU     RAM_START + 019h
  0000001A            00049 RM1                             EQU     RAM_START + 01Ah
  0000001B            00050 RM2                             EQU     RAM_START + 01Bh
  0000001C            00051 RR1                             EQU     RAM_START + 01Ch
  0000001D            00052 RR2                             EQU     RAM_START + 01Dh
  0000001E            00053 RS1                             EQU     RAM_START + 01Eh
  0000001F            00054 RS2                             EQU     RAM_START + 01Fh
  00000020            00055 _an_frequency                   EQU     RAM_START + 020h
  00000022            00056 _dT_1                           EQU     RAM_START + 022h
  00000024            00057 _dT_2                           EQU     RAM_START + 024h
  00000026            00058 _flow_decimal                   EQU     RAM_START + 026h
  00000028            00059 _flow_pwm_val                   EQU     RAM_START + 028h
  0000002A            00060 _flow_ref                       EQU     RAM_START + 02Ah
  0000002C            00061 _flow_val                       EQU     RAM_START + 02Ch
  0000002E            00062 _i                              EQU     RAM_START + 02Eh
  00000030            00063 _n                              EQU     RAM_START + 030h
  00000032            00064 _n1                             EQU     RAM_START + 032h
  00000034            00065 _n2                             EQU     RAM_START + 034h
  00000036            00066 _t1adval                        EQU     RAM_START + 036h
  00000038            00067 _t1res_lower                    EQU     RAM_START + 038h
  0000003A            00068 _t1res_upper                    EQU     RAM_START + 03Ah
  0000003C            00069 _t1resistance                   EQU     RAM_START + 03Ch
  0000003E            00070 _t1temp_decimal                 EQU     RAM_START + 03Eh
  00000040            00071 _t1temp_integer                 EQU     RAM_START + 040h
  00000042            00072 _t1temp_lower                   EQU     RAM_START + 042h
  00000044            00073 _t1temp_ref                     EQU     RAM_START + 044h
  00000046            00074 _t1temp_upper                   EQU     RAM_START + 046h
  00000048            00075 _t1temp_val                     EQU     RAM_START + 048h
  0000004A            00076 _temp_pwm_val                   EQU     RAM_START + 04Ah
  0000004C            00077 _throttle                       EQU     RAM_START + 04Ch
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000004E            00078 _x                              EQU     RAM_START + 04Eh
  00000050            00079 _resistor_ref                   EQU     RAM_START + 050h
  00000068            00080 _temp_ref                       EQU     RAM_START + 068h
  00000F81            00081 _PORTL                          EQU      PORTB
  00000F82            00082 _PORTH                          EQU      PORTC
  00000F93            00083 _TRISL                          EQU      TRISB
  00000F94            00084 _TRISH                          EQU      TRISC
                      00085 #define _CCP1CON??4              CCP1CON, 004h
                      00086 #define _flow_pwm_val??0        _flow_pwm_val, 000h
                      00087 #define _CCP1CON??5              CCP1CON, 005h
                      00088 #define _flow_pwm_val??1        _flow_pwm_val, 001h
                      00089 
                      00090 ; EEPROM data.
                      00091 
                      00092 
                      00093         INCLUDE "ALL2.MAC"
                      00001 
                      00418         LIST
                      00094         INCLUDE "C:\PBP\PBPPIC18.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC18.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 06/05/06                                          *
                      00008 ;*  Version   : 2.47                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00074   LIST
                      00075 ; Oscillator is 4MHz
                      01147   LIST
000000                01148     ORG RESET_ORG               ; Reset vector at 0
                      01152   LIST
000000 6A00           01153         clrf    FLAGS           ; Clear all flags on reset
                      01157   LIST
000002 EF7B F001      01158         goto    INIT            ; Finish initialization
                      01916   LIST
000006 6E0A           01917 HPWM    movwf   R4 + 1          ; Save channel
                      01918 
                      01919         ; PS = (FOSC / 1024) / freq
000008 0E42           01920         movlw   low ((OSC * 1000000) / 1024)
00000A 6E01           01921         movwf   R0
00000C 0E0F           01922         movlw   ((OSC * 1000000) / 1024) >> 8
00000E 6E02           01923         movwf   R0 + 1
000010 EC3B F001      01924         call    DIV             ; / freq (returns result in W and Z)
000014 B4D8           01925         btfsc   STATUS, Z
000016 90CA           01926         bcf     T2CON, T2CKPS0
000018 A4D8           01927         btfss   STATUS, Z
00001A 80CA           01928         bsf     T2CON, T2CKPS0
00001C 0FFC           01929         addlw   -4              ; Check for >= 4
00001E A0D8           01930         btfss   STATUS, C
000020 92CA           01931         bcf     T2CON, T2CKPS1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000022 B0D8           01932         btfsc   STATUS, C
000024 82CA           01933         bsf     T2CON, T2CKPS1
                      01934 
                      01935         ; PR2 = ((FOSC / 4 / PS) / freq) - 1
000026 0E40           01936         movlw   low ((OSC * 1000000) / 4)
000028 6E01           01937         movwf   R0
00002A 0E42           01938         movlw   low (((OSC * 1000000) / 4) >> 8)
00002C 6E02           01939         movwf   R0 + 1
00002E 0E0F           01940         movlw   ((OSC * 1000000) / 4) >> 16
000030 6E05           01941         movwf   R2
000032 6A06           01942         clrf    R2 + 1
000034 B0CA           01943         btfsc   T2CON, T2CKPS0  ; Shift for divide by PS
000036 D828           01944         rcall   hpwm24          ; / 4 (PS = 4 or 16)
000038 B2CA           01945         btfsc   T2CON, T2CKPS1
00003A D826           01946         rcall   hpwm24          ; / 4 (PS = 16)
00003C EC3D F001      01947         call    DIV32DIV        ; / freq
000040 0401           01948         decf    R0, W           ; - 1
000042 6ECB           01949         movwf   PR2             ; Save PR2
                      01950 
                      01951         ; CCP = ((PR2 + 1) * 4) */ duty cycle (10 bit result)
                      01952         ; (Multiply by 4 is not done. Result is shifted right 2 positions.)
000044 5001           01953         movf    R0, W           ; R0 = PR2 + 1
000046 6E03           01954         movwf   R1              ; Set up for multiply
000048 5002           01955         movf    R0 + 1, W
00004A 6E04           01956         movwf   R1 + 1
00004C 5009           01957         movf    R4, W           ; R4 = duty cycle
00004E 6E07           01958         movwf   R3
000050 6E08           01959         movwf   R3 + 1          ; Set high byte for max duty cycle (always on)
000052 3C09           01960         incfsz  R4, W           ; Check for max duty cycle
000054 6A08           01961         clrf    R3 + 1          ; Not at max - zero high byte
000056 EC53 F001      01962         call    MUL
00005A 5006           01963         movf    R2 + 1, W
                      01964       ifdef CCP2CON
00005C 2E0A           01965         decfsz  R4 + 1, F       ; Skip if channel 1
00005E D00B           01966         bra     hpwm2           ; Set channel 2
                      01967       endif
000060 6EBE           01968         movwf   CCPR1L          ; Set top 8 CCP bits
000062 0E0C           01969         movlw   0ch             ; Set PWM mode and clear bottom 2 CCP bits
000064 6EBD           01970         movwf   CCP1CON
000066 BE05           01971         btfsc   R2, 7           ; Set bottom 2 CCP bits
000068 8ABD           01972         bsf     CCP1CON, 5
00006A BC05           01973         btfsc   R2, 6
00006C 88BD           01974         bsf     CCP1CON, 4
                      01975 
00006E 9494           01976         bcf     (CCP1_REG) + 12h, CCP1_BIT      ; Set CCP1 to output
                      01977 
000070 84CA           01978 hpwmdone bsf    T2CON, TMR2ON   ; Start the timer
000072 EF78 F001      01979         goto    DUNN            ; All set
                      01980 
                      01981       ifdef CCP2CON
000076 6EBB           01982 hpwm2   movwf   CCPR2L          ; Set top 8 CCP bits
000078 0E0C           01983         movlw   0ch             ; Set PWM mode and clear bottom 2 CCP bits
00007A 6EBA           01984         movwf   CCP2CON
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007C BE05           01985         btfsc   R2, 7           ; Set bottom 2 CCP bits
00007E 8ABA           01986         bsf     CCP2CON, 5
000080 BC05           01987         btfsc   R2, 6
000082 88BA           01988         bsf     CCP2CON, 4
                      01989 
000084 9294           01990         bcf     (CCP2_REG) + 12h, CCP2_BIT      ; Set CCP2 to output
000086 D7F4           01991         bra     hpwmdone
                      01992       endif
                      01993 
000088 D800           01994 hpwm24  rcall   hpwm242         ; Divide 24 bits by 4
00008A 90D8           01995 hpwm242 bcf     STATUS, C       ; Divide 24 bits by 2
00008C 3205           01996         rrcf    R2, F
00008E 3202           01997         rrcf    R0 + 1, F
000090 3201           01998         rrcf    R0, F
000092 0012           01999         return
                      02911   LIST
000094 50E9           02912 LCDOUTJ movf    FSR0L, W        ; Jumpman entry
                      02918   LIST
000096 6E08           02919 LCDOUT  movwf   R3 + 1          ; Save char
                      02920 
000098 9682           02921         bcf     LCD_EREG, LCD_EBIT      ; Set E low
00009A 9082           02922         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
00009C 9082           02923         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      02924 
00009E 9694           02925         bcf     (LCD_EREG) + 12h, LCD_EBIT      ; Set E to output
0000A0 9094           02926         bcf     (LCD_RSREG) + 12h, LCD_RSBIT    ; Set RS to output
0000A2 9094           02927         bcf     (LCD_RWREG) + 12h, LCD_RWBIT    ; Set RW to output
                      02928     if (LCD_BITS == 8)
                      02929         clrf    (LCD_DREG) + 12h        ; Set port to all output
                      02930     else
                      02931       if (LCD_DBIT == 0)
                      02932         movlw   0f0h
                      02933       else
0000A4 0E0F           02934         movlw   0fh
                      02935       endif
0000A6 1694           02936         andwf   (LCD_DREG) + 12h, F     ; Set proper half of port to output
0000A8 5008           02937         movf    R3 + 1, W       ; Get back char
                      02938     endif
                      02939 
0000AA B200           02940         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
0000AC D022           02941         bra     lcdout1         ; Yes
                      02942 
0000AE 0E3A           02943         movlw   high 15000      ; Wait at least 15ms
0000B0 6E02           02944         movwf   R0 + 1
0000B2 0E98           02945         movlw   low 15000
0000B4 ECF4 F000      02946         call    PAUSEUSL
                      02947 
0000B8 0E33           02948         movlw   33h             ; Init lcd
0000BA 6E07           02949         movwf   R3              ; Save char
0000BC D82F           02950         rcall   lcdloop         ; Send init
                      02951 
0000BE 0E13           02952         movlw   high 5000       ; Wait at least 5ms
0000C0 6E02           02953         movwf   R0 + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000C2 0E88           02954         movlw   low 5000
0000C4 ECF4 F000      02955         call    PAUSEUSL
                      02956 
0000C8 D829           02957         rcall   lcdloop         ; Send init again
                      02958 
0000CA 0E64           02959         movlw   100             ; Wait at least 100us
0000CC ECF3 F000      02960         call    PAUSEUS
                      02961 
0000D0 D825           02962         rcall   lcdloop         ; Send init more time
                      02963 
0000D2 0E64           02964         movlw   100             ; Wait at least 100us
0000D4 ECF3 F000      02965         call    PAUSEUS
                      02966 
                      02967     if (LCD_BITS != 8)
0000D8 0E22           02968         movlw   22h             ; Set 4-bit mode
0000DA 6E07           02969         movwf   R3              ; Save character
0000DC D81F           02970         rcall   lcdloop         ; Set interface to 4-bit mode
                      02971     endif
                      02972 
                      02973     if (LCD_BITS == 8)
                      02974       if (LCD_LINES == 1)
                      02975         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      02976       else
                      02977         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      02978       endif
                      02979     else
                      02980       if (LCD_LINES == 1)
                      02981         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      02982       else
0000DE 0E28           02983         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      02984       endif
                      02985     endif
0000E0 D807           02986         rcall   lcdoutcom       ; Send function set
                      02987 
0000E2 0E0C           02988         movlw   0ch             ; Display on, no cursor, no blink
0000E4 D805           02989         rcall   lcdoutcom
                      02990 
0000E6 0E06           02991         movlw   06h             ; Lcd entry mode set, increment, no shift
0000E8 D803           02992         rcall   lcdoutcom
                      02993 
0000EA 8200           02994         bsf     LCDINITFLAG     ; Set to initialized
                      02995 
0000EC 5008           02996         movf    R3 + 1, W       ; Get saved char back
0000EE D001           02997         bra     lcdout1
                      02998 
0000F0 8000           02999 lcdoutcom bsf   LCDCDFLAG       ; Set command
                      03000 
0000F2 6E07           03001 lcdout1 movwf   R3              ; Save char if 4 bit
0000F4 A000           03002         btfss   LCDCDFLAG       ; Command this time?
0000F6 D00B           03003         bra     lcdchkcd        ; No
                      03004 
0000F8 9082           03005         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
0000FA 0803           03006         sublw   3
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000FC E30E           03007         bnc     lcdsend         ; Short delay
                      03008 
0000FE D80D           03009         rcall   lcdsend         ; Long delay
000100 0E07           03010         movlw   high LCD_COMMANDUS      ; Wait for command to complete
000102 6E02           03011         movwf   R0 + 1
000104 0ED0           03012         movlw   low LCD_COMMANDUS
000106 ECF4 F000      03013         call    PAUSEUSL
00010A 80D8           03014         bsf     STATUS, C       ; Set no timeout for Serout2mod
00010C 0012           03015         return
                      03016 
00010E 8000           03017 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
000110 08FE           03018         sublw   0feh            ; Command next time? (char still in W)
000112 B4D8           03019         btfsc   STATUS, Z
000114 EF78 F001      03020         goto    DUNN            ; Yes - nothing to do this time (C set)
                      03021 
000118 8082           03022         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
                      03023 
00011A                03024 lcdsend
                      03025     if (LCD_BITS == 8)
                      03026 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03027         movf    R3, W           ; Get char back
                      03028         movwf   LCD_DREG        ; Write char to the port
                      03029       if (OSC > 16)
                      03030         nop                     ; Minimum 1us enable time
                      03031       endif
                      03032       if (OSC > 20)
                      03033         bra     $ + 2
                      03034       endif
                      03035       if (OSC > 25)
                      03036         bra     $ + 2
                      03037       endif
                      03038       if (OSC > 33)
                      03039         nop
                      03040       endif
                      03041       if (OSC > 40)
                      03042         bra     $ + 2
                      03043       endif
                      03044         bcf     LCDCDFLAG       ; Indicate data next time
                      03045         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03046     else
                      03047 
                      03048       if (LCD_DBIT == 0)
                      03049         swapf   R3, F           ; Swap top and bottom nibbles
                      03050       endif
                      03051 
00011A A000           03052         btfss   LCDCDFLAG       ; First time through only
00011C 9000           03053 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03054 
00011E 8682           03055         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03056 
                      03057       if (LCD_DBIT == 0)
                      03058         movlw   0f0h            ; Clear lcd data port
                      03059       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000120 0E0F           03060         movlw   0fh             ; Clear lcd data port
                      03061       endif
000122 1682           03062         andwf   LCD_DREG, F
                      03063 
000124 5007           03064         movf    R3, W           ; Isolate proper nibble of char
                      03065       if (LCD_DBIT == 0)
                      03066         andlw   0fh
                      03067       else
000126 0BF0           03068         andlw   0f0h
                      03069       endif
000128 1282           03070         iorwf   LCD_DREG, F     ; Write char to port
                      03071 
                      03072       if (OSC > 20)
                      03073         nop                     ; Minimum 1us enable time
                      03074       endif
                      03075       if (OSC > 25)
                      03076         bra     $ + 2
                      03077       endif
                      03078       if (OSC > 33)
                      03079         nop
                      03080       endif
                      03081       if (OSC > 40)
                      03082         bra     $ + 2
                      03083       endif
                      03084 
00012A 9682           03085         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
00012C 3A07           03086         swapf   R3, F           ; Get to other nibble
                      03087 
                      03088       if (OSC > 20)
                      03089         nop                     ; Minimum 1us not-enabled time
                      03090       endif
                      03091       if (OSC > 25)
                      03092         bra     $ + 2
                      03093       endif
                      03094       if (OSC > 33)
                      03095         nop
                      03096       endif
                      03097       if (OSC > 40)
                      03098         bra     $ + 2
                      03099       endif
                      03100 
00012E B000           03101         btfsc   LCDCDFLAG
000130 D7F5           03102         bra     lcdloop         ; Send lower 4 to lcd
                      03103     endif
                      03104 
000132 0E32           03105         movlw   LCD_DATAUS      ; Wait for data operation to complete
000134 ECF3 F000      03106         call    PAUSEUS
000138 80D8           03107         bsf     STATUS, C       ; Set no timeout for Serout2mod
00013A EF78 F001      03108         goto    DUNN
                      05040   LIST
00013E 9E19           05041 SEROUT2DEC bcf  GOP, 7          ; Blanking off
000140 500A           05042         movf    R4 + 1, W       ; 0 digits?
000142 B4D8           05043         btfsc   STATUS, Z
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000144 8E19           05044         bsf     GOP, 7          ; Yes, blanking on
000146 0E05           05045         movlw   5               ; 5 digits max to do
000148 6E09           05046         movwf   R4
00014A 0E27           05047         movlw   high 10000      ; Find 10,000s
00014C 6E04           05048         movwf   R1 + 1
00014E 0E10           05049         movlw   low 10000
000150 D80C           05050         rcall   serout2ddig     ; Do the work
                      05051       ifdef SEROUT2TO_USED
                      05052         btfss   STATUS, C       ; Timed out?
                      05053         return                  ; Yes
                      05054       endif
000152 0E03           05055         movlw   high 1000       ; Find 1,000s
000154 6E04           05056         movwf   R1 + 1
000156 0EE8           05057         movlw   low 1000
000158 D808           05058         rcall   serout2ddig     ; Do the work
                      05059       ifdef SEROUT2TO_USED
                      05060         btfss   STATUS, C       ; Timed out?
                      05061         return                  ; Yes
                      05062       endif
00015A 6A04           05063         clrf    R1 + 1          ; Find 100s
00015C 0E64           05064         movlw   100
00015E D805           05065         rcall   serout2ddig     ; Do the work
                      05066       ifdef SEROUT2TO_USED
                      05067         btfss   STATUS, C       ; Timed out?
                      05068         return                  ; Yes
                      05069       endif
000160 6A04           05070         clrf    R1 + 1          ; Find 10s
000162 0E0A           05071         movlw   10
000164 D802           05072         rcall   serout2ddig     ; Do the work
                      05073       ifdef SEROUT2TO_USED
                      05074         btfss   STATUS, C       ; Timed out?
                      05075         return                  ; Yes
                      05076       endif
000166 5005           05077         movf    R2, W           ; Get the 1s
000168 D008           05078         bra     SEROUT2SEND     ; Send the 1s and exit
                      05079 
00016A 6E03           05080 serout2ddig movwf R1            ; Save last piece
00016C 5006           05081         movf    R2 + 1, W       ; Move remainder to dividend
00016E 6E02           05082         movwf   R0 + 1
000170 5005           05083         movf    R2, W
000172 6E01           05084         movwf   R0
000174 EC3B F001      05085         call    DIV             ; Do the math
000178 5001           05086         movf    R0, W           ; Get the result
                      05087 ;       bra     SEROUT2SEND     ; Fall through
                      05094   LIST
00017A 6E01           05095 SEROUT2SEND movwf R0            ; Save char for a moment
00017C 4E09           05096         dcfsnz  R4, F           ; Bump down count while we're here
00017E 9E19           05097         bcf     GOP, 7
000180 500A           05098         movf    R4 + 1, W       ; Get number of digits to send
000182 E003           05099         bz      serout2send1    ; If zero digits skip count compare
000184 5C09           05100         subwf   R4, W           ; Send if within count
000186 B0D8           05101         btfsc   STATUS, C
000188 0012           05102         return
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00018A 5001           05103 serout2send1 movf  R0, W        ; Get char back
                      05104       ifdef SEROUT2TO_USED
                      05105         bsf     STATUS, C       ; Set carry for no timeout in case of blanking
                      05106       endif
00018C A4D8           05107         btfss   STATUS, Z       ; If zero, goto blank check
00018E 9E19           05108         bcf     GOP, 7          ; Not zero so clear blank
000190 BE19           05109         btfsc   GOP, 7          ; If blanking on, don't send
000192 0012           05110         return
000194 0F30           05111         addlw   '0'             ; Add ASCII offset
000196 EF72 F001      05112         goto    JUMPMAN         ; Send it
                      05930   LIST
00019A                05931 ADCIN
                      05932       ifdef ADCON2
00019A 36E8           05933         rlcf    WREG, F         ; Move channel into proper position
00019C 36E8           05934         rlcf    WREG, F
00019E 0B3C           05935         andlw   03ch            ; Mask channel
0001A0 0901           05936         iorlw   1               ; Turn on ADC
0001A2 12C2           05937         iorwf   ADCON0, F       ; Set the one bits
0001A4 09C0           05938         iorlw   0c0h
0001A6 16C2           05939         andwf   ADCON0, F       ; Clear the zero bits
0001A8 50C0           05940         movf    ADCON2, W       ; Set up clock source
0001AA 0BF8           05941         andlw   0f8h
0001AC 0903           05942         iorlw   (ADC_CLOCK) & 7
0001AE 6EC0           05943         movwf   ADCON2
                      05944       else
                      05945         rlcf    WREG, F         ; Move channel into proper position
                      05946         rlcf    WREG, F
                      05947         rlcf    WREG, F
                      05948         andlw   038h            ; Mask channel
                      05949         iorlw   (((ADC_CLOCK) & 3) << 6) | 1    ; Set up clock source and turn on ADC
                      05950         movwf   ADCON0
                      05951       endif
                      05952       if ((ADC_SAMPLEUS) != 0)
0001B0 0E00           05953         movlw   (ADC_SAMPLEUS) >> 8     ; Get sample time
0001B2 6E02           05954         movwf   R0 + 1
0001B4 0E32           05955         movlw   low (ADC_SAMPLEUS)
0001B6 ECF4 F000      05956         call    PAUSEUSL        ; Wait sample time
                      05957       endif
0001BA 82C2           05958         bsf     ADCON0, GO_DONE ; Start conversion
0001BC B2C2           05959 adcinloop btfsc ADCON0, GO_DONE ; Wait for conversion to complete
0001BE D7FE           05960         bra     adcinloop
                      05961       if ((ADC_BITS) <= 8)
                      05962         clrf    R0 + 1
                      05963         movf    ADRESH, W       ; Get 8-bit result
                      05964       else
0001C0 50C4           05965         movf    ADRESH, W       ; Get 16-bit result
0001C2 6E02           05966         movwf   R0 + 1
0001C4 50C3           05967         movf    ADRESL, W
                      05968       endif
0001C6 EF78 F001      05969         goto    DUNN
                      06227   LIST
0001CA 6A04           06228 PAUSE   clrf    R1 + 1
0001CC 6E03           06229 PAUSEL  movwf   R1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001CE 0EFF           06230 pauseloop movlw -1              ; 1 (9)
0001D0 2603           06231         addwf   R1, F           ; 1
0001D2 A0D8           06232         btfss   STATUS, C       ; 1 / 2
0001D4 2604           06233         addwf   R1 + 1, F       ; 1 / 0
0001D6 A0D8           06234         btfss   STATUS, C       ; 2
0001D8 EF78 F001      06235         goto    DUNN
0001DC 0E03           06236         movlw   (PAUSE_DELAY) >> 8      ; 1
0001DE 6E02           06237         movwf   R0 + 1          ; 1
0001E0 0EDF           06238         movlw   low (PAUSE_DELAY)       ; 1
0001E2 D802           06239         rcall   PAUSEUSL        ; -2 (PAUSEUSL gives you 2 less than you ask for)
0001E4 D7F4           06240         bra     pauseloop       ; 2
                      06284   LIST
0001E6 6A02           06285 PAUSEUS clrf    R0 + 1          ; 1
0001E8 0FE8           06286 PAUSEUSL addlw  -24             ; 1 Subtract overhead
0001EA 6E01           06287         movwf   R0              ; 1
0001EC 1E02           06288         comf    R0 + 1, F       ; 1
0001EE 0EFC           06289         movlw   -4              ; 1
0001F0 A0D8           06290         btfss   STATUS, C       ; 1 / 2
0001F2 D003           06291         bra     pauseush        ; 2 / 0
0001F4 2601           06292 pauseusloop addwf R0, F         ; 1
0001F6 B0D8           06293         btfsc   STATUS, C       ; 1 / 2
0001F8 D7FD           06294         bra     pauseusloop     ; 2 / 0
0001FA 2601           06295 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06296         CLRWDT?NOP              ; 1 Keep Watchdog clear
                          M     ifndef NO_CLRWDT
0001FC 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
0001FE 3E02           06297         incfsz  R0 + 1, F       ; 1 / 2
000200 D7F9           06298         bra     pauseusloop     ; 2 / 0
000202 B001           06299         btfsc   R0, 0           ; 1 / 2
000204 D000           06300         bra     $ + 2           ; 2 / 0 Burn an extra cycle
000206 A201           06301         btfss   R0, 1           ; 1 / 2
000208 D002           06302         bra     pauseusdone     ; 2 / 0
00020A 0000           06303         nop                     ; 1
00020C D000           06304         bra     $ + 2           ; 2 Burn an extra 2 cycles
00020E 0012           06305 pauseusdone return              ; 2 + 3 (call + setup)
                      06977   LIST
000210 90D8           06978 shiftrloop bcf  STATUS, C       ; Shift in 0 bits
000212 3202           06979         rrcf    R0 + 1, F       ; Shift right once
000214 3201           06980         rrcf    R0, F
000216 0FFF           06981 SHIFTR  addlw   -1
000218 E2FB           06982         bc      shiftrloop      ; Done?
00021A 5001           06983         movf    R0, W           ; Move low part of result to W
00021C EF78 F001      06984         goto    DUNN
                      07087   LIST
000220 6E03           07088 CMPEQ   movwf   R1
000222 0E02           07089         movlw   2               ; Mask for =
000224 D00C           07090         bra     CMP
                      07120   LIST
000226 6E03           07121 CMPGE   movwf   R1
000228 0E03           07122         movlw   3               ; Mask for = >
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00022A D009           07123         bra     CMP
                      07153   LIST
00022C 6E03           07154 CMPGT   movwf   R1
00022E 0E01           07155         movlw   1               ; Mask for >
000230 D006           07156         bra     CMP
                      07186   LIST
000232 6E03           07187 CMPLE   movwf   R1
000234 0E06           07188         movlw   6               ; Mask for < =
000236 D003           07189         bra     CMP
                      07219   LIST
000238 6E03           07220 CMPLT   movwf   R1
00023A 0E04           07221         movlw   4               ; Mask for <
00023C D000           07222         bra     CMP
                      07271   LIST
00023E 6E09           07272 CMP     movwf   R4              ; Save compare state
000240 5004           07273         movf    R1 + 1, W       ; Flags = MSB(R0) - MSB(R1)
000242 5C02           07274         subwf   R0 + 1, W
000244 E102           07275         bnz     cmpnoteq        ; If unequal then done
000246 5003           07276         movf    R1, W           ; Flags = LSB(R0) - LSB(R1)
000248 5C01           07277         subwf   R0, W
00024A 0E04           07278 cmpnoteq movlw  4               ; W = 4 if R0 < R1
00024C B0D8           07279         btfsc   STATUS, C
00024E 0E01           07280         movlw   1               ; W = 1 if R0 > R1
000250 B4D8           07281         btfsc   STATUS, Z
000252 0E02           07282         movlw   2               ; W = 2 if R0 == R1
000254 1409           07283         andwf   R4, W           ; Mask for compare state
000256 A4D8           07284         btfss   STATUS, Z
000258 0EFF           07285         movlw   -1
00025A EF78 F001      07286         goto    DUNN
                      07306   LIST
00025E 66E8           07307 LAND    tstfsz  WREG
000260 0EFF           07308         movlw   -1
000262 1401           07309         andwf   R0, W
000264 A4D8           07310         btfss   STATUS, Z
000266 0EFF           07311         movlw   -1
000268 EF78 F001      07312         goto    DUNN
                      07328   LIST
00026C 1001           07329 LOR     iorwf   R0, W
00026E A4D8           07330         btfss   STATUS, Z
000270 0EFF           07331         movlw   -1
000272 EF78 F001      07332         goto    DUNN
                      07496   LIST
000276 6A06           07497 DIV     clrf    R2 + 1
000278 6A05           07498         clrf    R2
                      07499 
00027A 0E10           07500 DIV32DIV movlw   16
00027C 6E07           07501         movwf   R3
                      07502 
00027E 3402           07503 divloop rlcf    R0 + 1, W
000280 3605           07504         rlcf    R2, F
000282 3606           07505         rlcf    R2 + 1, F
000284 5003           07506         movf    R1, W
000286 5E05           07507         subwf   R2, F
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000288 5004           07508         movf    R1 + 1, W
00028A 5A06           07509         subwfb  R2 + 1, F
                      07510 
00028C E205           07511         bc      divok
00028E 5003           07512         movf    R1, W
000290 2605           07513         addwf   R2, F
000292 5004           07514         movf    R1 + 1, W
000294 2206           07515         addwfc  R2 + 1, F
                      07516 
000296 90D8           07517         bcf     STATUS, C
                      07518 
000298 3601           07519 divok   rlcf    R0, F
00029A 3602           07520         rlcf    R0 + 1, F
                      07521 
00029C 2E07           07522         decfsz  R3, F
00029E D7EF           07523         bra     divloop
0002A0 5001           07524         movf    R0, W           ; Get low byte to W
0002A2 EF78 F001      07525         goto    DUNN
                      07542   LIST
0002A6 5003           07543 MUL     movf    R1, W
0002A8 0207           07544         mulwf   R3              ; R1 * R3 = PRODHL
                      07545 
0002AA CFF4 F006      07546         movff   PRODH, R2 + 1
0002AE CFF3 F005      07547         movff   PRODL, R2
                      07548 
0002B2 5004           07549         movf    R1 + 1, W
0002B4 0208           07550         mulwf   R3 + 1          ; R1 + 1 * R3 + 1 = PRODHL
                      07551 
0002B6 CFF4 F002      07552         movff   PRODH, R0 + 1
0002BA CFF3 F001      07553         movff   PRODL, R0
                      07554 
0002BE 5003           07555         movf    R1, W
0002C0 0208           07556         mulwf   R3 + 1          ; R1 * R3 + 1 = PRODHL
                      07557 
0002C2 50F3           07558         movf    PRODL, W        ; Add cross products
0002C4 2606           07559         addwf   R2 + 1, F
0002C6 50F4           07560         movf    PRODH, W
0002C8 2201           07561         addwfc  R0, F
0002CA 6AE8           07562         clrf    WREG
0002CC 2202           07563         addwfc  R0 + 1, F
                      07564 
0002CE 5004           07565         movf    R1 + 1, W
0002D0 0207           07566         mulwf   R3              ; R1 + 1 * R3 = PRODHL
                      07567 
0002D2 50F3           07568         movf    PRODL, W        ; Add cross products
0002D4 2606           07569         addwf   R2 + 1, F
0002D6 50F4           07570         movf    PRODH, W
0002D8 2201           07571         addwfc  R0, F
0002DA 6AE8           07572         clrf    WREG
0002DC 2202           07573         addwfc  R0 + 1, F
                      07574 
0002DE 5005           07575         movf    R2, W           ; Get low byte to W
0002E0 EF78 F001      07576         goto    DUNN
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07627   LIST
0002E4 6EE9           07628 JUMPMAN movwf   FSR0L
0002E6 6AFB           07629         clrf    PCLATU
0002E8 5012           07630         movf    R8 + 1, W
0002EA 6EFA           07631         movwf   PCLATH
0002EC 5011           07632         movf    R8, W
0002EE 6EF9           07633         movwf   PCL
                      07647   LIST
0002F0 0100           07648 DUNN    movlb   0               ; 1 Reset banks to 0
                      07649 DUNN3   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
0002F2 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
0002F4 0012           07650 DUNNRET return                  ; 2 Done
                      07663   LIST
0002F6                07664 INIT
                      07708   LIST
0002F6                07709 main
                      00095 
                      00096         MOVE?CB 040h, OSCCON
                          M         CHK?RP  OSCCON
                          M     if (((OSCCON) > BANKA_END) & ((OSCCON) < (0f01h + BANKA_END)))
                          M       if (((OSCCON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON)
                          M PREV_BANK = high (OSCCON)
                          M       endif
                          M     endif
                          M     if (low (040h) == 0)
                          M         clrf    OSCCON
                          M     else
0002F6 0E40               M         movlw   low (040h)
0002F8 6ED3               M         movwf   OSCCON
                          M     endif
                      00097         MOVE?CB 0FFh, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) > BANKA_END) & ((TRISA) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISA
                          M     else
0002FA 0EFF               M         movlw   low (0FFh)
0002FC 6E92               M         movwf   TRISA
                          M     endif
                      00098         MOVE?CB 000h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) > BANKA_END) & ((TRISC) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0002FE 6A94               M         clrf    TRISC
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISC
                          M     endif
                      00099         MOVE?CB 000h, ADCON1
                          M         CHK?RP  ADCON1
                          M     if (((ADCON1) > BANKA_END) & ((ADCON1) < (0f01h + BANKA_END)))
                          M       if (((ADCON1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON1)
                          M PREV_BANK = high (ADCON1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000300 6AC1               M         clrf    ADCON1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   ADCON1
                          M     endif
                      00100         MOVE?CB 087h, ADCON2
                          M         CHK?RP  ADCON2
                          M     if (((ADCON2) > BANKA_END) & ((ADCON2) < (0f01h + BANKA_END)))
                          M       if (((ADCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON2)
                          M PREV_BANK = high (ADCON2)
                          M       endif
                          M     endif
                          M     if (low (087h) == 0)
                          M         clrf    ADCON2
                          M     else
000302 0E87               M         movlw   low (087h)
000304 6EC0               M         movwf   ADCON2
                          M     endif
                      00101         MOVE?CB 00Ch, CCP1CON
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
                          M     if (low (00Ch) == 0)
                          M         clrf    CCP1CON
                          M     else
000306 0E0C               M         movlw   low (00Ch)
000308 6EBD               M         movwf   CCP1CON
                          M     endif
                      00102         MOVE?CB 007h, T2CON
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T2CON
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
                          M     if (low (007h) == 0)
                          M         clrf    T2CON
                          M     else
00030A 0E07               M         movlw   low (007h)
00030C 6ECA               M         movwf   T2CON
                          M     endif
                      00103         MOVE?CB 0FFh, PR2
                          M         CHK?RP  PR2
                          M     if (((PR2)   > BANKA_END) & ((PR2)   < (0f01h + BANKA_END)))
                          M       if (((PR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PR2)
                          M PREV_BANK = high (PR2)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    PR2
                          M     else
00030E 0EFF               M         movlw   low (0FFh)
000310 6ECB               M         movwf   PR2
                          M     endif
                      00104         MOVE?CW 064h, _dT_1
                          M         CHK?RP  _dT_1
                          M     if (((_dT_1) > BANKA_END) & ((_dT_1) < (0f01h + BANKA_END)))
                          M       if (((_dT_1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_1)
                          M PREV_BANK = high (_dT_1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (064h)
                          M         movwf   _dT_1
                          M         movlw   high (064h)
                          M         movwf   (_dT_1) + 1
                          M     else
                          M       if (low (064h) == 0)
                          M         clrf    _dT_1
                          M       else
000312 0E64               M         movlw   low (064h)
000314 6E22               M         movwf   _dT_1
                          M       endif
                          M       if ((high (064h)) == 0)
000316 6A23               M         clrf    (_dT_1) + 1
                          M       else
                          M         movlw   high (064h)
                          M         movwf   (_dT_1) + 1
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00105         MOVE?CW 00Ah, _dT_2
                          M         CHK?RP  _dT_2
                          M     if (((_dT_2) > BANKA_END) & ((_dT_2) < (0f01h + BANKA_END)))
                          M       if (((_dT_2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_2)
                          M PREV_BANK = high (_dT_2)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   _dT_2
                          M         movlw   high (00Ah)
                          M         movwf   (_dT_2) + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    _dT_2
                          M       else
000318 0E0A               M         movlw   low (00Ah)
00031A 6E24               M         movwf   _dT_2
                          M       endif
                          M       if ((high (00Ah)) == 0)
00031C 6A25               M         clrf    (_dT_2) + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (_dT_2) + 1
                          M       endif
                          M     endif
                      00106         MOVE?CW 005h, _n1
                          M         CHK?RP  _n1
                          M     if (((_n1)   > BANKA_END) & ((_n1)   < (0f01h + BANKA_END)))
                          M       if (((_n1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_n1)
                          M PREV_BANK = high (_n1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005h)
                          M         movwf   _n1
                          M         movlw   high (005h)
                          M         movwf   (_n1)  + 1
                          M     else
                          M       if (low (005h) == 0)
                          M         clrf    _n1
                          M       else
00031E 0E05               M         movlw   low (005h)
000320 6E32               M         movwf   _n1
                          M       endif
                          M       if ((high (005h)) == 0)
000322 6A33               M         clrf    (_n1)  + 1
                          M       else
                          M         movlw   high (005h)
                          M         movwf   (_n1)  + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      00107         MOVE?CW 032h, _n2
                          M         CHK?RP  _n2
                          M     if (((_n2)   > BANKA_END) & ((_n2)   < (0f01h + BANKA_END)))
                          M       if (((_n2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_n2)
                          M PREV_BANK = high (_n2)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _n2
                          M         movlw   high (032h)
                          M         movwf   (_n2)  + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _n2
                          M       else
000324 0E32               M         movlw   low (032h)
000326 6E34               M         movwf   _n2
                          M       endif
                          M       if ((high (032h)) == 0)
000328 6A35               M         clrf    (_n2)  + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_n2)  + 1
                          M       endif
                          M     endif
                      00108         MOVE?CW 005h, _temp_ref
                          M         CHK?RP  _temp_ref
                          M     if (((_temp_ref) > BANKA_END) & ((_temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref)
                          M PREV_BANK = high (_temp_ref)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005h)
                          M         movwf   _temp_ref
                          M         movlw   high (005h)
                          M         movwf   (_temp_ref) + 1
                          M     else
                          M       if (low (005h) == 0)
                          M         clrf    _temp_ref
                          M       else
00032A 0E05               M         movlw   low (005h)
00032C 6E68               M         movwf   _temp_ref
                          M       endif
                          M       if ((high (005h)) == 0)
00032E 6A69               M         clrf    (_temp_ref) + 1
                          M       else
                          M         movlw   high (005h)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (_temp_ref) + 1
                          M       endif
                          M     endif
                      00109         MOVE?CW 00Ah, _temp_ref + 00002h
                          M         CHK?RP  _temp_ref + 00002h
                          M     if (((_temp_ref + 00002h) > BANKA_END) & ((_temp_ref + 00002h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00002h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00002h)
                          M PREV_BANK = high (_temp_ref + 00002h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   _temp_ref + 00002h
                          M         movlw   high (00Ah)
                          M         movwf   (_temp_ref + 00002h) + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    _temp_ref + 00002h
                          M       else
000330 0E0A               M         movlw   low (00Ah)
000332 6E6A               M         movwf   _temp_ref + 00002h
                          M       endif
                          M       if ((high (00Ah)) == 0)
000334 6A6B               M         clrf    (_temp_ref + 00002h) + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (_temp_ref + 00002h) + 1
                          M       endif
                          M     endif
                      00110         MOVE?CW 00Fh, _temp_ref + 00004h
                          M         CHK?RP  _temp_ref + 00004h
                          M     if (((_temp_ref + 00004h) > BANKA_END) & ((_temp_ref + 00004h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00004h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00004h)
                          M PREV_BANK = high (_temp_ref + 00004h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Fh)
                          M         movwf   _temp_ref + 00004h
                          M         movlw   high (00Fh)
                          M         movwf   (_temp_ref + 00004h) + 1
                          M     else
                          M       if (low (00Fh) == 0)
                          M         clrf    _temp_ref + 00004h
                          M       else
000336 0E0F               M         movlw   low (00Fh)
000338 6E6C               M         movwf   _temp_ref + 00004h
                          M       endif
                          M       if ((high (00Fh)) == 0)
00033A 6A6D               M         clrf    (_temp_ref + 00004h) + 1
                          M       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   high (00Fh)
                          M         movwf   (_temp_ref + 00004h) + 1
                          M       endif
                          M     endif
                      00111         MOVE?CW 014h, _temp_ref + 00006h
                          M         CHK?RP  _temp_ref + 00006h
                          M     if (((_temp_ref + 00006h) > BANKA_END) & ((_temp_ref + 00006h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00006h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00006h)
                          M PREV_BANK = high (_temp_ref + 00006h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (014h)
                          M         movwf   _temp_ref + 00006h
                          M         movlw   high (014h)
                          M         movwf   (_temp_ref + 00006h) + 1
                          M     else
                          M       if (low (014h) == 0)
                          M         clrf    _temp_ref + 00006h
                          M       else
00033C 0E14               M         movlw   low (014h)
00033E 6E6E               M         movwf   _temp_ref + 00006h
                          M       endif
                          M       if ((high (014h)) == 0)
000340 6A6F               M         clrf    (_temp_ref + 00006h) + 1
                          M       else
                          M         movlw   high (014h)
                          M         movwf   (_temp_ref + 00006h) + 1
                          M       endif
                          M     endif
                      00112         MOVE?CW 019h, _temp_ref + 00008h
                          M         CHK?RP  _temp_ref + 00008h
                          M     if (((_temp_ref + 00008h) > BANKA_END) & ((_temp_ref + 00008h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00008h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00008h)
                          M PREV_BANK = high (_temp_ref + 00008h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (019h)
                          M         movwf   _temp_ref + 00008h
                          M         movlw   high (019h)
                          M         movwf   (_temp_ref + 00008h) + 1
                          M     else
                          M       if (low (019h) == 0)
                          M         clrf    _temp_ref + 00008h
                          M       else
000342 0E19               M         movlw   low (019h)
000344 6E70               M         movwf   _temp_ref + 00008h
                          M       endif
                          M       if ((high (019h)) == 0)
000346 6A71               M         clrf    (_temp_ref + 00008h) + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         movlw   high (019h)
                          M         movwf   (_temp_ref + 00008h) + 1
                          M       endif
                          M     endif
                      00113         MOVE?CW 01Eh, _temp_ref + 0000Ah
                          M         CHK?RP  _temp_ref + 0000Ah
                          M     if (((_temp_ref + 0000Ah) > BANKA_END) & ((_temp_ref + 0000Ah) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Ah) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Ah)
                          M PREV_BANK = high (_temp_ref + 0000Ah)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (01Eh)
                          M         movwf   _temp_ref + 0000Ah
                          M         movlw   high (01Eh)
                          M         movwf   (_temp_ref + 0000Ah) + 1
                          M     else
                          M       if (low (01Eh) == 0)
                          M         clrf    _temp_ref + 0000Ah
                          M       else
000348 0E1E               M         movlw   low (01Eh)
00034A 6E72               M         movwf   _temp_ref + 0000Ah
                          M       endif
                          M       if ((high (01Eh)) == 0)
00034C 6A73               M         clrf    (_temp_ref + 0000Ah) + 1
                          M       else
                          M         movlw   high (01Eh)
                          M         movwf   (_temp_ref + 0000Ah) + 1
                          M       endif
                          M     endif
                      00114         MOVE?CW 023h, _temp_ref + 0000Ch
                          M         CHK?RP  _temp_ref + 0000Ch
                          M     if (((_temp_ref + 0000Ch) > BANKA_END) & ((_temp_ref + 0000Ch) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Ch) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Ch)
                          M PREV_BANK = high (_temp_ref + 0000Ch)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (023h)
                          M         movwf   _temp_ref + 0000Ch
                          M         movlw   high (023h)
                          M         movwf   (_temp_ref + 0000Ch) + 1
                          M     else
                          M       if (low (023h) == 0)
                          M         clrf    _temp_ref + 0000Ch
                          M       else
00034E 0E23               M         movlw   low (023h)
000350 6E74               M         movwf   _temp_ref + 0000Ch
                          M       endif
                          M       if ((high (023h)) == 0)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000352 6A75               M         clrf    (_temp_ref + 0000Ch) + 1
                          M       else
                          M         movlw   high (023h)
                          M         movwf   (_temp_ref + 0000Ch) + 1
                          M       endif
                          M     endif
                      00115         MOVE?CW 028h, _temp_ref + 0000Eh
                          M         CHK?RP  _temp_ref + 0000Eh
                          M     if (((_temp_ref + 0000Eh) > BANKA_END) & ((_temp_ref + 0000Eh) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Eh) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Eh)
                          M PREV_BANK = high (_temp_ref + 0000Eh)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (028h)
                          M         movwf   _temp_ref + 0000Eh
                          M         movlw   high (028h)
                          M         movwf   (_temp_ref + 0000Eh) + 1
                          M     else
                          M       if (low (028h) == 0)
                          M         clrf    _temp_ref + 0000Eh
                          M       else
000354 0E28               M         movlw   low (028h)
000356 6E76               M         movwf   _temp_ref + 0000Eh
                          M       endif
                          M       if ((high (028h)) == 0)
000358 6A77               M         clrf    (_temp_ref + 0000Eh) + 1
                          M       else
                          M         movlw   high (028h)
                          M         movwf   (_temp_ref + 0000Eh) + 1
                          M       endif
                          M     endif
                      00116         MOVE?CW 02Dh, _temp_ref + 00010h
                          M         CHK?RP  _temp_ref + 00010h
                          M     if (((_temp_ref + 00010h) > BANKA_END) & ((_temp_ref + 00010h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00010h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00010h)
                          M PREV_BANK = high (_temp_ref + 00010h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (02Dh)
                          M         movwf   _temp_ref + 00010h
                          M         movlw   high (02Dh)
                          M         movwf   (_temp_ref + 00010h) + 1
                          M     else
                          M       if (low (02Dh) == 0)
                          M         clrf    _temp_ref + 00010h
                          M       else
00035A 0E2D               M         movlw   low (02Dh)
00035C 6E78               M         movwf   _temp_ref + 00010h
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((high (02Dh)) == 0)
00035E 6A79               M         clrf    (_temp_ref + 00010h) + 1
                          M       else
                          M         movlw   high (02Dh)
                          M         movwf   (_temp_ref + 00010h) + 1
                          M       endif
                          M     endif
                      00117         MOVE?CW 032h, _temp_ref + 00012h
                          M         CHK?RP  _temp_ref + 00012h
                          M     if (((_temp_ref + 00012h) > BANKA_END) & ((_temp_ref + 00012h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00012h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00012h)
                          M PREV_BANK = high (_temp_ref + 00012h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _temp_ref + 00012h
                          M         movlw   high (032h)
                          M         movwf   (_temp_ref + 00012h) + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _temp_ref + 00012h
                          M       else
000360 0E32               M         movlw   low (032h)
000362 6E7A               M         movwf   _temp_ref + 00012h
                          M       endif
                          M       if ((high (032h)) == 0)
000364 6A7B               M         clrf    (_temp_ref + 00012h) + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_temp_ref + 00012h) + 1
                          M       endif
                          M     endif
                      00118         MOVE?CW 037h, _temp_ref + 00014h
                          M         CHK?RP  _temp_ref + 00014h
                          M     if (((_temp_ref + 00014h) > BANKA_END) & ((_temp_ref + 00014h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00014h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00014h)
                          M PREV_BANK = high (_temp_ref + 00014h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (037h)
                          M         movwf   _temp_ref + 00014h
                          M         movlw   high (037h)
                          M         movwf   (_temp_ref + 00014h) + 1
                          M     else
                          M       if (low (037h) == 0)
                          M         clrf    _temp_ref + 00014h
                          M       else
000366 0E37               M         movlw   low (037h)
000368 6E7C               M         movwf   _temp_ref + 00014h
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if ((high (037h)) == 0)
00036A 6A7D               M         clrf    (_temp_ref + 00014h) + 1
                          M       else
                          M         movlw   high (037h)
                          M         movwf   (_temp_ref + 00014h) + 1
                          M       endif
                          M     endif
                      00119         MOVE?CW 03Ch, _temp_ref + 00016h
                          M         CHK?RP  _temp_ref + 00016h
                          M     if (((_temp_ref + 00016h) > BANKA_END) & ((_temp_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00016h)
                          M PREV_BANK = high (_temp_ref + 00016h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (03Ch)
                          M         movwf   _temp_ref + 00016h
                          M         movlw   high (03Ch)
                          M         movwf   (_temp_ref + 00016h) + 1
                          M     else
                          M       if (low (03Ch) == 0)
                          M         clrf    _temp_ref + 00016h
                          M       else
00036C 0E3C               M         movlw   low (03Ch)
00036E 6E7E               M         movwf   _temp_ref + 00016h
                          M       endif
                          M       if ((high (03Ch)) == 0)
000370 6A7F               M         clrf    (_temp_ref + 00016h) + 1
                          M       else
                          M         movlw   high (03Ch)
                          M         movwf   (_temp_ref + 00016h) + 1
                          M       endif
                          M     endif
                      00120         MOVE?CW 013DBh, _resistor_ref
                          M         CHK?RP  _resistor_ref
                          M     if (((_resistor_ref) > BANKA_END) & ((_resistor_ref) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref)
                          M PREV_BANK = high (_resistor_ref)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (013DBh)
                          M         movwf   _resistor_ref
                          M         movlw   high (013DBh)
                          M         movwf   (_resistor_ref) + 1
                          M     else
                          M       if (low (013DBh) == 0)
                          M         clrf    _resistor_ref
                          M       else
000372 0EDB               M         movlw   low (013DBh)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000374 6E50               M         movwf   _resistor_ref
                          M       endif
                          M       if ((high (013DBh)) == 0)
                          M         clrf    (_resistor_ref) + 1
                          M       else
000376 0E13               M         movlw   high (013DBh)
000378 6E51               M         movwf   (_resistor_ref) + 1
                          M       endif
                          M     endif
                      00121         MOVE?CW 00FF1h, _resistor_ref + 00002h
                          M         CHK?RP  _resistor_ref + 00002h
                          M     if (((_resistor_ref + 00002h) > BANKA_END) & ((_resistor_ref + 00002h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00002h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00002h)
                          M PREV_BANK = high (_resistor_ref + 00002h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00FF1h)
                          M         movwf   _resistor_ref + 00002h
                          M         movlw   high (00FF1h)
                          M         movwf   (_resistor_ref + 00002h) + 1
                          M     else
                          M       if (low (00FF1h) == 0)
                          M         clrf    _resistor_ref + 00002h
                          M       else
00037A 0EF1               M         movlw   low (00FF1h)
00037C 6E52               M         movwf   _resistor_ref + 00002h
                          M       endif
                          M       if ((high (00FF1h)) == 0)
                          M         clrf    (_resistor_ref + 00002h) + 1
                          M       else
00037E 0E0F               M         movlw   high (00FF1h)
000380 6E53               M         movwf   (_resistor_ref + 00002h) + 1
                          M       endif
                          M     endif
                      00122         MOVE?CW 00CE3h, _resistor_ref + 00004h
                          M         CHK?RP  _resistor_ref + 00004h
                          M     if (((_resistor_ref + 00004h) > BANKA_END) & ((_resistor_ref + 00004h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00004h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00004h)
                          M PREV_BANK = high (_resistor_ref + 00004h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00CE3h)
                          M         movwf   _resistor_ref + 00004h
                          M         movlw   high (00CE3h)
                          M         movwf   (_resistor_ref + 00004h) + 1
                          M     else
                          M       if (low (00CE3h) == 0)
                          M         clrf    _resistor_ref + 00004h
                          M       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000382 0EE3               M         movlw   low (00CE3h)
000384 6E54               M         movwf   _resistor_ref + 00004h
                          M       endif
                          M       if ((high (00CE3h)) == 0)
                          M         clrf    (_resistor_ref + 00004h) + 1
                          M       else
000386 0E0C               M         movlw   high (00CE3h)
000388 6E55               M         movwf   (_resistor_ref + 00004h) + 1
                          M       endif
                          M     endif
                      00123         MOVE?CW 00A7Dh, _resistor_ref + 00006h
                          M         CHK?RP  _resistor_ref + 00006h
                          M     if (((_resistor_ref + 00006h) > BANKA_END) & ((_resistor_ref + 00006h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00006h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00006h)
                          M PREV_BANK = high (_resistor_ref + 00006h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00A7Dh)
                          M         movwf   _resistor_ref + 00006h
                          M         movlw   high (00A7Dh)
                          M         movwf   (_resistor_ref + 00006h) + 1
                          M     else
                          M       if (low (00A7Dh) == 0)
                          M         clrf    _resistor_ref + 00006h
                          M       else
00038A 0E7D               M         movlw   low (00A7Dh)
00038C 6E56               M         movwf   _resistor_ref + 00006h
                          M       endif
                          M       if ((high (00A7Dh)) == 0)
                          M         clrf    (_resistor_ref + 00006h) + 1
                          M       else
00038E 0E0A               M         movlw   high (00A7Dh)
000390 6E57               M         movwf   (_resistor_ref + 00006h) + 1
                          M       endif
                          M     endif
                      00124         MOVE?CW 00898h, _resistor_ref + 00008h
                          M         CHK?RP  _resistor_ref + 00008h
                          M     if (((_resistor_ref + 00008h) > BANKA_END) & ((_resistor_ref + 00008h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00008h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00008h)
                          M PREV_BANK = high (_resistor_ref + 00008h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00898h)
                          M         movwf   _resistor_ref + 00008h
                          M         movlw   high (00898h)
                          M         movwf   (_resistor_ref + 00008h) + 1
                          M     else
                          M       if (low (00898h) == 0)
                          M         clrf    _resistor_ref + 00008h
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
000392 0E98               M         movlw   low (00898h)
000394 6E58               M         movwf   _resistor_ref + 00008h
                          M       endif
                          M       if ((high (00898h)) == 0)
                          M         clrf    (_resistor_ref + 00008h) + 1
                          M       else
000396 0E08               M         movlw   high (00898h)
000398 6E59               M         movwf   (_resistor_ref + 00008h) + 1
                          M       endif
                          M     endif
                      00125         MOVE?CW 00715h, _resistor_ref + 0000Ah
                          M         CHK?RP  _resistor_ref + 0000Ah
                          M     if (((_resistor_ref + 0000Ah) > BANKA_END) & ((_resistor_ref + 0000Ah) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Ah) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Ah)
                          M PREV_BANK = high (_resistor_ref + 0000Ah)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00715h)
                          M         movwf   _resistor_ref + 0000Ah
                          M         movlw   high (00715h)
                          M         movwf   (_resistor_ref + 0000Ah) + 1
                          M     else
                          M       if (low (00715h) == 0)
                          M         clrf    _resistor_ref + 0000Ah
                          M       else
00039A 0E15               M         movlw   low (00715h)
00039C 6E5A               M         movwf   _resistor_ref + 0000Ah
                          M       endif
                          M       if ((high (00715h)) == 0)
                          M         clrf    (_resistor_ref + 0000Ah) + 1
                          M       else
00039E 0E07               M         movlw   high (00715h)
0003A0 6E5B               M         movwf   (_resistor_ref + 0000Ah) + 1
                          M       endif
                          M     endif
                      00126         MOVE?CW 005DFh, _resistor_ref + 0000Ch
                          M         CHK?RP  _resistor_ref + 0000Ch
                          M     if (((_resistor_ref + 0000Ch) > BANKA_END) & ((_resistor_ref + 0000Ch) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Ch) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Ch)
                          M PREV_BANK = high (_resistor_ref + 0000Ch)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005DFh)
                          M         movwf   _resistor_ref + 0000Ch
                          M         movlw   high (005DFh)
                          M         movwf   (_resistor_ref + 0000Ch) + 1
                          M     else
                          M       if (low (005DFh) == 0)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    _resistor_ref + 0000Ch
                          M       else
0003A2 0EDF               M         movlw   low (005DFh)
0003A4 6E5C               M         movwf   _resistor_ref + 0000Ch
                          M       endif
                          M       if ((high (005DFh)) == 0)
                          M         clrf    (_resistor_ref + 0000Ch) + 1
                          M       else
0003A6 0E05               M         movlw   high (005DFh)
0003A8 6E5D               M         movwf   (_resistor_ref + 0000Ch) + 1
                          M       endif
                          M     endif
                      00127         MOVE?CW 004E6h, _resistor_ref + 0000Eh
                          M         CHK?RP  _resistor_ref + 0000Eh
                          M     if (((_resistor_ref + 0000Eh) > BANKA_END) & ((_resistor_ref + 0000Eh) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Eh) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Eh)
                          M PREV_BANK = high (_resistor_ref + 0000Eh)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (004E6h)
                          M         movwf   _resistor_ref + 0000Eh
                          M         movlw   high (004E6h)
                          M         movwf   (_resistor_ref + 0000Eh) + 1
                          M     else
                          M       if (low (004E6h) == 0)
                          M         clrf    _resistor_ref + 0000Eh
                          M       else
0003AA 0EE6               M         movlw   low (004E6h)
0003AC 6E5E               M         movwf   _resistor_ref + 0000Eh
                          M       endif
                          M       if ((high (004E6h)) == 0)
                          M         clrf    (_resistor_ref + 0000Eh) + 1
                          M       else
0003AE 0E04               M         movlw   high (004E6h)
0003B0 6E5F               M         movwf   (_resistor_ref + 0000Eh) + 1
                          M       endif
                          M     endif
                      00128         MOVE?CW 0041Bh, _resistor_ref + 00010h
                          M         CHK?RP  _resistor_ref + 00010h
                          M     if (((_resistor_ref + 00010h) > BANKA_END) & ((_resistor_ref + 00010h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00010h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00010h)
                          M PREV_BANK = high (_resistor_ref + 00010h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0041Bh)
                          M         movwf   _resistor_ref + 00010h
                          M         movlw   high (0041Bh)
                          M         movwf   (_resistor_ref + 00010h) + 1
                          M     else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (0041Bh) == 0)
                          M         clrf    _resistor_ref + 00010h
                          M       else
0003B2 0E1B               M         movlw   low (0041Bh)
0003B4 6E60               M         movwf   _resistor_ref + 00010h
                          M       endif
                          M       if ((high (0041Bh)) == 0)
                          M         clrf    (_resistor_ref + 00010h) + 1
                          M       else
0003B6 0E04               M         movlw   high (0041Bh)
0003B8 6E61               M         movwf   (_resistor_ref + 00010h) + 1
                          M       endif
                          M     endif
                      00129         MOVE?CW 00376h, _resistor_ref + 00012h
                          M         CHK?RP  _resistor_ref + 00012h
                          M     if (((_resistor_ref + 00012h) > BANKA_END) & ((_resistor_ref + 00012h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00012h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00012h)
                          M PREV_BANK = high (_resistor_ref + 00012h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00376h)
                          M         movwf   _resistor_ref + 00012h
                          M         movlw   high (00376h)
                          M         movwf   (_resistor_ref + 00012h) + 1
                          M     else
                          M       if (low (00376h) == 0)
                          M         clrf    _resistor_ref + 00012h
                          M       else
0003BA 0E76               M         movlw   low (00376h)
0003BC 6E62               M         movwf   _resistor_ref + 00012h
                          M       endif
                          M       if ((high (00376h)) == 0)
                          M         clrf    (_resistor_ref + 00012h) + 1
                          M       else
0003BE 0E03               M         movlw   high (00376h)
0003C0 6E63               M         movwf   (_resistor_ref + 00012h) + 1
                          M       endif
                          M     endif
                      00130         MOVE?CW 002EEh, _resistor_ref + 00014h
                          M         CHK?RP  _resistor_ref + 00014h
                          M     if (((_resistor_ref + 00014h) > BANKA_END) & ((_resistor_ref + 00014h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00014h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00014h)
                          M PREV_BANK = high (_resistor_ref + 00014h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (002EEh)
                          M         movwf   _resistor_ref + 00014h
                          M         movlw   high (002EEh)
                          M         movwf   (_resistor_ref + 00014h) + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (low (002EEh) == 0)
                          M         clrf    _resistor_ref + 00014h
                          M       else
0003C2 0EEE               M         movlw   low (002EEh)
0003C4 6E64               M         movwf   _resistor_ref + 00014h
                          M       endif
                          M       if ((high (002EEh)) == 0)
                          M         clrf    (_resistor_ref + 00014h) + 1
                          M       else
0003C6 0E02               M         movlw   high (002EEh)
0003C8 6E65               M         movwf   (_resistor_ref + 00014h) + 1
                          M       endif
                          M     endif
                      00131         MOVE?CW 0027Fh, _resistor_ref + 00016h
                          M         CHK?RP  _resistor_ref + 00016h
                          M     if (((_resistor_ref + 00016h) > BANKA_END) & ((_resistor_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00016h)
                          M PREV_BANK = high (_resistor_ref + 00016h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0027Fh)
                          M         movwf   _resistor_ref + 00016h
                          M         movlw   high (0027Fh)
                          M         movwf   (_resistor_ref + 00016h) + 1
                          M     else
                          M       if (low (0027Fh) == 0)
                          M         clrf    _resistor_ref + 00016h
                          M       else
0003CA 0E7F               M         movlw   low (0027Fh)
0003CC 6E66               M         movwf   _resistor_ref + 00016h
                          M       endif
                          M       if ((high (0027Fh)) == 0)
                          M         clrf    (_resistor_ref + 00016h) + 1
                          M       else
0003CE 0E02               M         movlw   high (0027Fh)
0003D0 6E67               M         movwf   (_resistor_ref + 00016h) + 1
                          M       endif
                          M     endif
                      00132         MOVE?CW 064h, _flow_pwm_val
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (064h)
                          M         movwf   _flow_pwm_val
                          M         movlw   high (064h)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (_flow_pwm_val) + 1
                          M     else
                          M       if (low (064h) == 0)
                          M         clrf    _flow_pwm_val
                          M       else
0003D2 0E64               M         movlw   low (064h)
0003D4 6E28               M         movwf   _flow_pwm_val
                          M       endif
                          M       if ((high (064h)) == 0)
0003D6 6A29               M         clrf    (_flow_pwm_val) + 1
                          M       else
                          M         movlw   high (064h)
                          M         movwf   (_flow_pwm_val) + 1
                          M       endif
                          M     endif
                      00133         MOVE?TT _flow_pwm_val??0, _CCP1CON??4
                          M     if (((_flow_pwm_val) <= BANKA_END) | ((_flow_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
0003D8 B028               M         btfsc   _flow_pwm_val, 000h
0003DA 88BD               M         bsf     CCP1CON, 004h
0003DC A028               M         btfss   _flow_pwm_val, 000h
0003DE 98BD               M         bcf     CCP1CON, 004h
                          M     else
                          M       if (((_flow_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _flow_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _flow_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M           else
                          M         MOVE?TA _flow_pwm_val, 000h
                          M         MOVE?AT CCP1CON, 004h
                          M           endif
                          M       endif
                          M     endif
                      00134         MOVE?TT _flow_pwm_val??1, _CCP1CON??5
                          M     if (((_flow_pwm_val) <= BANKA_END) | ((_flow_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
0003E0 B228               M         btfsc   _flow_pwm_val, 001h
0003E2 8ABD               M         bsf     CCP1CON, 005h
0003E4 A228               M         btfss   _flow_pwm_val, 001h
0003E6 9ABD               M         bcf     CCP1CON, 005h
                          M     else
                          M       if (((_flow_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _flow_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _flow_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M           else
                          M         MOVE?TA _flow_pwm_val, 001h
                          M         MOVE?AT CCP1CON, 005h
                          M           endif
                          M       endif
                          M     endif
                      00135         SHIFTR?WCB      _flow_pwm_val, 002h, CCPR1L
                          M     if (002h == 1)
                          M         CHK?RP  _flow_pwm_val
                          M         rrcf    _flow_pwm_val + 1, W
                          M         rrcf    _flow_pwm_val, W
                          M         MOVE?AB CCPR1L
                          M     else
                          M         MOVE?WW _flow_pwm_val, R0
                          M         MOVE?BB _flow_pwm_val, R0
0003E8 C028 F001          M         movff   _flow_pwm_val, R0
                          M         MOVE?BB (_flow_pwm_val) + 1, (R0) + 1
0003EC C029 F002          M         movff   (_flow_pwm_val) + 1, (R0) + 1
                          M         MOVE?CA 002h
0003F0 0E02               M         movlw   low (002h)
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
0003F2 DF11               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB CCPR1L
                          M         CHK?RP  CCPR1L
                          M     if (((CCPR1L) > BANKA_END) & ((CCPR1L) < (0f01h + BANKA_END)))
                          M       if (((CCPR1L) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCPR1L)
                          M PREV_BANK = high (CCPR1L)
                          M       endif
                          M     endif
0003F4 6EBE               M         movwf   CCPR1L
                          M     endif
                      00136 
                      00137         LABEL?L _main   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _main
                          M         XALL
                          M     else
0003F6                    M _main
                          M     endif
                      00138         MOVE?CB 009h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (009h) == 0)
                          M         clrf    ADCON0
                          M     else
0003F6 0E09               M         movlw   low (009h)
0003F8 6EC2               M         movwf   ADCON0
                          M     endif
                      00139         ADCIN?CW        002h, _t1temp_ref
                          M         MOVE?CA 002h
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003FA 0E02               M         movlw   low (002h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
                          M         call    ADCIN
                          M           else
0003FC DECE               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _t1temp_ref
                          M         MOVE?AB _t1temp_ref
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0003FE 6E44               M         movwf   _t1temp_ref
                          M         MOVE?BB (R0)  + 1, (_t1temp_ref) + 1
000400 C002 F045          M         movff   (R0) + 1, (_t1temp_ref) + 1
                      00140         MUL?WCW _t1temp_ref, 032h, T1
                          M         MOVE?WW _t1temp_ref, R3
                          M         MOVE?BB _t1temp_ref, R3
000404 C044 F007          M         movff   _t1temp_ref, R3
                          M         MOVE?BB (_t1temp_ref) + 1, (R3) + 1
000408 C045 F008          M         movff   (_t1temp_ref) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
00040C 0E32               M         movlw   low (032h)
00040E 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
000410 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000412 DF49               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000414 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000416 C006 F014          M         movff   (R2) + 1, (T1) + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00141         DIV?WCW T1, 0FFh, T1
                          M     if (0FFh == 2)
                          M         bcf     STATUS, C
                          M       if (T1   == T1)
                          M         CHK?RP  T1
                          M         rrcf    T1   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
00041A C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00041E C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 0FFh, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0FFh)
                          M         movwf   R1
                          M         movlw   high (0FFh)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (0FFh) == 0)
                          M         clrf    R1
                          M       else
000422 0EFF               M         movlw   low (0FFh)
000424 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (0FFh)) == 0)
000426 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (0FFh)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
000428 DF26               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00042A 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
00042C C002 F014          M         movff   (R0) + 1, (T1) + 1
                          M     endif
                      00142         MUL?WCW T1, 00Ah, _t1temp_ref
                          M         MOVE?WW T1,  R3
                          M         MOVE?BB T1,  R3
000430 C013 F007          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
000434 C014 F008          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    R1
                          M       else
000438 0E0A               M         movlw   low (00Ah)
00043A 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
00043C 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
00043E DF33               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, _t1temp_ref
                          M         MOVE?AB _t1temp_ref
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
000440 6E44               M         movwf   _t1temp_ref
                          M         MOVE?BB (R2)  + 1, (_t1temp_ref) + 1
000442 C006 F045          M         movff   (R2) + 1, (_t1temp_ref) + 1
                      00143         GOSUB?L _get_temp_value
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _get_temp_value
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_temp_value
                          M     else
                          M       if ((_get_temp_value) < 1)
                          M         call    _get_temp_value
                          M       else
                          M         if ((_get_temp_value) > $)
000446 ECC1 F002          M         call    _get_temp_value
                          M         else
                          M           if ((_get_temp_value) < ($ - 3ffh))
                          M         call    _get_temp_value
                          M           else
                          M         rcall   _get_temp_value
                          M           endif
                          M         endif
                          M       endif
                          M     endif
00044A                    M dlabel
                      00144         GOSUB?L _get_temp_pwm
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         L?CALL  _get_temp_pwm
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_temp_pwm
                          M     else
                          M       if ((_get_temp_pwm) < 1)
                          M         call    _get_temp_pwm
                          M       else
                          M         if ((_get_temp_pwm) > $)
00044A ECCE F003          M         call    _get_temp_pwm
                          M         else
                          M           if ((_get_temp_pwm) < ($ - 3ffh))
                          M         call    _get_temp_pwm
                          M           else
                          M         rcall   _get_temp_pwm
                          M           endif
                          M         endif
                          M       endif
                          M     endif
00044E                    M dlabel
                      00145         HPWM?CWC        002h, _temp_pwm_val, 0F5h
                          M         MOVE?WB _temp_pwm_val, R4
                          M         MOVE?BB _temp_pwm_val, R4
00044E C04A F009          M         movff   _temp_pwm_val, R4
                          M         MOVE?CW 0F5h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0F5h)
                          M         movwf   R1
                          M         movlw   high (0F5h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (0F5h) == 0)
                          M         clrf    R1
                          M       else
000452 0EF5               M         movlw   low (0F5h)
000454 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (0F5h)) == 0)
000456 6A04               M         clrf    (R1)   + 1
                          M       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   high (0F5h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         MOVE?CA 002h
000458 0E02               M         movlw   low (002h)
                          M         L?CALL  HPWM
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    HPWM
                          M     else
                          M       if ((HPWM)  < 1)
                          M         call    HPWM
                          M       else
                          M         if ((HPWM)  > $)
                          M         call    HPWM
                          M         else
                          M           if ((HPWM)  < ($ - 3ffh))
00045A EC03 F000          M         call    HPWM
                          M           else
                          M         rcall   HPWM
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00146         MOVE?CB 00Dh, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (00Dh) == 0)
                          M         clrf    ADCON0
                          M     else
00045E 0E0D               M         movlw   low (00Dh)
000460 6EC2               M         movwf   ADCON0
                          M     endif
                      00147         ADCIN?CW        003h, _flow_ref
                          M         MOVE?CA 003h
000462 0E03               M         movlw   low (003h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
                          M         call    ADCIN
                          M           else
000464 DE9A               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _flow_ref
                          M         MOVE?AB _flow_ref
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
000466 6E2A               M         movwf   _flow_ref
                          M         MOVE?BB (R0)  + 1, (_flow_ref) + 1
000468 C002 F02B          M         movff   (R0) + 1, (_flow_ref) + 1
                      00148         MUL?WCW _flow_ref, 02Ch, T1
                          M         MOVE?WW _flow_ref, R3
                          M         MOVE?BB _flow_ref, R3
00046C C02A F007          M         movff   _flow_ref, R3
                          M         MOVE?BB (_flow_ref) + 1, (R3) + 1
000470 C02B F008          M         movff   (_flow_ref) + 1, (R3) + 1
                          M         MOVE?CW 02Ch, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (02Ch)
                          M         movwf   R1
                          M         movlw   high (02Ch)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (02Ch) == 0)
                          M         clrf    R1
                          M       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000474 0E2C               M         movlw   low (02Ch)
000476 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (02Ch)) == 0)
000478 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (02Ch)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
00047A DF15               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00047C 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
00047E C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00149         DIV?WCW T1, 00400h, _flow_ref
                          M     if (00400h == 2)
                          M         bcf     STATUS, C
                          M       if (_flow_ref == T1)
                          M         CHK?RP  _flow_ref
                          M         rrcf    _flow_ref + 1, F
                          M         rrcf    _flow_ref, F
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB _flow_ref + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB _flow_ref
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000482 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000486 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 00400h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00400h)
                          M         movwf   R1
                          M         movlw   high (00400h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00400h) == 0)
00048A 6A03               M         clrf    R1
                          M       else
                          M         movlw   low (00400h)
                          M         movwf   R1
                          M       endif
                          M       if ((high (00400h)) == 0)
                          M         clrf    (R1)   + 1
                          M       else
00048C 0E04               M         movlw   high (00400h)
00048E 6E04               M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
000490 DEF2               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _flow_ref
                          M         MOVE?AB _flow_ref
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
000492 6E2A               M         movwf   _flow_ref
                          M         MOVE?BB (R0)  + 1, (_flow_ref) + 1
000494 C002 F02B          M         movff   (R0) + 1, (_flow_ref) + 1
                          M     endif
                      00150         GOSUB?L _get_flowrate
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _get_flowrate
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_flowrate
                          M     else
                          M       if ((_get_flowrate) < 1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    _get_flowrate
                          M       else
                          M         if ((_get_flowrate) > $)
000498 ECB8 F004          M         call    _get_flowrate
                          M         else
                          M           if ((_get_flowrate) < ($ - 3ffh))
                          M         call    _get_flowrate
                          M           else
                          M         rcall   _get_flowrate
                          M           endif
                          M         endif
                          M       endif
                          M     endif
00049C                    M dlabel
                      00151         GOSUB?L _get_water_pwm
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _get_water_pwm
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_water_pwm
                          M     else
                          M       if ((_get_water_pwm) < 1)
                          M         call    _get_water_pwm
                          M       else
                          M         if ((_get_water_pwm) > $)
00049C ECDA F004          M         call    _get_water_pwm
                          M         else
                          M           if ((_get_water_pwm) < ($ - 3ffh))
                          M         call    _get_water_pwm
                          M           else
                          M         rcall   _get_water_pwm
                          M           endif
                          M         endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
0004A0                    M dlabel
                      00152         MOVE?TT _flow_pwm_val??0, _CCP1CON??4
                          M     if (((_flow_pwm_val) <= BANKA_END) | ((_flow_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
0004A0 B028               M         btfsc   _flow_pwm_val, 000h
0004A2 88BD               M         bsf     CCP1CON, 004h
0004A4 A028               M         btfss   _flow_pwm_val, 000h
0004A6 98BD               M         bcf     CCP1CON, 004h
                          M     else
                          M       if (((_flow_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _flow_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 000h
                          M         bsf     CCP1CON, 004h
                          M         btfss   _flow_pwm_val, 000h
                          M         bcf     CCP1CON, 004h
                          M           else
                          M         MOVE?TA _flow_pwm_val, 000h
                          M         MOVE?AT CCP1CON, 004h
                          M           endif
                          M       endif
                          M     endif
                      00153         MOVE?TT _flow_pwm_val??1, _CCP1CON??5
                          M     if (((_flow_pwm_val) <= BANKA_END) | ((_flow_pwm_val) >= (0f01h + BANKA_END)))
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
0004A8 B228               M         btfsc   _flow_pwm_val, 001h
0004AA 8ABD               M         bsf     CCP1CON, 005h
0004AC A228               M         btfss   _flow_pwm_val, 001h
0004AE 9ABD               M         bcf     CCP1CON, 005h
                          M     else
                          M       if (((_flow_pwm_val) & 0f00h) == ((CCP1CON) & 0f00h))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 001h
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     CCP1CON, 005h
                          M         btfss   _flow_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M       else
                          M           if (((CCP1CON) <= BANKA_END) | ((CCP1CON) >= (0f01h + BANKA_END)))
                          M         CHK?RP  _flow_pwm_val
                          M         btfsc   _flow_pwm_val, 001h
                          M         bsf     CCP1CON, 005h
                          M         btfss   _flow_pwm_val, 001h
                          M         bcf     CCP1CON, 005h
                          M           else
                          M         MOVE?TA _flow_pwm_val, 001h
                          M         MOVE?AT CCP1CON, 005h
                          M           endif
                          M       endif
                          M     endif
                      00154         SHIFTR?WCB      _flow_pwm_val, 002h, CCPR1L
                          M     if (002h == 1)
                          M         CHK?RP  _flow_pwm_val
                          M         rrcf    _flow_pwm_val + 1, W
                          M         rrcf    _flow_pwm_val, W
                          M         MOVE?AB CCPR1L
                          M     else
                          M         MOVE?WW _flow_pwm_val, R0
                          M         MOVE?BB _flow_pwm_val, R0
0004B0 C028 F001          M         movff   _flow_pwm_val, R0
                          M         MOVE?BB (_flow_pwm_val) + 1, (R0) + 1
0004B4 C029 F002          M         movff   (_flow_pwm_val) + 1, (R0) + 1
                          M         MOVE?CA 002h
0004B8 0E02               M         movlw   low (002h)
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
0004BA DEAD               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         MOVE?AB CCPR1L
                          M         CHK?RP  CCPR1L
                          M     if (((CCPR1L) > BANKA_END) & ((CCPR1L) < (0f01h + BANKA_END)))
                          M       if (((CCPR1L) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCPR1L)
                          M PREV_BANK = high (CCPR1L)
                          M       endif
                          M     endif
0004BC 6EBE               M         movwf   CCPR1L
                          M     endif
                      00155         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
0004BE 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004C0 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00156         LCDOUT?C        001h
                          M         MOVE?CA 001h
0004C4 0E01               M         movlw   low (001h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004C6 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00157         LCDOUT?C        054h
                          M         MOVE?CA 054h
0004CA 0E54               M         movlw   low (054h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004CC EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00158         LCDOUT?C        065h
                          M         MOVE?CA 065h
0004D0 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004D2 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00159         LCDOUT?C        06Dh
                          M         MOVE?CA 06Dh
0004D6 0E6D               M         movlw   low (06Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004D8 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00160         LCDOUT?C        070h
                          M         MOVE?CA 070h
0004DC 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004DE EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00161         LCDOUT?C        03Ah
                          M         MOVE?CA 03Ah
0004E2 0E3A               M         movlw   low (03Ah)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004E4 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00162         LCDOUT?C        020h
                          M         MOVE?CA 020h
0004E8 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0004EA EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00163         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0004EE 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00164         LCDOUTNUM?W     _t1temp_ref
                          M         MOVE?WW _t1temp_ref, R2
                          M         MOVE?BB _t1temp_ref, R2
0004F0 C044 F005          M         movff   _t1temp_ref, R2
                          M         MOVE?BB (_t1temp_ref) + 1, (R2) + 1
0004F4 C045 F006          M         movff   (_t1temp_ref) + 1, (R2) + 1
                      00165         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
0004F8 0E94               M         movlw   low (LCDOUTJ)
0004FA 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
0004FC 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
0004FE DE1F               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00166         LCDOUT?C        020h
                          M         MOVE?CA 020h
000500 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000502 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00167         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000506 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00168         LCDOUTNUM?W     _t1temp_val
                          M         MOVE?WW _t1temp_val, R2
                          M         MOVE?BB _t1temp_val, R2
000508 C048 F005          M         movff   _t1temp_val, R2
                          M         MOVE?BB (_t1temp_val) + 1, (R2) + 1
00050C C049 F006          M         movff   (_t1temp_val) + 1, (R2) + 1
                      00169         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000510 0E94               M         movlw   low (LCDOUTJ)
000512 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000514 6A12               M         clrf    (R8)   + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
000516 DE13               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00170         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
000518 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00051A EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                      00171         LCDOUT?C        0C0h
                          M         MOVE?CA 0C0h
00051E 0EC0               M         movlw   low (0C0h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000520 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00172         LCDOUT?C        046h
                          M         MOVE?CA 046h
000524 0E46               M         movlw   low (046h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000526 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00173         LCDOUT?C        06Ch
                          M         MOVE?CA 06Ch
00052A 0E6C               M         movlw   low (06Ch)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00052C EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00174         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
000530 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000532 EC4B F000          M         call    LCDOUT
                          M           else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00175         LCDOUT?C        077h
                          M         MOVE?CA 077h
000536 0E77               M         movlw   low (077h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000538 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00176         LCDOUT?C        03Ah
                          M         MOVE?CA 03Ah
00053C 0E3A               M         movlw   low (03Ah)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00053E EC4B F000          M         call    LCDOUT
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00177         LCDOUT?C        020h
                          M         MOVE?CA 020h
000542 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000544 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00178         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000548 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00179         LCDOUTNUM?W     _an_frequency
                          M         MOVE?WW _an_frequency, R2
                          M         MOVE?BB _an_frequency, R2
00054A C020 F005          M         movff   _an_frequency, R2
                          M         MOVE?BB (_an_frequency) + 1, (R2) + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00054E C021 F006          M         movff   (_an_frequency) + 1, (R2) + 1
                      00180         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000552 0E94               M         movlw   low (LCDOUTJ)
000554 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000556 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000558 EC9F F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00181         LCDOUT?C        020h
                          M         MOVE?CA 020h
00055C 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00055E EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00182         LCDOUT?C        020h
                          M         MOVE?CA 020h
000562 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000564 EC4B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00183         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000568 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00184         LCDOUTNUM?W     _flow_val
                          M         MOVE?WW _flow_val, R2
                          M         MOVE?BB _flow_val, R2
00056A C02C F005          M         movff   _flow_val, R2
                          M         MOVE?BB (_flow_val) + 1, (R2) + 1
00056E C02D F006          M         movff   (_flow_val) + 1, (R2) + 1
                      00185         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000572 0E94               M         movlw   low (LCDOUTJ)
000574 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000576 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000578 EC9F F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00186         GOTO?L  _main
                          M         L?GOTO  _main
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_main))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _main
                          M     else
                          M       if ((_main) < 1)
                          M         goto    _main
                          M       else
                          M         if ((_main) > $)
                          M         goto    _main
                          M         else
                          M           if ((_main) < ($ - 3ffh))
                          M         goto    _main
                          M           else
00057C D73C               M         bra     _main
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00187         END?    
  0000                    M     local loop
00057E 0003               M loop    sleep
000580 D7FE               M         bra     loop
                      00188 
                      00189         LABEL?L _get_temp_value 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_temp_value
                          M         XALL
                          M     else
000582                    M _get_temp_value
                          M     endif
                      00190         MOVE?CB 001h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    ADCON0
                          M     else
000582 0E01               M         movlw   low (001h)
000584 6EC2               M         movwf   ADCON0
                          M     endif
                      00191         ADCIN?CW        000h, _t1adval
                          M         MOVE?CA 000h
000586 0E00               M         movlw   low (000h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    ADCIN
                          M           else
000588 DE08               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _t1adval
                          M         MOVE?AB _t1adval
                          M         CHK?RP  _t1adval
                          M     if (((_t1adval) > BANKA_END) & ((_t1adval) < (0f01h + BANKA_END)))
                          M       if (((_t1adval) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1adval)
                          M PREV_BANK = high (_t1adval)
                          M       endif
                          M     endif
00058A 6E36               M         movwf   _t1adval
                          M         MOVE?BB (R0)  + 1, (_t1adval) + 1
00058C C002 F037          M         movff   (R0) + 1, (_t1adval) + 1
                      00192         DIV?CWW 0B000h, _t1adval, T1
                          M         MOVE?CW 0B000h, R0
                          M         CHK?RP  R0
                          M     if (((R0)    > BANKA_END) & ((R0)    < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0B000h)
                          M         movwf   R0
                          M         movlw   high (0B000h)
                          M         movwf   (R0)   + 1
                          M     else
                          M       if (low (0B000h) == 0)
000590 6A01               M         clrf    R0
                          M       else
                          M         movlw   low (0B000h)
                          M         movwf   R0
                          M       endif
                          M       if ((high (0B000h)) == 0)
                          M         clrf    (R0)   + 1
                          M       else
000592 0EB0               M         movlw   high (0B000h)
000594 6E02               M         movwf   (R0)   + 1
                          M       endif
                          M     endif
                          M         MOVE?WW _t1adval, R1
                          M         MOVE?BB _t1adval, R1
000596 C036 F003          M         movff   _t1adval, R1
                          M         MOVE?BB (_t1adval) + 1, (R1) + 1
00059A C037 F004          M         movff   (_t1adval) + 1, (R1) + 1
                          M         L?CALL  DIV
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
00059E DE6B               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005A0 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
0005A2 C002 F014          M         movff   (R0) + 1, (T1) + 1
                      00193         MUL?WCW T1, 032h, T1
                          M         MOVE?WW T1,  R3
                          M         MOVE?BB T1,  R3
0005A6 C013 F007          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
0005AA C014 F008          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
0005AE 0E32               M         movlw   low (032h)
0005B0 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
0005B2 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
0005B4 DE78               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005B6 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
0005B8 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00194         SUB?WCW T1, 00898h, _t1resistance
                          M     if (_t1resistance == T1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (00898h)
                          M         CHK?RP  _t1resistance
                          M         subwf   _t1resistance, F
                          M         movlw   (00898h) >> 8
                          M         subwfb  _t1resistance + 1, F
                          M     else
0005BC 0E98               M         movlw   low (00898h)
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005BE 5C13               M         subwf   T1,  W
                          M         MOVE?AB _t1resistance
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
0005C0 6E3C               M         movwf   _t1resistance
0005C2 0E08               M         movlw   (00898h) >> 8
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005C4 5814               M         subwfb  T1  + 1, W
                          M         MOVE?AB _t1resistance + 1
                          M         CHK?RP  _t1resistance + 1
                          M     if (((_t1resistance + 1) > BANKA_END) & ((_t1resistance + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance + 1)
                          M PREV_BANK = high (_t1resistance + 1)
                          M       endif
                          M     endif
0005C6 6E3D               M         movwf   _t1resistance + 1
                          M     endif
                      00195         CMPGT?WWB       _t1resistance, _resistor_ref, T1
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
0005C8 C03C F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
0005CC C03D F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref, R1
                          M         MOVE?BB (_resistor_ref) + 1, (R1) + 1
0005D0 C051 F004          M         movff   (_resistor_ref) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _resistor_ref
                          M     if (((_resistor_ref) > BANKA_END) & ((_resistor_ref) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref)
                          M PREV_BANK = high (_resistor_ref)
                          M       endif
                          M     endif
0005D4 5050               M         movf    _resistor_ref, W
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
                          M         call    CMPGT
                          M           else
0005D6 DE2A               M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005D8 6E13               M         movwf   T1
                      00196         CMPLT?WWB       _t1resistance, _resistor_ref + 00016h, T2
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
0005DA C03C F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
0005DE C03D F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref + 00016h, R1
                          M         MOVE?BB (_resistor_ref + 00016h) + 1, (R1) + 1
0005E2 C067 F004          M         movff   (_resistor_ref + 00016h) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref + 00016h
                          M         CHK?RP  _resistor_ref + 00016h
                          M     if (((_resistor_ref + 00016h) > BANKA_END) & ((_resistor_ref + 00016h) < (0f01h + BANKA_END)))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((_resistor_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00016h)
                          M PREV_BANK = high (_resistor_ref + 00016h)
                          M       endif
                          M     endif
0005E6 5066               M         movf    _resistor_ref + 00016h, W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
                          M         call    CMPLT
                          M           else
0005E8 DE27               M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0005EA 6E15               M         movwf   T2
                      00197         LOR?BBW T1, T2, T2
                          M         MOVE?BB T1,   R0
0005EC C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0005F0 5015               M         movf    T2,  W
                          M         L?CALL  LOR
                          M         RST?RP
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LOR
                          M     else
                          M       if ((LOR)   < 1)
                          M         call    LOR
                          M       else
                          M         if ((LOR)   > $)
                          M         call    LOR
                          M         else
                          M           if ((LOR)   < ($ - 3ffh))
                          M         call    LOR
                          M           else
0005F2 DE3C               M         rcall   LOR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0005F4 6E15               M         movwf   T2
0005F6 6E16               M         movwf   T2   + 1
                      00198         CMPF?WL T2, L00001
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
0005F8 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0005FA 5015               M         movf    T2,  W
0005FC 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00001
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
0005FE B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
000600 EF04 F003          M         goto    L00001
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
                          M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00199         GOTO?L  L00002
                          M         L?GOTO  L00002
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00002))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00002
                          M     else
                          M       if ((L00002) < 1)
                          M         goto    L00002
                          M       else
                          M         if ((L00002) > $)
000604 EFCD F003          M         goto    L00002
                          M         else
                          M           if ((L00002) < ($ - 3ffh))
                          M         goto    L00002
                          M           else
                          M         bra     L00002
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00200         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
000608                    M L00001
                          M     endif
                      00201         MOVE?CW 000h, _i
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (000h)
                          M         movwf   _i
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
                          M     else
                          M       if (low (000h) == 0)
000608 6A2E               M         clrf    _i
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _i
                          M       endif
                          M       if ((high (000h)) == 0)
00060A 6A2F               M         clrf    (_i)   + 1
                          M       else
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
                          M       endif
                          M     endif
                      00202         LABEL?L L00003  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00003
                          M         XALL
                          M     else
00060C                    M L00003
                          M     endif
                      00203         CMPGT?WCL       _i, 00Bh, L00004
                          M         MOVE?WW _i,  R0
                          M         MOVE?BB _i,  R0
00060C C02E F001          M         movff   _i,  R0
                          M         MOVE?BB (_i)  + 1, (R0)   + 1
000610 C02F F002          M         movff   (_i) + 1, (R0) + 1
                          M         MOVE?CB (00Bh) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((00Bh) >> 8) == 0)
000614 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((00Bh) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (00Bh)
000616 0E0B               M         movlw   low (low (00Bh))
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
                          M         call    CMPGT
                          M           else
000618 DE09               M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00004
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00004))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M       else
                          M         if ((L00004) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M         else
                          M           if ((L00004) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M           else
                          M             if ((L00004) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M             else
                          M         bov     L00004
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
00061A A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00004
                          M       else
                          M         if ((L00004) < 1)
                          M         goto    L00004
                          M         else
                          M           if ((L00004) > $)
00061C EF96 F003          M         goto    L00004
                          M           else
                          M             if ((L00004) < ($ - 3ffh))
                          M         goto    L00004
                          M             else
                          M         bra     L00004
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00204         AOUT?WWW        _resistor_ref, _i, T1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000620 90D8               M         bcf     STATUS, C
000622 342E               M         rlcf    _i,   W
000624 6EE9               M         movwf   FSR0L
000626 342F               M         rlcf    _i   + 1, W
000628 6EEA               M         movwf   FSR0H
00062A 0E50               M         movlw   low (_resistor_ref)
00062C 26E9               M         addwf   FSR0L, F
00062E 0E00               M         movlw   (_resistor_ref) >> 8
000630 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T1
000632 CFEF F013          M         movff   INDF0, T1
                          M         MOVE?BB PREINC0, T1   + 1
000636 CFEC F014          M         movff   PREINC0, T1 + 1
                      00205         CMPLT?WWB       _t1resistance, T1, T1
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
00063A C03C F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
00063E C03D F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA T1,   R1
                          M         MOVE?BB (T1)  + 1, (R1)   + 1
000642 C014 F004          M         movff   (T1) + 1, (R1) + 1
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000646 5013               M         movf    T1,  W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
000648 EC1C F001          M         call    CMPLT
                          M           else
                          M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00064C 6E13               M         movwf   T1
                      00206         ADD?WCW _i, 001h, T2
                          M     if (T2   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T2
                          M         incf    T2,   F
                          M         btfsc   STATUS, Z
                          M         incf    T2   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T2
                          M         addwf   T2,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T2   + 1, F
                          M       endif
                          M     else
00064E 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000650 242E               M         addwf   _i,  W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000652 6E15               M         movwf   T2
000654 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000656 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
000658 6E16               M         movwf   T2 + 1
                          M     endif
                      00207         AOUT?WWW        _resistor_ref, T2, T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00065A 90D8               M         bcf     STATUS, C
00065C 3415               M         rlcf    T2,   W
00065E 6EE9               M         movwf   FSR0L
000660 3416               M         rlcf    T2   + 1, W
000662 6EEA               M         movwf   FSR0H
000664 0E50               M         movlw   low (_resistor_ref)
000666 26E9               M         addwf   FSR0L, F
000668 0E00               M         movlw   (_resistor_ref) >> 8
00066A 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T2
00066C CFEF F015          M         movff   INDF0, T2
                          M         MOVE?BB PREINC0, T2   + 1
000670 CFEC F016          M         movff   PREINC0, T2 + 1
                      00208         CMPGE?WWB       _t1resistance, T2, T2
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
000674 C03C F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
000678 C03D F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA T2,   R1
                          M         MOVE?BB (T2)  + 1, (R1)   + 1
00067C C016 F004          M         movff   (T2) + 1, (R1) + 1
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000680 5015               M         movf    T2,  W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
000682 EC13 F001          M         call    CMPGE
                          M           else
                          M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000686 6E15               M         movwf   T2
                      00209         LAND?BBW        T1, T2, T2
                          M         MOVE?BB T1,   R0
000688 C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00068C 5015               M         movf    T2,  W
                          M         L?CALL  LAND
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LAND
                          M     else
                          M       if ((LAND)  < 1)
                          M         call    LAND
                          M       else
                          M         if ((LAND)  > $)
                          M         call    LAND
                          M         else
                          M           if ((LAND)  < ($ - 3ffh))
00068E EC2F F001          M         call    LAND
                          M           else
                          M         rcall   LAND
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000692 6E15               M         movwf   T2
000694 6E16               M         movwf   T2   + 1
                      00210         CMPF?WL T2, L00005
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000696 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000698 5015               M         movf    T2,  W
00069A 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00005
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00005))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M             else
                          M         bov     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
00069C B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
00069E EF91 F003          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 3ffh))
                          M         goto    L00005
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             else
                          M         bra     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00211         ADD?WCW _i, 001h, T1
                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
0006A2 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006A4 242E               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0006A6 6E13               M         movwf   T1
0006A8 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006AA 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0006AC 6E14               M         movwf   T1 + 1
                          M     endif
                      00212         AOUT?WWW        _resistor_ref, T1, _t1res_lower
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0006AE 90D8               M         bcf     STATUS, C
0006B0 3413               M         rlcf    T1,   W
0006B2 6EE9               M         movwf   FSR0L
0006B4 3414               M         rlcf    T1   + 1, W
0006B6 6EEA               M         movwf   FSR0H
0006B8 0E50               M         movlw   low (_resistor_ref)
0006BA 26E9               M         addwf   FSR0L, F
0006BC 0E00               M         movlw   (_resistor_ref) >> 8
0006BE 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1res_lower
0006C0 CFEF F038          M         movff   INDF0, _t1res_lower
                          M         MOVE?BB PREINC0, _t1res_lower + 1
0006C4 CFEC F039          M         movff   PREINC0, _t1res_lower + 1
                      00213         AOUT?WWW        _resistor_ref, _i, _t1res_upper
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006C8 90D8               M         bcf     STATUS, C
0006CA 342E               M         rlcf    _i,   W
0006CC 6EE9               M         movwf   FSR0L
0006CE 342F               M         rlcf    _i   + 1, W
0006D0 6EEA               M         movwf   FSR0H
0006D2 0E50               M         movlw   low (_resistor_ref)
0006D4 26E9               M         addwf   FSR0L, F
0006D6 0E00               M         movlw   (_resistor_ref) >> 8
0006D8 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1res_upper
0006DA CFEF F03A          M         movff   INDF0, _t1res_upper
                          M         MOVE?BB PREINC0, _t1res_upper + 1
0006DE CFEC F03B          M         movff   PREINC0, _t1res_upper + 1
                      00214         AOUT?WWW        _temp_ref, _i, _t1temp_lower
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006E2 90D8               M         bcf     STATUS, C
0006E4 342E               M         rlcf    _i,   W
0006E6 6EE9               M         movwf   FSR0L
0006E8 342F               M         rlcf    _i   + 1, W
0006EA 6EEA               M         movwf   FSR0H
0006EC 0E68               M         movlw   low (_temp_ref)
0006EE 26E9               M         addwf   FSR0L, F
0006F0 0E00               M         movlw   (_temp_ref) >> 8
0006F2 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1temp_lower
0006F4 CFEF F042          M         movff   INDF0, _t1temp_lower
                          M         MOVE?BB PREINC0, _t1temp_lower + 1
0006F8 CFEC F043          M         movff   PREINC0, _t1temp_lower + 1
                      00215         ADD?WCW _i, 001h, T1
                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
0006FC 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006FE 242E               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000700 6E13               M         movwf   T1
000702 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000704 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000706 6E14               M         movwf   T1 + 1
                          M     endif
                      00216         AOUT?WWW        _temp_ref, T1, _t1temp_upper
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000708 90D8               M         bcf     STATUS, C
00070A 3413               M         rlcf    T1,   W
00070C 6EE9               M         movwf   FSR0L
00070E 3414               M         rlcf    T1   + 1, W
000710 6EEA               M         movwf   FSR0H
000712 0E68               M         movlw   low (_temp_ref)
000714 26E9               M         addwf   FSR0L, F
000716 0E00               M         movlw   (_temp_ref) >> 8
000718 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1temp_upper
00071A CFEF F046          M         movff   INDF0, _t1temp_upper
                          M         MOVE?BB PREINC0, _t1temp_upper + 1
00071E CFEC F047          M         movff   PREINC0, _t1temp_upper + 1
                      00217         LABEL?L L00005  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00005
                          M         XALL
                          M     else
000722                    M L00005
                          M     endif
                      00218         NEXT?WCL        _i, 001h, L00003
  0000                    M     local endlabel
                          M     if (001h == 1)
                          M         CHK?RP  _i
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000722 2A2E               M         incf    _i,  F
000724 B4D8               M         btfsc   STATUS, Z
000726 2A2F               M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00003))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M             else
                          M         bov     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000728 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 3ffh))
                          M         goto    L00003
                          M             else
00072A D770               M         bra     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (001h <= 255)
                          M         MOVE?CA 001h
                          M         CHK?RP  _i
                          M         addwf   _i,  F
                          M         BIT?GOTO 0, STATUS, C, L00003
                          M         CHK?RP  _i
                          M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M       else
                          M         movlw   low (001h)
                          M         CHK?RP  _i
                          M         addwf   _i,  F
                          M         movlw   high (001h)
                          M         btfsc   STATUS, C
                          M         addlw   1
                          M         bc      endlabel
                          M         addwf   _i  + 1, F
                          M         BIT?GOTO 0, STATUS, C, L00003
                          M       endif
                          M     endif
00072C                    M endlabel
                      00219         LABEL?L L00004  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef PM_USED
                          M         LALL
                          M L00004
                          M         XALL
                          M     else
00072C                    M L00004
                          M     endif
                      00220         MUL?WCW _t1temp_upper, 00Ah, T1
                          M         MOVE?WW _t1temp_upper, R3
                          M         MOVE?BB _t1temp_upper, R3
00072C C046 F007          M         movff   _t1temp_upper, R3
                          M         MOVE?BB (_t1temp_upper) + 1, (R3) + 1
000730 C047 F008          M         movff   (_t1temp_upper) + 1, (R3) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    R1
                          M       else
000734 0E0A               M         movlw   low (00Ah)
000736 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
000738 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
00073A EC53 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00073E 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000740 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00221         SUB?WWW _t1resistance, _t1res_lower, T2
                          M     if (T2   == _t1resistance)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T2
                          M         subwf   T2,   F
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T2
                          M         subwfb  T2   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower)
                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
000744 5038               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
000746 5C3C               M         subwf   _t1resistance, W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000748 6E15               M         movwf   T2
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
                          M     endif
00074A 5039               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
00074C 583D               M         subwfb  _t1resistance + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
00074E 6E16               M         movwf   T2 + 1
                          M     endif
                      00222         MUL?WCW T2, 032h, T2
                          M         MOVE?WW T2,  R3
                          M         MOVE?BB T2,  R3
000750 C015 F007          M         movff   T2,  R3
                          M         MOVE?BB (T2)  + 1, (R3)   + 1
000754 C016 F008          M         movff   (T2) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    R1
                          M       else
000758 0E32               M         movlw   low (032h)
00075A 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
00075C 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
00075E EC53 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T2
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000762 6E15               M         movwf   T2
                          M         MOVE?BB (R2)  + 1, (T2)   + 1
000764 C006 F016          M         movff   (R2) + 1, (T2) + 1
                      00223         SUB?WWW _t1res_upper, _t1res_lower, T3
                          M     if (T3   == _t1res_upper)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T3
                          M         subwf   T3,   F
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T3
                          M         subwfb  T3   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower)
                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
000768 5038               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
00076A 5C3A               M         subwf   _t1res_upper, W
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
00076C 6E17               M         movwf   T3
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
                          M     endif
00076E 5039               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
000770 583B               M         subwfb  _t1res_upper + 1, W
                          M         MOVE?AB T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000772 6E18               M         movwf   T3 + 1
                          M     endif
                      00224         DIV?WWW T2, T3, T3
                          M         MOVE?WW T2,   R0
                          M         MOVE?BB T2,  R0
000774 C015 F001          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
000778 C016 F002          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?WW T3,   R1
                          M         MOVE?BB T3,  R1
00077C C017 F003          M         movff   T3,  R1
                          M         MOVE?BB (T3)  + 1, (R1)   + 1
000780 C018 F004          M         movff   (T3) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
000784 EC3B F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T3
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000788 6E17               M         movwf   T3
                          M         MOVE?BB (R0)  + 1, (T3)   + 1
00078A C002 F018          M         movff   (R0) + 1, (T3) + 1
                      00225         SUB?WWW T1, T3, _t1temp_val
                          M     if (_t1temp_val == T1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BA T3
                          M         CHK?RP  _t1temp_val
                          M         subwf   _t1temp_val, F
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  _t1temp_val
                          M         subwfb  _t1temp_val + 1, F
                          M     else
                          M         MOVE?BA T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
00078E 5017               M         movf    T3,  W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000790 5C13               M         subwf   T1,   W
                          M         MOVE?AB _t1temp_val
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
000792 6E48               M         movwf   _t1temp_val
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
000794 5018               M         movf    T3 + 1, W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000796 5814               M         subwfb  T1   + 1, W
                          M         MOVE?AB _t1temp_val + 1
                          M         CHK?RP  _t1temp_val + 1
                          M     if (((_t1temp_val + 1) > BANKA_END) & ((_t1temp_val + 1) < (0f01h + BANKA_END)))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((_t1temp_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val + 1)
                          M PREV_BANK = high (_t1temp_val + 1)
                          M       endif
                          M     endif
000798 6E49               M         movwf   _t1temp_val + 1
                          M     endif
                      00226         LABEL?L L00002  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00002
                          M         XALL
                          M     else
00079A                    M L00002
                          M     endif
                      00227         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
00079A 0012               M         return
                      00228 
                      00229         LABEL?L _get_temp_pwm   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_temp_pwm
                          M         XALL
                          M     else
00079C                    M _get_temp_pwm
                          M     endif
                      00230         PAUSE?C 0FAh
                          M     if (high (0FAh) == 0)
                          M         MOVE?CA 0FAh
00079C 0EFA               M         movlw   low (0FAh)
                          M         L?CALL  PAUSE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSE
                          M     else
                          M       if ((PAUSE) < 1)
                          M         call    PAUSE
                          M       else
                          M         if ((PAUSE) > $)
                          M         call    PAUSE
                          M         else
                          M           if ((PAUSE) < ($ - 3ffh))
00079E ECE5 F000          M         call    PAUSE
                          M           else
                          M         rcall   PAUSE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M         MOVE?CB high (0FAh), R1 + 1
                          M         MOVE?CA low (0FAh)
                          M         L?CALL  PAUSEL
                          M     endif
                      00231         CMPLE?WWL       _t1temp_val, _t1temp_ref, L00007
                          M         MOVE?WW _t1temp_val, R0
                          M         MOVE?BB _t1temp_val, R0
0007A2 C048 F001          M         movff   _t1temp_val, R0
                          M         MOVE?BB (_t1temp_val) + 1, (R0) + 1
0007A6 C049 F002          M         movff   (_t1temp_val) + 1, (R0) + 1
                          M         MOVE?WWA _t1temp_ref, R1
                          M         MOVE?BB (_t1temp_ref) + 1, (R1) + 1
0007AA C045 F004          M         movff   (_t1temp_ref) + 1, (R1) + 1
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0007AE 5044               M         movf    _t1temp_ref, W
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
0007B0 EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00007
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00007))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M             else
                          M         bov     L00007
                          M             endif
                          M           endif
                          M         endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0007B4 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
0007B6 EF4B F004          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 3ffh))
                          M         goto    L00007
                          M             else
                          M         bra     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00232         CMPLE?WCL       _temp_pwm_val, 000h, L00009
                          M         MOVE?WW _temp_pwm_val, R0
                          M         MOVE?BB _temp_pwm_val, R0
0007BA C04A F001          M         movff   _temp_pwm_val, R0
                          M         MOVE?BB (_temp_pwm_val) + 1, (R0) + 1
0007BE C04B F002          M         movff   (_temp_pwm_val) + 1, (R0) + 1
                          M         MOVE?CB (000h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((000h) >> 8) == 0)
0007C2 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((000h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (000h)
0007C4 0E00               M         movlw   low (low (000h))
                          M         L?CALL  CMPLE
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
0007C6 EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00009
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00009))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00009) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M             else
                          M         bov     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0007CA A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
0007CC EF47 F004          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 3ffh))
                          M         goto    L00009
                          M             else
                          M         bra     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00233         SUB?WWW _t1temp_val, _t1temp_ref, T1
                          M     if (T1   == _t1temp_val)
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0007D0 5044               M         movf    _t1temp_ref, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
0007D2 5C48               M         subwf   _t1temp_val, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0007D4 6E13               M         movwf   T1
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  _t1temp_ref + 1
                          M     if (((_t1temp_ref + 1) > BANKA_END) & ((_t1temp_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref + 1)
                          M PREV_BANK = high (_t1temp_ref + 1)
                          M       endif
                          M     endif
0007D6 5045               M         movf    _t1temp_ref + 1, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
0007D8 5849               M         subwfb  _t1temp_val + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0007DA 6E14               M         movwf   T1 + 1
                          M     endif
                      00234         CMPLE?WWL       T1, _dT_1, L00011
                          M         MOVE?WW T1,   R0
                          M         MOVE?BB T1,  R0
0007DC C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007E0 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?WWA _dT_1, R1
                          M         MOVE?BB (_dT_1) + 1, (R1) + 1
0007E4 C023 F004          M         movff   (_dT_1) + 1, (R1) + 1
                          M         MOVE?BA _dT_1
                          M         CHK?RP  _dT_1
                          M     if (((_dT_1) > BANKA_END) & ((_dT_1) < (0f01h + BANKA_END)))
                          M       if (((_dT_1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_1)
                          M PREV_BANK = high (_dT_1)
                          M       endif
                          M     endif
0007E8 5022               M         movf    _dT_1, W
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
0007EA EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00011
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00011))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M             else
                          M         bov     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0007EE A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
0007F0 EFFE F003          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 3ffh))
                          M         goto    L00011
                          M             else
                          M         bra     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00235         SUB?WCW _temp_pwm_val, 00Ch, _temp_pwm_val
                          M     if (_temp_pwm_val == _temp_pwm_val)
0007F4 0E0C               M         movlw   low (00Ch)
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
                          M       endif
                          M     endif
0007F6 5E4A               M         subwf   _temp_pwm_val, F
0007F8 0E00               M         movlw   (00Ch) >> 8
0007FA 5A4B               M         subwfb  _temp_pwm_val + 1, F
                          M     else
                          M         movlw   low (00Ch)
                          M         CHK?RP  _temp_pwm_val
                          M         subwf   _temp_pwm_val, W
                          M         MOVE?AB _temp_pwm_val
                          M         movlw   (00Ch) >> 8
                          M         CHK?RP  _temp_pwm_val
                          M         subwfb  _temp_pwm_val + 1, W
                          M         MOVE?AB _temp_pwm_val + 1
                          M     endif
                      00236         LABEL?L L00011  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00011
                          M         XALL
                          M     else
0007FC                    M L00011
                          M     endif
                      00237         SUB?WWW _t1temp_val, _t1temp_ref, T1
                          M     if (T1   == _t1temp_val)
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007FC 5044               M         movf    _t1temp_ref, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
0007FE 5C48               M         subwf   _t1temp_val, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000800 6E13               M         movwf   T1
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  _t1temp_ref + 1
                          M     if (((_t1temp_ref + 1) > BANKA_END) & ((_t1temp_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref + 1)
                          M PREV_BANK = high (_t1temp_ref + 1)
                          M       endif
                          M     endif
000802 5045               M         movf    _t1temp_ref + 1, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
000804 5849               M         subwfb  _t1temp_val + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000806 6E14               M         movwf   T1 + 1
                          M     endif
                      00238         CMPGT?WWB       T1, _n2, T1
                          M         MOVE?WW T1,   R0
                          M         MOVE?BB T1,  R0
000808 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00080C C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?WWA _n2,  R1
                          M         MOVE?BB (_n2) + 1, (R1)   + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000810 C035 F004          M         movff   (_n2) + 1, (R1) + 1
                          M         MOVE?BA _n2
                          M         CHK?RP  _n2
                          M     if (((_n2)   > BANKA_END) & ((_n2)   < (0f01h + BANKA_END)))
                          M       if (((_n2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_n2)
                          M PREV_BANK = high (_n2)
                          M       endif
                          M     endif
000814 5034               M         movf    _n2, W
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
000816 EC16 F001          M         call    CMPGT
                          M           else
                          M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00081A 6E13               M         movwf   T1
                      00239         SUB?WWW _t1temp_val, _t1temp_ref, T2
                          M     if (T2   == _t1temp_val)
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  T2
                          M         subwf   T2,   F
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  T2
                          M         subwfb  T2   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_ref
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
00081C 5044               M         movf    _t1temp_ref, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
00081E 5C48               M         subwf   _t1temp_val, W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000820 6E15               M         movwf   T2
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  _t1temp_ref + 1
                          M     if (((_t1temp_ref + 1) > BANKA_END) & ((_t1temp_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref + 1)
                          M PREV_BANK = high (_t1temp_ref + 1)
                          M       endif
                          M     endif
000822 5045               M         movf    _t1temp_ref + 1, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
000824 5849               M         subwfb  _t1temp_val + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
000826 6E16               M         movwf   T2 + 1
                          M     endif
                      00240         CMPLT?WWB       T2, _n1, T2
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?WW T2,   R0
                          M         MOVE?BB T2,  R0
000828 C015 F001          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
00082C C016 F002          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?WWA _n1,  R1
                          M         MOVE?BB (_n1) + 1, (R1)   + 1
000830 C033 F004          M         movff   (_n1) + 1, (R1) + 1
                          M         MOVE?BA _n1
                          M         CHK?RP  _n1
                          M     if (((_n1)   > BANKA_END) & ((_n1)   < (0f01h + BANKA_END)))
                          M       if (((_n1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_n1)
                          M PREV_BANK = high (_n1)
                          M       endif
                          M     endif
000834 5032               M         movf    _n1, W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
000836 EC1C F001          M         call    CMPLT
                          M           else
                          M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00083A 6E15               M         movwf   T2
                      00241         LAND?BBW        T1, T2, T2
                          M         MOVE?BB T1,   R0
00083C C013 F001          M         movff   T1,  R0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000840 5015               M         movf    T2,  W
                          M         L?CALL  LAND
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LAND
                          M     else
                          M       if ((LAND)  < 1)
                          M         call    LAND
                          M       else
                          M         if ((LAND)  > $)
                          M         call    LAND
                          M         else
                          M           if ((LAND)  < ($ - 3ffh))
000842 EC2F F001          M         call    LAND
                          M           else
                          M         rcall   LAND
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000846 6E15               M         movwf   T2
000848 6E16               M         movwf   T2   + 1
                      00242         CMPF?WL T2, L00013
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
00084A 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00084C 5015               M         movf    T2,  W
00084E 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00013
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00013))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M       else
                          M         if ((L00013) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M           else
                          M             if ((L00013) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M             else
                          M         bov     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
000850 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00013
                          M       else
                          M         if ((L00013) < 1)
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
000852 EF2F F004          M         goto    L00013
                          M           else
                          M             if ((L00013) < ($ - 3ffh))
                          M         goto    L00013
                          M             else
                          M         bra     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00243         SUB?WCW _temp_pwm_val, 008h, _temp_pwm_val
                          M     if (_temp_pwm_val == _temp_pwm_val)
000856 0E08               M         movlw   low (008h)
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
                          M       endif
                          M     endif
000858 5E4A               M         subwf   _temp_pwm_val, F
00085A 0E00               M         movlw   (008h) >> 8
00085C 5A4B               M         subwfb  _temp_pwm_val + 1, F
                          M     else
                          M         movlw   low (008h)
                          M         CHK?RP  _temp_pwm_val
                          M         subwf   _temp_pwm_val, W
                          M         MOVE?AB _temp_pwm_val
                          M         movlw   (008h) >> 8
                          M         CHK?RP  _temp_pwm_val
                          M         subwfb  _temp_pwm_val + 1, W
                          M         MOVE?AB _temp_pwm_val + 1
                          M     endif
                      00244         LABEL?L L00013  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00013
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         XALL
                          M     else
00085E                    M L00013
                          M     endif
                      00245         SUB?WWW _t1temp_val, _t1temp_ref, T1
                          M     if (T1   == _t1temp_val)
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_ref
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
00085E 5044               M         movf    _t1temp_ref, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
000860 5C48               M         subwf   _t1temp_val, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000862 6E13               M         movwf   T1
                          M         MOVE?BA _t1temp_ref + 1
                          M         CHK?RP  _t1temp_ref + 1
                          M     if (((_t1temp_ref + 1) > BANKA_END) & ((_t1temp_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref + 1)
                          M PREV_BANK = high (_t1temp_ref + 1)
                          M       endif
                          M     endif
000864 5045               M         movf    _t1temp_ref + 1, W
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000866 5849               M         subwfb  _t1temp_val + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000868 6E14               M         movwf   T1 + 1
                          M     endif
                      00246         CMPGE?WWL       T1, _n2, L00015
                          M         MOVE?WW T1,   R0
                          M         MOVE?BB T1,  R0
00086A C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00086E C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?WWA _n2,  R1
                          M         MOVE?BB (_n2) + 1, (R1)   + 1
000872 C035 F004          M         movff   (_n2) + 1, (R1) + 1
                          M         MOVE?BA _n2
                          M         CHK?RP  _n2
                          M     if (((_n2)   > BANKA_END) & ((_n2)   < (0f01h + BANKA_END)))
                          M       if (((_n2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_n2)
                          M PREV_BANK = high (_n2)
                          M       endif
                          M     endif
000876 5034               M         movf    _n2, W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
000878 EC13 F001          M         call    CMPGE
                          M           else
                          M         rcall   CMPGE
                          M           endif
                          M         endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00015
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00015))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M             else
                          M         bov     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
00087C A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef USE_LINKER
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
00087E EF45 F004          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 3ffh))
                          M         goto    L00015
                          M             else
                          M         bra     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00247         SUB?WCW _temp_pwm_val, 001h, _temp_pwm_val
                          M     if (_temp_pwm_val == _temp_pwm_val)
000882 0E01               M         movlw   low (001h)
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
                          M       endif
                          M     endif
000884 5E4A               M         subwf   _temp_pwm_val, F
000886 0E00               M         movlw   (001h) >> 8
000888 5A4B               M         subwfb  _temp_pwm_val + 1, F
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _temp_pwm_val
                          M         subwf   _temp_pwm_val, W
                          M         MOVE?AB _temp_pwm_val
                          M         movlw   (001h) >> 8
                          M         CHK?RP  _temp_pwm_val
                          M         subwfb  _temp_pwm_val + 1, W
                          M         MOVE?AB _temp_pwm_val + 1
                          M     endif
                      00248         LABEL?L L00015  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00015
                          M         XALL
                          M     else
00088A                    M L00015
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00249         GOTO?L  L00010
                          M         L?GOTO  L00010
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00010))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00010
                          M     else
                          M       if ((L00010) < 1)
                          M         goto    L00010
                          M       else
                          M         if ((L00010) > $)
00088A EF49 F004          M         goto    L00010
                          M         else
                          M           if ((L00010) < ($ - 3ffh))
                          M         goto    L00010
                          M           else
                          M         bra     L00010
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00250         LABEL?L L00009  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00009
                          M         XALL
                          M     else
00088E                    M L00009
                          M     endif
                      00251         MOVE?CW 000h, _temp_pwm_val
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (000h)
                          M         movwf   _temp_pwm_val
                          M         movlw   high (000h)
                          M         movwf   (_temp_pwm_val) + 1
                          M     else
                          M       if (low (000h) == 0)
00088E 6A4A               M         clrf    _temp_pwm_val
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _temp_pwm_val
                          M       endif
                          M       if ((high (000h)) == 0)
000890 6A4B               M         clrf    (_temp_pwm_val) + 1
                          M       else
                          M         movlw   high (000h)
                          M         movwf   (_temp_pwm_val) + 1
                          M       endif
                          M     endif
                      00252         LABEL?L L00010  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00010
                          M         XALL
                          M     else
000892                    M L00010
                          M     endif
                      00253         GOTO?L  L00008
                          M         L?GOTO  L00008
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00008))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00008
                          M     else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((L00008) < 1)
                          M         goto    L00008
                          M       else
                          M         if ((L00008) > $)
000892 EFB7 F004          M         goto    L00008
                          M         else
                          M           if ((L00008) < ($ - 3ffh))
                          M         goto    L00008
                          M           else
                          M         bra     L00008
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00254         LABEL?L L00007  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00007
                          M         XALL
                          M     else
000896                    M L00007
                          M     endif
                      00255         CMPGE?WCL       _temp_pwm_val, 0FEh, L00017
                          M         MOVE?WW _temp_pwm_val, R0
                          M         MOVE?BB _temp_pwm_val, R0
000896 C04A F001          M         movff   _temp_pwm_val, R0
                          M         MOVE?BB (_temp_pwm_val) + 1, (R0) + 1
00089A C04B F002          M         movff   (_temp_pwm_val) + 1, (R0) + 1
                          M         MOVE?CB (0FEh) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((0FEh) >> 8) == 0)
00089E 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((0FEh) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (0FEh)
0008A0 0EFE               M         movlw   low (low (0FEh))
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
0008A2 EC13 F001          M         call    CMPGE
                          M           else
                          M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00017
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00017))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 7fh))
                          M         btfsc   STATUS, OV
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00017
                          M             else
                          M         bov     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0008A6 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
0008A8 EFB4 F004          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 3ffh))
                          M         goto    L00017
                          M             else
                          M         bra     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00256         SUB?WWW _t1temp_ref, _t1temp_val, T1
                          M     if (T1   == _t1temp_ref)
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _t1temp_val + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008AC 5048               M         movf    _t1temp_val, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0008AE 5C44               M         subwf   _t1temp_ref, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0008B0 6E13               M         movwf   T1
                          M         MOVE?BA _t1temp_val + 1
                          M         CHK?RP  _t1temp_val + 1
                          M     if (((_t1temp_val + 1) > BANKA_END) & ((_t1temp_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val + 1)
                          M PREV_BANK = high (_t1temp_val + 1)
                          M       endif
                          M     endif
0008B2 5049               M         movf    _t1temp_val + 1, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0008B4 5845               M         subwfb  _t1temp_ref + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0008B6 6E14               M         movwf   T1 + 1
                          M     endif
                      00257         CMPLE?WWL       T1, _dT_1, L00019
                          M         MOVE?WW T1,   R0
                          M         MOVE?BB T1,  R0
0008B8 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0008BC C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?WWA _dT_1, R1
                          M         MOVE?BB (_dT_1) + 1, (R1) + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008C0 C023 F004          M         movff   (_dT_1) + 1, (R1) + 1
                          M         MOVE?BA _dT_1
                          M         CHK?RP  _dT_1
                          M     if (((_dT_1) > BANKA_END) & ((_dT_1) < (0f01h + BANKA_END)))
                          M       if (((_dT_1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_1)
                          M PREV_BANK = high (_dT_1)
                          M       endif
                          M     endif
0008C4 5022               M         movf    _dT_1, W
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
0008C6 EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00019
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00019))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M       else
                          M         if ((L00019) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M             else
                          M         bov     L00019
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0008CA A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00019
                          M       else
                          M         if ((L00019) < 1)
                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
0008CC EF6C F004          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 3ffh))
                          M         goto    L00019
                          M             else
                          M         bra     L00019
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00258         ADD?WCW _temp_pwm_val, 00Ch, _temp_pwm_val
                          M     if (_temp_pwm_val == _temp_pwm_val)
                          M       if ((00Ch) == 1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _temp_pwm_val
                          M         incf    _temp_pwm_val, F
                          M         btfsc   STATUS, Z
                          M         incf    _temp_pwm_val + 1, F
                          M       else  
0008D0 0E0C               M         movlw   low (00Ch)
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
                          M       endif
                          M     endif
0008D2 264A               M         addwf   _temp_pwm_val, F
0008D4 0E00               M         movlw   (00Ch) >> 8
0008D6 224B               M         addwfc  _temp_pwm_val + 1, F
                          M       endif
                          M     else
                          M         movlw   low (00Ch)
                          M         CHK?RP  _temp_pwm_val
                          M         addwf   _temp_pwm_val, W
                          M         MOVE?AB _temp_pwm_val
                          M         movlw   (00Ch) >> 8
                          M         CHK?RP  _temp_pwm_val
                          M         addwfc  _temp_pwm_val + 1, W
                          M         MOVE?AB _temp_pwm_val + 1
                          M     endif
                      00259         LABEL?L L00019  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00019
                          M         XALL
                          M     else
0008D8                    M L00019
                          M     endif
                      00260         SUB?WWW _t1temp_ref, _t1temp_val, T1
                          M     if (T1   == _t1temp_ref)
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _t1temp_val + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
0008D8 5048               M         movf    _t1temp_val, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0008DA 5C44               M         subwf   _t1temp_ref, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0008DC 6E13               M         movwf   T1
                          M         MOVE?BA _t1temp_val + 1
                          M         CHK?RP  _t1temp_val + 1
                          M     if (((_t1temp_val + 1) > BANKA_END) & ((_t1temp_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val + 1)
                          M PREV_BANK = high (_t1temp_val + 1)
                          M       endif
                          M     endif
0008DE 5049               M         movf    _t1temp_val + 1, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0008E0 5845               M         subwfb  _t1temp_ref + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0008E2 6E14               M         movwf   T1 + 1
                          M     endif
                      00261         CMPGT?WWB       T1, _dT_2, T1
                          M         MOVE?WW T1,   R0
                          M         MOVE?BB T1,  R0
0008E4 C013 F001          M         movff   T1,  R0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0008E8 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?WWA _dT_2, R1
                          M         MOVE?BB (_dT_2) + 1, (R1) + 1
0008EC C025 F004          M         movff   (_dT_2) + 1, (R1) + 1
                          M         MOVE?BA _dT_2
                          M         CHK?RP  _dT_2
                          M     if (((_dT_2) > BANKA_END) & ((_dT_2) < (0f01h + BANKA_END)))
                          M       if (((_dT_2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_2)
                          M PREV_BANK = high (_dT_2)
                          M       endif
                          M     endif
0008F0 5024               M         movf    _dT_2, W
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
0008F2 EC16 F001          M         call    CMPGT
                          M           else
                          M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0008F6 6E13               M         movwf   T1
                      00262         SUB?WWW _t1temp_ref, _t1temp_val, T2
                          M     if (T2   == _t1temp_ref)
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  T2
                          M         subwf   T2,   F
                          M         MOVE?BA _t1temp_val + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T2
                          M         subwfb  T2   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
0008F8 5048               M         movf    _t1temp_val, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
0008FA 5C44               M         subwf   _t1temp_ref, W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0008FC 6E15               M         movwf   T2
                          M         MOVE?BA _t1temp_val + 1
                          M         CHK?RP  _t1temp_val + 1
                          M     if (((_t1temp_val + 1) > BANKA_END) & ((_t1temp_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val + 1)
                          M PREV_BANK = high (_t1temp_val + 1)
                          M       endif
                          M     endif
0008FE 5049               M         movf    _t1temp_val + 1, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
000900 5845               M         subwfb  _t1temp_ref + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000902 6E16               M         movwf   T2 + 1
                          M     endif
                      00263         CMPLT?WWB       T2, _dT_1, T2
                          M         MOVE?WW T2,   R0
                          M         MOVE?BB T2,  R0
000904 C015 F001          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
000908 C016 F002          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?WWA _dT_1, R1
                          M         MOVE?BB (_dT_1) + 1, (R1) + 1
00090C C023 F004          M         movff   (_dT_1) + 1, (R1) + 1
                          M         MOVE?BA _dT_1
                          M         CHK?RP  _dT_1
                          M     if (((_dT_1) > BANKA_END) & ((_dT_1) < (0f01h + BANKA_END)))
                          M       if (((_dT_1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_1)
                          M PREV_BANK = high (_dT_1)
                          M       endif
                          M     endif
000910 5022               M         movf    _dT_1, W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
000912 EC1C F001          M         call    CMPLT
                          M           else
                          M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000916 6E15               M         movwf   T2
                      00264         LAND?BBW        T1, T2, T2
                          M         MOVE?BB T1,   R0
000918 C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00091C 5015               M         movf    T2,  W
                          M         L?CALL  LAND
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LAND
                          M     else
                          M       if ((LAND)  < 1)
                          M         call    LAND
                          M       else
                          M         if ((LAND)  > $)
                          M         call    LAND
                          M         else
                          M           if ((LAND)  < ($ - 3ffh))
00091E EC2F F001          M         call    LAND
                          M           else
                          M         rcall   LAND
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000922 6E15               M         movwf   T2
000924 6E16               M         movwf   T2   + 1
                      00265         CMPF?WL T2, L00021
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000926 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000928 5015               M         movf    T2,  W
00092A 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00021
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00021))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M             else
                          M         bov     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
00092C B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
00092E EF9D F004          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 3ffh))
                          M         goto    L00021
                          M             else
                          M         bra     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00266         ADD?WCW _temp_pwm_val, 008h, _temp_pwm_val
                          M     if (_temp_pwm_val == _temp_pwm_val)
                          M       if ((008h) == 1)
                          M         CHK?RP  _temp_pwm_val
                          M         incf    _temp_pwm_val, F
                          M         btfsc   STATUS, Z
                          M         incf    _temp_pwm_val + 1, F
                          M       else  
000932 0E08               M         movlw   low (008h)
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
                          M       endif
                          M     endif
000934 264A               M         addwf   _temp_pwm_val, F
000936 0E00               M         movlw   (008h) >> 8
000938 224B               M         addwfc  _temp_pwm_val + 1, F
                          M       endif
                          M     else
                          M         movlw   low (008h)
                          M         CHK?RP  _temp_pwm_val
                          M         addwf   _temp_pwm_val, W
                          M         MOVE?AB _temp_pwm_val
                          M         movlw   (008h) >> 8
                          M         CHK?RP  _temp_pwm_val
                          M         addwfc  _temp_pwm_val + 1, W
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB _temp_pwm_val + 1
                          M     endif
                      00267         LABEL?L L00021  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00021
                          M         XALL
                          M     else
00093A                    M L00021
                          M     endif
                      00268         SUB?WWW _t1temp_ref, _t1temp_val, T1
                          M     if (T1   == _t1temp_ref)
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _t1temp_val + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _t1temp_val
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
00093A 5048               M         movf    _t1temp_val, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
00093C 5C44               M         subwf   _t1temp_ref, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00093E 6E13               M         movwf   T1
                          M         MOVE?BA _t1temp_val + 1
                          M         CHK?RP  _t1temp_val + 1
                          M     if (((_t1temp_val + 1) > BANKA_END) & ((_t1temp_val + 1) < (0f01h + BANKA_END)))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((_t1temp_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val + 1)
                          M PREV_BANK = high (_t1temp_val + 1)
                          M       endif
                          M     endif
000940 5049               M         movf    _t1temp_val + 1, W
                          M         CHK?RP  _t1temp_ref
                          M     if (((_t1temp_ref) > BANKA_END) & ((_t1temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_ref)
                          M PREV_BANK = high (_t1temp_ref)
                          M       endif
                          M     endif
000942 5845               M         subwfb  _t1temp_ref + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000944 6E14               M         movwf   T1 + 1
                          M     endif
                      00269         CMPGE?WWL       T1, _dT_2, L00023
                          M         MOVE?WW T1,   R0
                          M         MOVE?BB T1,  R0
000946 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00094A C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?WWA _dT_2, R1
                          M         MOVE?BB (_dT_2) + 1, (R1) + 1
00094E C025 F004          M         movff   (_dT_2) + 1, (R1) + 1
                          M         MOVE?BA _dT_2
                          M         CHK?RP  _dT_2
                          M     if (((_dT_2) > BANKA_END) & ((_dT_2) < (0f01h + BANKA_END)))
                          M       if (((_dT_2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_2)
                          M PREV_BANK = high (_dT_2)
                          M       endif
                          M     endif
000952 5024               M         movf    _dT_2, W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
000954 EC13 F001          M         call    CMPGE
                          M           else
                          M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00023
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00023))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M       else
                          M         if ((L00023) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M             else
                          M         bov     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000958 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00023
                          M       else
                          M         if ((L00023) < 1)
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
00095A EFB2 F004          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 3ffh))
                          M         goto    L00023
                          M             else
                          M         bra     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00270         ADD?WCW _temp_pwm_val, 001h, _temp_pwm_val
                          M     if (_temp_pwm_val == _temp_pwm_val)
                          M       if ((001h) == 1)
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
                          M       endif
                          M     endif
00095E 2A4A               M         incf    _temp_pwm_val, F
000960 B4D8               M         btfsc   STATUS, Z
000962 2A4B               M         incf    _temp_pwm_val + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  _temp_pwm_val
                          M         addwf   _temp_pwm_val, F
                          M         movlw   (001h) >> 8
                          M         addwfc  _temp_pwm_val + 1, F
                          M       endif
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _temp_pwm_val
                          M         addwf   _temp_pwm_val, W
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB _temp_pwm_val
                          M         movlw   (001h) >> 8
                          M         CHK?RP  _temp_pwm_val
                          M         addwfc  _temp_pwm_val + 1, W
                          M         MOVE?AB _temp_pwm_val + 1
                          M     endif
                      00271         LABEL?L L00023  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00023
                          M         XALL
                          M     else
000964                    M L00023
                          M     endif
                      00272         GOTO?L  L00018
                          M         L?GOTO  L00018
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00018))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00018
                          M     else
                          M       if ((L00018) < 1)
                          M         goto    L00018
                          M       else
                          M         if ((L00018) > $)
000964 EFB7 F004          M         goto    L00018
                          M         else
                          M           if ((L00018) < ($ - 3ffh))
                          M         goto    L00018
                          M           else
                          M         bra     L00018
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00273         LABEL?L L00017  
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00017
                          M         XALL
                          M     else
000968                    M L00017
                          M     endif
                      00274         MOVE?CW 0FEh, _temp_pwm_val
                          M         CHK?RP  _temp_pwm_val
                          M     if (((_temp_pwm_val) > BANKA_END) & ((_temp_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_temp_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_pwm_val)
                          M PREV_BANK = high (_temp_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0FEh)
                          M         movwf   _temp_pwm_val
                          M         movlw   high (0FEh)
                          M         movwf   (_temp_pwm_val) + 1
                          M     else
                          M       if (low (0FEh) == 0)
                          M         clrf    _temp_pwm_val
                          M       else
000968 0EFE               M         movlw   low (0FEh)
00096A 6E4A               M         movwf   _temp_pwm_val
                          M       endif
                          M       if ((high (0FEh)) == 0)
00096C 6A4B               M         clrf    (_temp_pwm_val) + 1
                          M       else
                          M         movlw   high (0FEh)
                          M         movwf   (_temp_pwm_val) + 1
                          M       endif
                          M     endif
                      00275         LABEL?L L00018  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00018
                          M         XALL
                          M     else
00096E                    M L00018
                          M     endif
                      00276         LABEL?L L00008  
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00008
                          M         XALL
                          M     else
00096E                    M L00008
                          M     endif
                      00277         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
00096E 0012               M         return
                      00278 
                      00279         LABEL?L _get_flowrate   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_flowrate
                          M         XALL
                          M     else
000970                    M _get_flowrate
                          M     endif
                      00280         MOVE?CB 011h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (011h) == 0)
                          M         clrf    ADCON0
                          M     else
000970 0E11               M         movlw   low (011h)
000972 6EC2               M         movwf   ADCON0
                          M     endif
                      00281         ADCIN?CW        004h, _an_frequency
                          M         MOVE?CA 004h
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000974 0E04               M         movlw   low (004h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
000976 ECCD F000          M         call    ADCIN
                          M           else
                          M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _an_frequency
                          M         MOVE?AB _an_frequency
                          M         CHK?RP  _an_frequency
                          M     if (((_an_frequency) > BANKA_END) & ((_an_frequency) < (0f01h + BANKA_END)))
                          M       if (((_an_frequency) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_an_frequency)
                          M PREV_BANK = high (_an_frequency)
                          M       endif
                          M     endif
00097A 6E20               M         movwf   _an_frequency
                          M         MOVE?BB (R0)  + 1, (_an_frequency) + 1
00097C C002 F021          M         movff   (R0) + 1, (_an_frequency) + 1
                      00282         MUL?WCW _an_frequency, 032h, T1
                          M         MOVE?WW _an_frequency, R3
                          M         MOVE?BB _an_frequency, R3
000980 C020 F007          M         movff   _an_frequency, R3
                          M         MOVE?BB (_an_frequency) + 1, (R3) + 1
000984 C021 F008          M         movff   (_an_frequency) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
000988 0E32               M         movlw   low (032h)
00098A 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
00098C 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
00098E EC53 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000992 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000994 C006 F014          M         movff   (R2) + 1, (T1) + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00283         DIV?WCW T1, 0049Ah, _flow_val
                          M     if (0049Ah == 2)
                          M         bcf     STATUS, C
                          M       if (_flow_val == T1)
                          M         CHK?RP  _flow_val
                          M         rrcf    _flow_val + 1, F
                          M         rrcf    _flow_val, F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB _flow_val + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB _flow_val
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000998 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00099C C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 0049Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0049Ah)
                          M         movwf   R1
                          M         movlw   high (0049Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (0049Ah) == 0)
                          M         clrf    R1
                          M       else
0009A0 0E9A               M         movlw   low (0049Ah)
0009A2 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (0049Ah)) == 0)
                          M         clrf    (R1)   + 1
                          M       else
0009A4 0E04               M         movlw   high (0049Ah)
0009A6 6E04               M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
0009A8 EC3B F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _flow_val
                          M         MOVE?AB _flow_val
                          M         CHK?RP  _flow_val
                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
0009AC 6E2C               M         movwf   _flow_val
                          M         MOVE?BB (R0)  + 1, (_flow_val) + 1
0009AE C002 F02D          M         movff   (R0) + 1, (_flow_val) + 1
                          M     endif
                      00284         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
0009B2 0012               M         return
                      00285 
                      00286         LABEL?L _get_water_pwm  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_water_pwm
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         XALL
                          M     else
0009B4                    M _get_water_pwm
                          M     endif
                      00287         CMPGE?WWL       _flow_val, _flow_ref, L00025
                          M         MOVE?WW _flow_val, R0
                          M         MOVE?BB _flow_val, R0
0009B4 C02C F001          M         movff   _flow_val, R0
                          M         MOVE?BB (_flow_val) + 1, (R0) + 1
0009B8 C02D F002          M         movff   (_flow_val) + 1, (R0) + 1
                          M         MOVE?WWA _flow_ref, R1
                          M         MOVE?BB (_flow_ref) + 1, (R1) + 1
0009BC C02B F004          M         movff   (_flow_ref) + 1, (R1) + 1
                          M         MOVE?BA _flow_ref
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
0009C0 502A               M         movf    _flow_ref, W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
0009C2 EC13 F001          M         call    CMPGE
                          M           else
                          M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00025
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00025))
                          M         CLRWDT?
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M           else
                          M             if ((L00025) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M             else
                          M         bov     L00025
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0009C6 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
0009C8 EF22 F005          M         goto    L00025
                          M           else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             if ((L00025) < ($ - 3ffh))
                          M         goto    L00025
                          M             else
                          M         bra     L00025
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00288         CMPGE?WCL       _flow_pwm_val, 078h, L00027
                          M         MOVE?WW _flow_pwm_val, R0
                          M         MOVE?BB _flow_pwm_val, R0
0009CC C028 F001          M         movff   _flow_pwm_val, R0
                          M         MOVE?BB (_flow_pwm_val) + 1, (R0) + 1
0009D0 C029 F002          M         movff   (_flow_pwm_val) + 1, (R0) + 1
                          M         MOVE?CB (078h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((078h) >> 8) == 0)
0009D4 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((078h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (078h)
0009D6 0E78               M         movlw   low (low (078h))
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
0009D8 EC13 F001          M         call    CMPGE
                          M           else
                          M         rcall   CMPGE
                          M           endif
                          M         endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00027
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00027))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00027
                          M       else
                          M         if ((L00027) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00027
                          M         else
                          M           if ((L00027) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00027
                          M           else
                          M             if ((L00027) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00027
                          M             else
                          M         bov     L00027
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0009DC A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef USE_LINKER
                          M         goto    L00027
                          M       else
                          M         if ((L00027) < 1)
                          M         goto    L00027
                          M         else
                          M           if ((L00027) > $)
0009DE EF1F F005          M         goto    L00027
                          M           else
                          M             if ((L00027) < ($ - 3ffh))
                          M         goto    L00027
                          M             else
                          M         bra     L00027
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00289         SUB?WWW _flow_ref, _flow_val, T1
                          M     if (T1   == _flow_ref)
                          M         MOVE?BA _flow_val
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _flow_val + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _flow_val
                          M         CHK?RP  _flow_val
                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
0009E2 502C               M         movf    _flow_val, W
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
0009E4 5C2A               M         subwf   _flow_ref, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0009E6 6E13               M         movwf   T1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BA _flow_val + 1
                          M         CHK?RP  _flow_val + 1
                          M     if (((_flow_val + 1) > BANKA_END) & ((_flow_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_flow_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val + 1)
                          M PREV_BANK = high (_flow_val + 1)
                          M       endif
                          M     endif
0009E8 502D               M         movf    _flow_val + 1, W
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
0009EA 582B               M         subwfb  _flow_ref + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0009EC 6E14               M         movwf   T1 + 1
                          M     endif
                      00290         CMPLE?WCL       T1, 005h, L00029
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
0009EE C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0009F2 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CB (005h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((005h) >> 8) == 0)
0009F6 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((005h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (005h)
0009F8 0E05               M         movlw   low (low (005h))
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
0009FA EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00029
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00029))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M       else
                          M         if ((L00029) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 7fh))
                          M         btfsc   STATUS, OV
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00029
                          M             else
                          M         bov     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0009FE A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00029
                          M       else
                          M         if ((L00029) < 1)
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
000A00 EF1A F005          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 3ffh))
                          M         goto    L00029
                          M             else
                          M         bra     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00291         SUB?WWW _flow_ref, _flow_val, T1
                          M     if (T1   == _flow_ref)
                          M         MOVE?BA _flow_val
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _flow_val + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _flow_val
                          M         CHK?RP  _flow_val
                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A04 502C               M         movf    _flow_val, W
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
000A06 5C2A               M         subwf   _flow_ref, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000A08 6E13               M         movwf   T1
                          M         MOVE?BA _flow_val + 1
                          M         CHK?RP  _flow_val + 1
                          M     if (((_flow_val + 1) > BANKA_END) & ((_flow_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_flow_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val + 1)
                          M PREV_BANK = high (_flow_val + 1)
                          M       endif
                          M     endif
000A0A 502D               M         movf    _flow_val + 1, W
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
000A0C 582B               M         subwfb  _flow_ref + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000A0E 6E14               M         movwf   T1 + 1
                          M     endif
                      00292         DIV?WCW T1, 005h, T1
                          M     if (005h == 2)
                          M         bcf     STATUS, C
                          M       if (T1   == T1)
                          M         CHK?RP  T1
                          M         rrcf    T1   + 1, F
                          M         rrcf    T1,   F
                          M       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000A10 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000A14 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 005h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005h)
                          M         movwf   R1
                          M         movlw   high (005h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (005h) == 0)
                          M         clrf    R1
                          M       else
000A18 0E05               M         movlw   low (005h)
000A1A 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (005h)) == 0)
000A1C 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (005h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
000A1E EC3B F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000A22 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000A24 C002 F014          M         movff   (R0) + 1, (T1) + 1
                          M     endif
                      00293         ADD?WWW _flow_pwm_val, T1, _flow_pwm_val
                          M     if (_flow_pwm_val == _flow_pwm_val)
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000A28 5013               M         movf    T1,  W
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
000A2A 2628               M         addwf   _flow_pwm_val, F
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000A2C 5014               M         movf    T1 + 1, W
                          M         CHK?RP  _flow_pwm_val
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
000A2E 2229               M         addwfc  _flow_pwm_val + 1, F
                          M     else
                          M       if (_flow_pwm_val == T1)
                          M         MOVE?BA _flow_pwm_val
                          M         CHK?RP  _flow_pwm_val
                          M         addwf   _flow_pwm_val, F
                          M         MOVE?BA _flow_pwm_val + 1
                          M         CHK?RP  _flow_pwm_val
                          M         addwfc  _flow_pwm_val + 1, F
                          M       else
                          M         MOVE?BA _flow_pwm_val
                          M         CHK?RP  T1
                          M         addwf   T1,   W
                          M         MOVE?AB _flow_pwm_val
                          M         MOVE?BA _flow_pwm_val + 1
                          M         CHK?RP  T1
                          M         addwfc  T1   + 1, W
                          M         MOVE?AB _flow_pwm_val + 1
                          M       endif
                          M     endif
                      00294         GOTO?L  L00030
                          M         L?GOTO  L00030
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00030))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00030
                          M     else
                          M       if ((L00030) < 1)
                          M         goto    L00030
                          M       else
                          M         if ((L00030) > $)
000A30 EF1D F005          M         goto    L00030
                          M         else
                          M           if ((L00030) < ($ - 3ffh))
                          M         goto    L00030
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         bra     L00030
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00295         LABEL?L L00029  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00029
                          M         XALL
                          M     else
000A34                    M L00029
                          M     endif
                      00296         ADD?WCW _flow_pwm_val, 001h, _flow_pwm_val
                          M     if (_flow_pwm_val == _flow_pwm_val)
                          M       if ((001h) == 1)
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
000A34 2A28               M         incf    _flow_pwm_val, F
000A36 B4D8               M         btfsc   STATUS, Z
000A38 2A29               M         incf    _flow_pwm_val + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  _flow_pwm_val
                          M         addwf   _flow_pwm_val, F
                          M         movlw   (001h) >> 8
                          M         addwfc  _flow_pwm_val + 1, F
                          M       endif
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _flow_pwm_val
                          M         addwf   _flow_pwm_val, W
                          M         MOVE?AB _flow_pwm_val
                          M         movlw   (001h) >> 8
                          M         CHK?RP  _flow_pwm_val
                          M         addwfc  _flow_pwm_val + 1, W
                          M         MOVE?AB _flow_pwm_val + 1
                          M     endif
                      00297         LABEL?L L00030  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00030
                          M         XALL
                          M     else
000A3A                    M L00030
                          M     endif
                      00298         GOTO?L  L00028
                          M         L?GOTO  L00028
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00028))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00028
                          M     else
                          M       if ((L00028) < 1)
                          M         goto    L00028
                          M       else
                          M         if ((L00028) > $)
000A3A EF22 F005          M         goto    L00028
                          M         else
                          M           if ((L00028) < ($ - 3ffh))
                          M         goto    L00028
                          M           else
                          M         bra     L00028
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00299         LABEL?L L00027  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00027
                          M         XALL
                          M     else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A3E                    M L00027
                          M     endif
                      00300         MOVE?CW 078h, _flow_pwm_val
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (078h)
                          M         movwf   _flow_pwm_val
                          M         movlw   high (078h)
                          M         movwf   (_flow_pwm_val) + 1
                          M     else
                          M       if (low (078h) == 0)
                          M         clrf    _flow_pwm_val
                          M       else
000A3E 0E78               M         movlw   low (078h)
000A40 6E28               M         movwf   _flow_pwm_val
                          M       endif
                          M       if ((high (078h)) == 0)
000A42 6A29               M         clrf    (_flow_pwm_val) + 1
                          M       else
                          M         movlw   high (078h)
                          M         movwf   (_flow_pwm_val) + 1
                          M       endif
                          M     endif
                      00301         LABEL?L L00028  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00028
                          M         XALL
                          M     else
000A44                    M L00028
                          M     endif
                      00302         LABEL?L L00025  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00025
                          M         XALL
                          M     else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A44                    M L00025
                          M     endif
                      00303         CMPLE?WWL       _flow_val, _flow_ref, L00031
                          M         MOVE?WW _flow_val, R0
                          M         MOVE?BB _flow_val, R0
000A44 C02C F001          M         movff   _flow_val, R0
                          M         MOVE?BB (_flow_val) + 1, (R0) + 1
000A48 C02D F002          M         movff   (_flow_val) + 1, (R0) + 1
                          M         MOVE?WWA _flow_ref, R1
                          M         MOVE?BB (_flow_ref) + 1, (R1) + 1
000A4C C02B F004          M         movff   (_flow_ref) + 1, (R1) + 1
                          M         MOVE?BA _flow_ref
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
000A50 502A               M         movf    _flow_ref, W
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
000A52 EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00031
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00031))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M             else
                          M         bov     L00031
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000A56 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
000A58 EF6B F005          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 3ffh))
                          M         goto    L00031
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             else
                          M         bra     L00031
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00304         CMPLE?WCL       _flow_pwm_val, 032h, L00033
                          M         MOVE?WW _flow_pwm_val, R0
                          M         MOVE?BB _flow_pwm_val, R0
000A5C C028 F001          M         movff   _flow_pwm_val, R0
                          M         MOVE?BB (_flow_pwm_val) + 1, (R0) + 1
000A60 C029 F002          M         movff   (_flow_pwm_val) + 1, (R0) + 1
                          M         MOVE?CB (032h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((032h) >> 8) == 0)
000A64 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((032h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (032h)
000A66 0E32               M         movlw   low (low (032h))
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
000A68 EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         BIT?GOTO 0, STATUS, Z, L00033
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00033))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00033
                          M       else
                          M         if ((L00033) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00033
                          M         else
                          M           if ((L00033) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00033
                          M           else
                          M             if ((L00033) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00033
                          M             else
                          M         bov     L00033
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000A6C A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00033
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((L00033) < 1)
                          M         goto    L00033
                          M         else
                          M           if ((L00033) > $)
000A6E EF68 F005          M         goto    L00033
                          M           else
                          M             if ((L00033) < ($ - 3ffh))
                          M         goto    L00033
                          M             else
                          M         bra     L00033
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00305         SUB?WWW _flow_val, _flow_ref, T1
                          M     if (T1   == _flow_val)
                          M         MOVE?BA _flow_ref
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _flow_ref + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _flow_ref
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
000A72 502A               M         movf    _flow_ref, W
                          M         CHK?RP  _flow_val
                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
000A74 5C2C               M         subwf   _flow_val, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000A76 6E13               M         movwf   T1
                          M         MOVE?BA _flow_ref + 1
                          M         CHK?RP  _flow_ref + 1
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_flow_ref + 1) > BANKA_END) & ((_flow_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref + 1)
                          M PREV_BANK = high (_flow_ref + 1)
                          M       endif
                          M     endif
000A78 502B               M         movf    _flow_ref + 1, W
                          M         CHK?RP  _flow_val
                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
000A7A 582D               M         subwfb  _flow_val + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000A7C 6E14               M         movwf   T1 + 1
                          M     endif
                      00306         CMPLE?WCL       T1, 005h, L00035
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000A7E C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000A82 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CB (005h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((005h) >> 8) == 0)
000A86 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((005h) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (005h)
000A88 0E05               M         movlw   low (low (005h))
                          M         L?CALL  CMPLE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLE
                          M     else
                          M       if ((CMPLE) < 1)
                          M         call    CMPLE
                          M       else
                          M         if ((CMPLE) > $)
                          M         call    CMPLE
                          M         else
                          M           if ((CMPLE) < ($ - 3ffh))
000A8A EC19 F001          M         call    CMPLE
                          M           else
                          M         rcall   CMPLE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00035
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00035))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M             else
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bov     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
000A8E A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
000A90 EF62 F005          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 3ffh))
                          M         goto    L00035
                          M             else
                          M         bra     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00307         SUB?WWW _flow_val, _flow_ref, T1
                          M     if (T1   == _flow_val)
                          M         MOVE?BA _flow_ref
                          M         CHK?RP  T1
                          M         subwf   T1,   F
                          M         MOVE?BA _flow_ref + 1
                          M         CHK?RP  T1
                          M         subwfb  T1   + 1, F
                          M     else
                          M         MOVE?BA _flow_ref
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
                          M     endif
000A94 502A               M         movf    _flow_ref, W
                          M         CHK?RP  _flow_val
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
000A96 5C2C               M         subwf   _flow_val, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000A98 6E13               M         movwf   T1
                          M         MOVE?BA _flow_ref + 1
                          M         CHK?RP  _flow_ref + 1
                          M     if (((_flow_ref + 1) > BANKA_END) & ((_flow_ref + 1) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref + 1)
                          M PREV_BANK = high (_flow_ref + 1)
                          M       endif
                          M     endif
000A9A 502B               M         movf    _flow_ref + 1, W
                          M         CHK?RP  _flow_val
                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
000A9C 582D               M         subwfb  _flow_val + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000A9E 6E14               M         movwf   T1 + 1
                          M     endif
                      00308         DIV?WCW T1, 005h, T1
                          M     if (005h == 2)
                          M         bcf     STATUS, C
                          M       if (T1   == T1)
                          M         CHK?RP  T1
                          M         rrcf    T1   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000AA0 C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000AA4 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 005h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005h)
                          M         movwf   R1
                          M         movlw   high (005h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (005h) == 0)
                          M         clrf    R1
                          M       else
000AA8 0E05               M         movlw   low (005h)
000AAA 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (005h)) == 0)
000AAC 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (005h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
000AAE EC3B F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000AB2 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000AB4 C002 F014          M         movff   (R0) + 1, (T1) + 1
                          M     endif
                      00309         SUB?WWW _flow_pwm_val, T1, _flow_pwm_val
                          M     if (_flow_pwm_val == _flow_pwm_val)
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000AB8 5013               M         movf    T1,  W
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
000ABA 5E28               M         subwf   _flow_pwm_val, F
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000ABC 5014               M         movf    T1 + 1, W
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
000ABE 5A29               M         subwfb  _flow_pwm_val + 1, F
                          M     else
                          M         MOVE?BA T1
                          M         CHK?RP  _flow_pwm_val
                          M         subwf   _flow_pwm_val, W
                          M         MOVE?AB _flow_pwm_val
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  _flow_pwm_val
                          M         subwfb  _flow_pwm_val + 1, W
                          M         MOVE?AB _flow_pwm_val + 1
                          M     endif
                      00310         GOTO?L  L00036
                          M         L?GOTO  L00036
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00036))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00036
                          M     else
                          M       if ((L00036) < 1)
                          M         goto    L00036
                          M       else
                          M         if ((L00036) > $)
000AC0 EF66 F005          M         goto    L00036
                          M         else
                          M           if ((L00036) < ($ - 3ffh))
                          M         goto    L00036
                          M           else
                          M         bra     L00036
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00311         LABEL?L L00035  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00035
                          M         XALL
                          M     else
000AC4                    M L00035
                          M     endif
                      00312         SUB?WCW _flow_pwm_val, 001h, _flow_pwm_val
                          M     if (_flow_pwm_val == _flow_pwm_val)
000AC4 0E01               M         movlw   low (001h)
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
000AC6 5E28               M         subwf   _flow_pwm_val, F
000AC8 0E00               M         movlw   (001h) >> 8
000ACA 5A29               M         subwfb  _flow_pwm_val + 1, F
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _flow_pwm_val
                          M         subwf   _flow_pwm_val, W
                          M         MOVE?AB _flow_pwm_val
                          M         movlw   (001h) >> 8
                          M         CHK?RP  _flow_pwm_val
                          M         subwfb  _flow_pwm_val + 1, W
                          M         MOVE?AB _flow_pwm_val + 1
                          M     endif
                      00313         LABEL?L L00036  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00036
                          M         XALL
                          M     else
000ACC                    M L00036
                          M     endif
                      00314         GOTO?L  L00034
                          M         L?GOTO  L00034
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00034))
                          M         CLRWDT?
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00034
                          M     else
                          M       if ((L00034) < 1)
                          M         goto    L00034
                          M       else
                          M         if ((L00034) > $)
000ACC EF6B F005          M         goto    L00034
                          M         else
                          M           if ((L00034) < ($ - 3ffh))
                          M         goto    L00034
                          M           else
                          M         bra     L00034
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00315         LABEL?L L00033  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00033
                          M         XALL
                          M     else
000AD0                    M L00033
                          M     endif
                      00316         MOVE?CW 032h, _flow_pwm_val
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _flow_pwm_val
                          M         movlw   high (032h)
                          M         movwf   (_flow_pwm_val) + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _flow_pwm_val
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
000AD0 0E32               M         movlw   low (032h)
000AD2 6E28               M         movwf   _flow_pwm_val
                          M       endif
                          M       if ((high (032h)) == 0)
000AD4 6A29               M         clrf    (_flow_pwm_val) + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_flow_pwm_val) + 1
                          M       endif
                          M     endif
                      00317         LABEL?L L00034  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00034
                          M         XALL
                          M     else
000AD6                    M L00034
                          M     endif
                      00318         LABEL?L L00031  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00031
                          M         XALL
                          M     else
000AD6                    M L00031
                          M     endif
                      00319         CMPEQ?WWB       _flow_val, _flow_ref, T1
                          M         MOVE?WW _flow_val, R0
                          M         MOVE?BB _flow_val, R0
000AD6 C02C F001          M         movff   _flow_val, R0
                          M         MOVE?BB (_flow_val) + 1, (R0) + 1
000ADA C02D F002          M         movff   (_flow_val) + 1, (R0) + 1
                          M         MOVE?WWA _flow_ref, R1
                          M         MOVE?BB (_flow_ref) + 1, (R1) + 1
000ADE C02B F004          M         movff   (_flow_ref) + 1, (R1) + 1
                          M         MOVE?BA _flow_ref
                          M         CHK?RP  _flow_ref
                          M     if (((_flow_ref) > BANKA_END) & ((_flow_ref) < (0f01h + BANKA_END)))
                          M       if (((_flow_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_ref)
                          M PREV_BANK = high (_flow_ref)
                          M       endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000AE2 502A               M         movf    _flow_ref, W
                          M         L?CALL  CMPEQ
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPEQ
                          M     else
                          M       if ((CMPEQ) < 1)
                          M         call    CMPEQ
                          M       else
                          M         if ((CMPEQ) > $)
                          M         call    CMPEQ
                          M         else
                          M           if ((CMPEQ) < ($ - 3ffh))
000AE4 EC10 F001          M         call    CMPEQ
                          M           else
                          M         rcall   CMPEQ
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000AE8 6E13               M         movwf   T1
                      00320         CMPEQ?WCB       _flow_ref, 000h, T2
                          M         MOVE?WW _flow_ref, R0
                          M         MOVE?BB _flow_ref, R0
000AEA C02A F001          M         movff   _flow_ref, R0
                          M         MOVE?BB (_flow_ref) + 1, (R0) + 1
000AEE C02B F002          M         movff   (_flow_ref) + 1, (R0) + 1
                          M         MOVE?CB (000h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((000h) >> 8) == 0)
000AF2 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((000h) >> 8)
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (000h)
000AF4 0E00               M         movlw   low (low (000h))
                          M         L?CALL  CMPEQ
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPEQ
                          M     else
                          M       if ((CMPEQ) < 1)
                          M         call    CMPEQ
                          M       else
                          M         if ((CMPEQ) > $)
                          M         call    CMPEQ
                          M         else
                          M           if ((CMPEQ) < ($ - 3ffh))
000AF6 EC10 F001          M         call    CMPEQ
                          M           else
                          M         rcall   CMPEQ
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000AFA 6E15               M         movwf   T2
                      00321         LAND?BBW        T1, T2, T2
                          M         MOVE?BB T1,   R0
000AFC C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000B00 5015               M         movf    T2,  W
                          M         L?CALL  LAND
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LAND
                          M     else
                          M       if ((LAND)  < 1)
                          M         call    LAND
                          M       else
                          M         if ((LAND)  > $)
                          M         call    LAND
                          M         else
                          M           if ((LAND)  < ($ - 3ffh))
000B02 EC2F F001          M         call    LAND
                          M           else
                          M         rcall   LAND
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000B06 6E15               M         movwf   T2
000B08 6E16               M         movwf   T2   + 1
                      00322         CMPF?WL T2, L00037
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000B0A 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000B0C 5015               M         movf    T2,  W
000B0E 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00037
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00037))
                          M         CLRWDT?
                          M       endif
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M             else
                          M         bov     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
000B10 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
000B12 EF8E F005          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 3ffh))
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00037
                          M             else
                          M         bra     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00323         MOVE?CW 032h, _flow_pwm_val
                          M         CHK?RP  _flow_pwm_val
                          M     if (((_flow_pwm_val) > BANKA_END) & ((_flow_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_pwm_val)
                          M PREV_BANK = high (_flow_pwm_val)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _flow_pwm_val
                          M         movlw   high (032h)
                          M         movwf   (_flow_pwm_val) + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _flow_pwm_val
                          M       else
000B16 0E32               M         movlw   low (032h)
000B18 6E28               M         movwf   _flow_pwm_val
                          M       endif
                          M       if ((high (032h)) == 0)
000B1A 6A29               M         clrf    (_flow_pwm_val) + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_flow_pwm_val) + 1
                          M       endif
                          M     endif
                      00324         LABEL?L L00037  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00037
                          M         XALL
                          M     else
000B1C                    M L00037
                          M     endif
                      00325         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000B1C 0012               M         return
                      00326 
                      00327         END
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 181


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCIN                             0000019A
ADCIN?CW                          
ADCIN_USED                        00000001
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          10
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      50
ADD?WCW                           
ADD?WWW                           
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
AOUT?WWW                          
BANK0_END                         000000FF
BANK0_START                       00000080
BANK1_END                         000001FF
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 182


SYMBOL TABLE
  LABEL                             VALUE 

BANK1_START                       00000100
BANK2_END                         000002FF
BANK2_START                       00000200
BANKA_END                         0000007F
BANKA_START                       00000000
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          2
CCP1_REG                          PORTC
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 183


SYMBOL TABLE
  LABEL                             VALUE 

CCP2Y                             00000004
CCP2_BIT                          00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCP2_REG                          00000F82
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMP                               0000023E
CMPEQ                             00000220
CMPEQ?WCB                         
CMPEQ?WWB                         
CMPEQ_USED                        00000001
CMPF?WL                           
CMPGE                             00000226
CMPGE?WCL                         
CMPGE?WWB                         
CMPGE?WWL                         
CMPGE_USED                        00000001
CMPGT                             0000022C
CMPGT?WCL                         
CMPGT?WWB                         
CMPGT_USED                        00000001
CMPLE                             00000232
CMPLE?WCL                         
CMPLE?WWL                         
CMPLE_USED                        00000001
CMPLT                             00000238
CMPLT?WWB                         
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 184


SYMBOL TABLE
  LABEL                             VALUE 

CMPLT_USED                        00000001
CMP_USED                          00000001
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       00000193
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DIV                               00000276
DIV32DIV                          0000027A
DIV?CWW                           
DIV?WCW                           
DIV?WWW                           
DIV_USED                          00000001
DONE                              00000001
DUNN                              000002F0
DUNN3                             000002F2
DUNNRET                           000002F4
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 185


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
END?                              
FAST                              00000001
FERR                              00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FLTS                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000019
GOSUB?L                           
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HPWM                              00000006
HPWM?CWC                          
HPWM_USED                         00000001
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 186


SYMBOL TABLE
  LABEL                             VALUE 

HSER2_SPBRG                       00000019
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000019
HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              000002F6
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 187


SYMBOL TABLE
  LABEL                             VALUE 

JUMPMAN                           000002E4
JUMPMAN_USED                      00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L00001                            00000608
L00002                            0000079A
L00003                            0000060C
L00004                            0000072C
L00005                            00000722
L00007                            00000896
L00008                            0000096E
L00009                            0000088E
L00010                            00000892
L00011                            000007FC
L00013                            0000085E
L00015                            0000088A
L00017                            00000968
L00018                            0000096E
L00019                            000008D8
L00021                            0000093A
L00023                            00000964
L00025                            00000A44
L00027                            00000A3E
L00028                            00000A44
L00029                            00000A34
L00030                            00000A3A
L00031                            00000AD6
L00033                            00000AD0
L00034                            00000AD6
L00035                            00000AC4
L00036                            00000ACC
L00037                            00000B1C
L?CALL                            
L?GOTO                            
LABEL?L                           
LAND                              0000025E
LAND?BBW                          
LAND_USED                         00000001
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 188


SYMBOL TABLE
  LABEL                             VALUE 

LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            00000096
LCDOUT?C                          
LCDOUTCOUNT?C                     
LCDOUTDEC?                        
LCDOUTJ                           00000094
LCDOUTJ_USED                      00000001
LCDOUTNUM?W                       
LCDOUT_USED                       00000001
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          4
LCD_DREG                          PORTC
LCD_EBIT                          3
LCD_EREG                          PORTC
LCD_LINES                         2
LCD_RSBIT                         0
LCD_RSREG                         PORTC
LCD_RWBIT                         00000000
LCD_RWREG                         00000F82
LOR                               0000026C
LOR?BBW                           
LOR_USED                          00000001
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 189


SYMBOL TABLE
  LABEL                             VALUE 

MCLR                              00000003
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MUL                               000002A6
MUL?WCW                           
MUL_USED                          00000001
N                                 00000004
NEXT?WCL                          
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OSC                               4
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 190


SYMBOL TABLE
  LABEL                             VALUE 

P                                 00000004
PAUSE                             000001CA
PAUSE?C                           
PAUSEL                            000001CC
PAUSEUS                           000001E6
PAUSEUSL                          000001E8
PAUSEUS_USED                      00000001
PAUSE_DELAY                       000003DF
PAUSE_USED                        00000001
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_BANK                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 191


SYMBOL TABLE
  LABEL                             VALUE 

PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PWM1CON                           00000FB7
R                                 00000002
R0                                00000001
R1                                00000003
R2                                00000005
R3                                00000007
R4                                00000009
R5                                0000000B
R6                                0000000D
R7                                0000000F
R8                                00000011
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000003
RAM_END                           000002FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 192


SYMBOL TABLE
  LABEL                             VALUE 

RCSTA                             00000FAB
RD                                00000000
RD16                              00000007
RE3                               00000003
RESET_ORG                         00000000
RETURN?                           
RI                                00000004
RM1                               0000001A
RM2                               0000001B
RR1                               0000001C
RR2                               0000001D
RS1                               0000001E
RS2                               0000001F
RSEN                              00000001
RST?RP                            
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SEROUT2DEC                        0000013E
SEROUT2DEC_USED                   00000001
SEROUT2SEND                       0000017A
SEROUT2SEND_USED                  00000001
SHIFTR                            00000216
SHIFTR?WCB                        
SHIFTR_USED                       00000001
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 193


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SUB?WCW                           
SUB?WWW                           
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T1                                00000013
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2                                00000015
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 194


SYMBOL TABLE
  LABEL                             VALUE 

T3                                00000017
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 195


SYMBOL TABLE
  LABEL                             VALUE 

TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 196


SYMBOL TABLE
  LABEL                             VALUE 

WUE                               00000001
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP1CON??4                       CCP1CON, 004h
_CCP1CON??5                       CCP1CON, 005h
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 197


SYMBOL TABLE
  LABEL                             VALUE 

_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PORTH                            00000F82
_PORTL                            00000F81
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_TRISH                            00000F94
_TRISL                            00000F93
_USED                             00000001
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 198


SYMBOL TABLE
  LABEL                             VALUE 

_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F2420                         00000001
_an_frequency                     00000020
_dT_1                             00000022
_dT_2                             00000024
_flow_decimal                     00000026
_flow_pwm_val                     00000028
_flow_pwm_val??0                  _flow_pwm_val, 000h
_flow_pwm_val??1                  _flow_pwm_val, 001h
_flow_ref                         0000002A
_flow_val                         0000002C
_get_flowrate                     00000970
_get_temp_pwm                     0000079C
_get_temp_value                   00000582
_get_water_pwm                    000009B4
_i                                0000002E
_main                             000003F6
_n                                00000030
_n1                               00000032
_n2                               00000034
_resistor_ref                     00000050
_t1adval                          00000036
_t1res_lower                      00000038
_t1res_upper                      0000003A
_t1resistance                     0000003C
_t1temp_decimal                   0000003E
_t1temp_integer                   00000040
_t1temp_lower                     00000042
_t1temp_ref                       00000044
_t1temp_upper                     00000046
_t1temp_val                       00000048
_temp_pwm_val                     0000004A
_temp_ref                         00000068
_throttle                         0000004C
_x                                0000004E
adcinloop                         000001BC
cmpnoteq                          0000024A
divloop                           0000027E
divok                             00000298
hpwm2                             00000076
hpwm24                            00000088
hpwm242                           0000008A
hpwmdone                          00000070
lcdchkcd                          0000010E
lcdloop                           0000011C
lcdout1                           000000F2
lcdoutcom                         000000F0
lcdsend                           0000011A
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 199


SYMBOL TABLE
  LABEL                             VALUE 

main                              000002F6
pauseloop                         000001CE
pauseusdone                       0000020E
pauseush                          000001FA
pauseusloop                       000001F4
serout2ddig                       0000016A
serout2send1                      0000018A
shiftrloop                        00000210


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.51                          ALL2.ASM   3-13-2018  11:29:38         PAGE 200


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXX-- ---------------- ----------------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  2854
Program Memory Bytes Free: 13530


Errors   :     0
Warnings :     0 reported,     4 suppressed
Messages :     0 reported,     0 suppressed

