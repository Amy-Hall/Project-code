'****************************************************************
'*  Name    : UNTITLED.BAS                                      *
'*  Author  : [select VIEW...EDITOR OPTIONS]                    *
'*  Notice  : Copyright (c) 2018 [select VIEW...EDITOR OPTIONS] *
'*          : All Rights Reserved                               *
'*  Date    : 20/01/2018                                        *
'*  Version : 1.0                                               *
'*  Notes   :                                                   *
'*          :                                                   *
'****************************************************************
DEFINE OSC 8

DEFINE LCD_DREG PORTC
DEFINE LCD_DBIT 4
DEFINE LCD_RSREG PORTC
DEFINE LCD_RSBIT 0
DEFINE LCD_EREG PORTC
DEFINE LCD_EBIT 3
DEFINE LCD_BITS 4
DEFINE LCD_LINES 2
DEFINE ADC_BITS 10
DEFINE ADC_SAMPLEUS 50 ' Set sampling time in uS

t1adval VAR WORD
t1resistance var WORD
t1res_upper var word     
t1res_lower var word     
t1temp_upper var word 
t1temp_lower var word 
resistor_ref var word[12]
temp_ref var WORD[12]
i var word
n var word
t1temp_integer var word
t1temp_decimal var word

temp_ref[0] = 5
temp_ref[1] = 10
temp_ref[2] = 15
temp_ref[3] = 20
temp_ref[4] = 25
temp_ref[5] = 30
temp_ref[6] = 35
temp_ref[7] = 40
temp_ref[8] = 45
temp_ref[9] = 50
temp_ref[10] = 55
temp_ref[11] = 60

resistor_ref[0]= 5083
resistor_ref[1]= 4081
resistor_ref[2]= 3299
resistor_ref[3]= 2685
resistor_ref[4]= 2200
resistor_ref[5]= 1813
resistor_ref[6]= 1503
resistor_ref[7]= 1254
resistor_ref[8]= 1051
resistor_ref[9]= 886
resistor_ref[10]= 750
resistor_ref[11]= 639

ADCON0 = %00000001 ' Set ADC_CLOCK to RC (DEFINE ACD_CLOCK inoperative on the 16F88x)
ADCON1 = %00000000 ' Right-Justify result in ADRESH:ADRESL registers
ADCON2 = %10000111
TRISA = %11111111 ' Set PORTA to all input       

main:
ADCIN 0, t1adval 
t1resistance = (44000/t1adval)*51 -2200

if (t1resistance > resistor_ref[0]) or (t1resistance < resistor_ref[11]) then
    LCDOUT $FE, 1, dec t1resistance
    LCDOUT $FE, $C0, "out of range" 
else 
    For i = 0 to 11 
        if t1resistance < resistor_ref[i] and t1resistance >= resistor_ref[i+1] then
            t1res_lower = resistor_ref[i+1]
            t1res_upper = resistor_ref[i] 
            t1temp_lower = temp_ref[i] 
            t1temp_upper = temp_ref[i+1] 
        endif 
    next i  
    
    t1temp_integer = (t1temp_upper*10 - ((t1resistance-t1res_lower)*50/(t1res_upper - t1res_lower)))/10
    t1temp_decimal = (t1temp_upper*10 - ((t1resistance-t1res_lower)*50/(t1res_upper - t1res_lower)))//10
    
    LCDOUT $FE, 1, dec t1resistance, "  ", dec t1adval
    LCDOUT $FE, $C0, "Temp:", dec t1temp_integer, ".", dec t1temp_decimal
endif
goto main
end

 

