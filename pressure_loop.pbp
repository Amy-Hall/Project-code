define OSC 4
OSCCON = %01000000

DEFINE LCD_DREG PORTC
DEFINE LCD_DBIT 4
DEFINE LCD_RSREG PORTC
DEFINE LCD_RSBIT 0
DEFINE LCD_EREG PORTC
DEFINE LCD_EBIT 3
DEFINE LCD_BITS 4
DEFINE LCD_LINES 2
DEFINE ADC_BITS 10
DEFINE ADC_SAMPLEUS 50 ' Set sampling time in uS

define CCP1_REG PORTC
define CCP1_BIT 2

p_ref var word
p_pwm_val var word
p_val var word 
p_val_lcd var word
p_in var word    
 
ADCON1 = %00000000 ' Right-Justify result in ADRESH:ADRESL registers
ADCON2 = %10000111
TRISA = %11111111 ' Set PORTA to all input 
TRISC = %00000000

TRISC.2 = 0          ' Set PORTC.2 (CCP1) to output
CCP1CON = %00001100  ' Set CCP1 to PWM
T2CON = %00000111    ' Turn on Timer2, Prescale=16 (last bits 00=1 01=4)
PR2 = %11111111     ' Set PR2 to get 60Hz out


p_pwm_val=100
CCP1CON.4 = p_pwm_val.0   ' Store duty to registers as
CCP1CON.5 = p_pwm_val.1   ' a 10-bit word
CCPR1L = p_pwm_val >> 2


main:
    ADCON0 = %00001101                   'AN3
    adcin 3, p_ref                    'flowrate*10, want from 0-1024 to between 0 and 44
    'keep flow ref as 0-1024, convert to pressure only to show user, convert input pressure to something representative between 0-1024
  '  flow_ref = (flow_ref*44)/1024
    gosub get_pressure
    gosub get_water_p_pwm           
    CCP1CON.4 = p_pwm_val.0   ' Store duty to registers as
    CCP1CON.5 = p_pwm_val.1   ' a 10-bit word
    CCPR1L = p_pwm_val >> 2     
    
    LCDOUT $FE, 1, "pres=", dec p_val_lcd, "  ",  dec p_val
    LCDOUT $FE, $C0, "ref=", dec p_ref, " pwm=", dec p_pwm_val
    pause 250
    goto main
end

get_pressure:
    ADCON0 = %00010001                'AN3
    adcin 4, p_in
    p_val = ((p_in*51)/30)-326   'convert to a value between 0 and 1024 representing pressures 0 to 800Pa
    p_val_lcd = (p_in*50)/64 
return


get_water_p_pwm:
    If (p_val < p_ref) then
        IF (p_pwm_val < 120) then
            if ((p_ref-p_val)>5) then
                p_pwm_val= p_pwm_val + ((p_ref-p_val)/5)
            else
                p_pwm_val = p_pwm_val + 1
            endif
        else
            p_pwm_val = 120
        endif
    endif
    if (p_val > p_ref) then
        IF (p_pwm_val >50) then
            if ((p_val-p_ref)>5) then
                p_pwm_val = p_pwm_val - ((p_val-p_ref)/5)
            else
                p_pwm_val = p_pwm_val - 1
            endif
        else
            p_pwm_val = 50
        endif 
    endif
return
