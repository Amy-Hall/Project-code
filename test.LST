MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.47, (c) 1998, 2006 microEngineering Labs, Inc. All Rights Reserved.  
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\12F683.INC"
                      00001 ;****************************************************************
                      00002 ;*  12F683.INC                                                  *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2005 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 08/31/05                                        *
                      00008 ;*  Version   : 2.46a                                           *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00019         LIST
                      00020         LIST p = 12F683, r = dec, w = -302
                      00021         INCLUDE "P12F683.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC12F683 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00459         LIST
2007   3FFC           00022         __config _INTRC_OSC_NOCLKOUT & _WDT_ON & _MCLRE_ON & _CP_OFF
                      00025         LIST
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 #define         CCP1_REG                 GPIO
                      00010 #define         CCP1_BIT                 2
                      00011 
  00000020            00012 RAM_START                       EQU     00020h
  000000BF            00013 RAM_END                         EQU     000BFh
  00000002            00014 RAM_BANKS                       EQU     00002h
  00000020            00015 BANK0_START                     EQU     00020h
  0000007F            00016 BANK0_END                       EQU     0007Fh
  000000A0            00017 BANK1_START                     EQU     000A0h
  000000BF            00018 BANK1_END                       EQU     000BFh
  00002100            00019 EEPROM_START                    EQU     02100h
  000021FF            00020 EEPROM_END                      EQU     021FFh
                      00021 
  00000020            00022 R0                              EQU     RAM_START + 000h
  00000022            00023 R1                              EQU     RAM_START + 002h
  00000024            00024 R2                              EQU     RAM_START + 004h
  00000026            00025 R3                              EQU     RAM_START + 006h
  00000028            00026 R4                              EQU     RAM_START + 008h
  0000002A            00027 R5                              EQU     RAM_START + 00Ah
  0000002C            00028 R6                              EQU     RAM_START + 00Ch
  0000002E            00029 R7                              EQU     RAM_START + 00Eh
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00030 R8                              EQU     RAM_START + 010h
  00000032            00031 FLAGS                           EQU     RAM_START + 012h
  00000033            00032 GOP                             EQU     RAM_START + 013h
  00000034            00033 RM1                             EQU     RAM_START + 014h
  00000035            00034 RM2                             EQU     RAM_START + 015h
  00000036            00035 RR1                             EQU     RAM_START + 016h
  00000037            00036 RR2                             EQU     RAM_START + 017h
  00000005            00037 _PORTL                          EQU      GPIO
  00000005            00038 _PORTH                          EQU      GPIO
  00000085            00039 _TRISL                          EQU      TRISIO
  00000085            00040 _TRISH                          EQU      TRISIO
                      00041 
                      00042 ; Constants.
  00000004            00043 _LED                            EQU     00004h
                      00044         INCLUDE "TEST.MAC"
                      00001 
                      00059         LIST
                      00045         INCLUDE "C:\PBP\PBPPIC14.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC14.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 01/16/06                                          *
                      00008 ;*  Version   : 2.47                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00045   LIST
                      00046 ; Oscillator is 4MHz
                      01110   LIST
0000                  01111     ORG 0                       ; Reset vector at 0
                      01125   LIST
0000   2828           01126         goto    INIT            ; Finish initialization
                      06138   LIST
0001   01A3           06139 PAUSE   clrf    R1 + 1
0002   00A2           06140 PAUSEL  movwf   R1
0003   30FF           06141 pauseloop movlw -1              ; 1 (9)
0004   07A2           06142         addwf   R1, F           ; 1
0005   1C03           06143         btfss   STATUS, C       ; 1 / 2
0006   07A3           06144         addwf   R1 + 1, F       ; 1 / 0
0007   1C03           06145         btfss   STATUS, C       ; 2
0008   2823           06146         goto    DONE
0009   3003           06147         movlw   (PAUSE_DELAY) >> 8      ; 1
000A   00A1           06148         movwf   R0 + 1          ; 1
000B   30DF           06149         movlw   low (PAUSE_DELAY)       ; 1
000C   200F           06150         call    PAUSEUSL        ; -2 (PAUSEUSL gives you 2 less than you ask for)
000D   2803           06151         goto    pauseloop       ; 2
                      06195   LIST
000E   01A1           06196 PAUSEUS clrf    R0 + 1          ; 1
000F   3EE8           06197 PAUSEUSL addlw  -24             ; 1 Subtract overhead
0010   00A0           06198         movwf   R0              ; 1
0011   09A1           06199         comf    R0 + 1, F       ; 1
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0012   30FC           06200         movlw   -4              ; 1
0013   1C03           06201         btfss   STATUS, C       ; 1 / 2
0014   2818           06202         goto    pauseush        ; 2 / 0
0015   07A0           06203 pauseusloop addwf R0, F         ; 1
0016   1803           06204         btfsc   STATUS, C       ; 1 / 2
0017   2815           06205         goto    pauseusloop     ; 2 / 0
0018   07A0           06206 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06207         CLRWDT?NOP              ; 1 Keep Watchdog clear
                          M     ifndef NO_CLRWDT
0019   0064               M         clrwdt
                          M     else
                          M         nop
                          M     endif
001A   0FA1           06208         incfsz  R0 + 1, F       ; 1 / 2
001B   2815           06209         goto    pauseusloop     ; 2 / 0
001C   1820           06210         btfsc   R0, 0           ; 1 / 2
001D   281E           06211         goto    $ + 1           ; 2 / 0 Burn an extra cycle
001E   1CA0           06212         btfss   R0, 1           ; 1 / 2
001F   2822           06213         goto    pauseusdone     ; 2 / 0
0020   0000           06214         nop                     ; 1
0021   2822           06215         goto    $ + 1           ; 2 Burn an extra 2 cycles
0022   0008           06216 pauseusdone return              ; 2 + 3 (call + setup)
                      07403   LIST
0023   1383           07404 DONE    bcf     STATUS, IRP     ; 1 Set FSR to bank 0/1
0024   1303           07405         bcf     STATUS, RP1     ; 1 Show direct bank 0
0025   1283           07406         bcf     STATUS, RP0     ; 1
                      07407         CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
0026   0064               M         clrwdt
                          M     else
                          M         nop
                          M     endif
0027   0008           07408 DONERET return                  ; 2 Done
                      07432   LIST
0028                  07433 INIT
                      07471   LIST
0028                  07472 main
                      00046 
                      00047         MOVE?CB 000h, ANSEL
                          M         CHK?RP  ANSEL
                          M     if (((ANSEL) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     if (((ANSEL) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
0028   1683               M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((ANSEL) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((ANSEL) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (000h) == 0)
0029   019F               M         clrf    ANSEL
                          M     else
                          M         movlw   low (000h)
                          M         movwf   ANSEL
                          M     endif
                      00048         MOVE?CB 007h, CMCON0
                          M         CHK?RP  CMCON0
                          M     if (((CMCON0) & 180h) == 0)
                          M       if (PREV_BANK == 1)
002A   1283               M         bcf     STATUS, RP0
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((CMCON0) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((CMCON0) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((CMCON0) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (low (007h) == 0)
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    CMCON0
                          M     else
002B   3007               M         movlw   low (007h)
002C   0099               M         movwf   CMCON0
                          M     endif
                      00049 
                      00050         LABEL?L _mainloop       
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M     ifdef PM_USED
                          M         LALL
                          M _mainloop
                          M         XALL
                          M     else
002D                      M _mainloop
                          M     endif
                      00051         LOW?C   _LED
                          M     if (_LED < 8)
                          M         MOVE?CT 0, _PORTL, _LED
                          M         CHK?RP  _PORTL
                          M     if (((_PORTL) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((_PORTL) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     if (((_PORTL) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((_PORTL) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     _PORTL, _LED
                          M     else
002D   1205               M         bcf     _PORTL, _LED
                          M     endif
                          M         MOVE?CT 0, ((_PORTL) + 80h), _LED
                          M         CHK?RP  ((_PORTL) + 80h)
                          M     if (((((_PORTL) + 80h)) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((((_PORTL) + 80h)) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
002E   1683               M         bsf     STATUS, RP0
                          M       endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((((_PORTL) + 80h)) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((((_PORTL) + 80h)) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((_PORTL) + 80h), _LED
                          M     else
002F   1205               M         bcf     ((_PORTL) + 80h), _LED
                          M     endif
                          M     else
                          M         MOVE?CT 0, _PORTH, (_LED) - 8
                          M         MOVE?CT 0, ((_PORTH) + 80h), (_LED) - 8
                          M     endif
                      00052         PAUSE?C 001F4h
                          M     if (high (001F4h) == 0)
                          M         MOVE?CA 001F4h
                          M         L?CALL  PAUSE
                          M     else
                          M         MOVE?CB high (001F4h), R1 + 1
                          M         CHK?RP  R1 + 1
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((R1 + 1) & 180h) == 0)
                          M       if (PREV_BANK == 1)
0030   1283               M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 3
                          M     endif
                          M     if (low (high (001F4h)) == 0)
                          M         clrf    R1 + 1
                          M     else
0031   3001               M         movlw   low (high (001F4h))
0032   00A3               M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (001F4h)
0033   30F4               M         movlw   low (low (001F4h))
                          M         L?CALL  PAUSEL
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     if ((PAUSEL) < 1)
                          M       if (CODE_SIZE >= 4)
                          M         if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M       endif
                          M       if (CODE_SIZE == 8)
                          M         if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M         else
                          M         bsf     PCLATH, 4
                          M         endif
                          M       endif
                          M     else
                          M       if ((PAUSEL) > $)
                          M         if (CODE_SIZE >= 4)
                          M           if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M           else
                          M         bsf     PCLATH, 3
                          M           endif
                          M         endif
                          M         if (CODE_SIZE == 8)
                          M           if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if (CODE_SIZE >= 4)
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if (((PAUSEL) & 1800h) == 0)
                          M         clrf    PCLATH
                          M           else
                          M             if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M             if (CODE_SIZE == 8)
                          M               if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M               else
                          M         bsf     PCLATH, 4
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
0034   2002               M         call    PAUSEL
                          M     endif
                      00053         HIGH?C  _LED
                          M     if (_LED < 8)
                          M         MOVE?CT 1, _PORTL, _LED
                          M         CHK?RP  _PORTL
                          M     if (((_PORTL) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((_PORTL) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     if (((_PORTL) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((_PORTL) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (((1)   & 1) == 1)
0035   1605               M         bsf     _PORTL, _LED
                          M     else
                          M         bcf     _PORTL, _LED
                          M     endif
                          M         MOVE?CT 0, ((_PORTL) + 80h), _LED
                          M         CHK?RP  ((_PORTL) + 80h)
                          M     if (((((_PORTL) + 80h)) & 180h) == 0)
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((((_PORTL) + 80h)) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
0036   1683               M         bsf     STATUS, RP0
                          M       endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
  00000001                M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((((_PORTL) + 80h)) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((((_PORTL) + 80h)) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 3
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((_PORTL) + 80h), _LED
                          M     else
0037   1205               M         bcf     ((_PORTL) + 80h), _LED
                          M     endif
                          M     else
                          M         MOVE?CT 1, _PORTH, (_LED) - 8
                          M         MOVE?CT 0, ((_PORTH) + 80h), (_LED) - 8
                          M     endif
                      00054         PAUSE?C 001F4h
                          M     if (high (001F4h) == 0)
                          M         MOVE?CA 001F4h
                          M         L?CALL  PAUSE
                          M     else
                          M         MOVE?CB high (001F4h), R1 + 1
                          M         CHK?RP  R1 + 1
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((R1 + 1) & 180h) == 0)
                          M       if (PREV_BANK == 1)
0038   1283               M         bcf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 80h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M         bcf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP1
                          M       endif
                          M PREV_BANK = 1
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 100h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bcf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 3)
                          M         bcf     STATUS, RP0
                          M       endif
                          M PREV_BANK = 2
                          M     endif
                          M 
                          M     if (((R1 + 1) & 180h) == 180h)
                          M       if (PREV_BANK == 0)
                          M         bsf     STATUS, RP0
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 1)
                          M         bsf     STATUS, RP1
                          M       endif
                          M       if (PREV_BANK == 2)
                          M         bsf     STATUS, RP0
                          M       endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 3
                          M     endif
                          M     if (low (high (001F4h)) == 0)
                          M         clrf    R1 + 1
                          M     else
0039   3001               M         movlw   low (high (001F4h))
003A   00A3               M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (001F4h)
003B   30F4               M         movlw   low (low (001F4h))
                          M         L?CALL  PAUSEL
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     if ((PAUSEL) < 1)
                          M       if (CODE_SIZE >= 4)
                          M         if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M       endif
                          M       if (CODE_SIZE == 8)
                          M         if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M         else
                          M         bsf     PCLATH, 4
                          M         endif
                          M       endif
                          M     else
                          M       if ((PAUSEL) > $)
                          M         if (CODE_SIZE >= 4)
                          M           if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M           else
                          M         bsf     PCLATH, 3
                          M           endif
                          M         endif
                          M         if (CODE_SIZE == 8)
                          M           if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if (CODE_SIZE >= 4)
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if (((PAUSEL) & 1800h) == 0)
                          M         clrf    PCLATH
                          M           else
                          M             if (((PAUSEL) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M             if (CODE_SIZE == 8)
                          M               if (((PAUSEL) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M               else
                          M         bsf     PCLATH, 4
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
003C   2002               M         call    PAUSEL
                          M     endif
                      00055         GOTO?L  _mainloop
                          M         L?GOTO  _mainloop
                          M     if ($ == (_mainloop))
                          M         CLRWDT?
                          M     endif
                          M 
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
  00000000                M PREV_BANK = 0
                          M 
                          M     if ((_mainloop) < 1)
                          M       if (CODE_SIZE >= 4)
                          M         if (((_mainloop) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M       endif
                          M       if (CODE_SIZE == 8)
                          M         if (((_mainloop) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M         else
                          M         bsf     PCLATH, 4
                          M         endif
                          M       endif
                          M     else
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((_mainloop) > $)
                          M         if (CODE_SIZE >= 4)
                          M           if (((_mainloop) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M           else
                          M         bsf     PCLATH, 3
                          M           endif
                          M         endif
                          M         if (CODE_SIZE == 8)
                          M           if (((_mainloop) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if (CODE_SIZE >= 4)
                          M           if (((_mainloop) & 1800h) == 0)
                          M         clrf    PCLATH
                          M           else
                          M             if (((_mainloop) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M             if (CODE_SIZE == 8)
                          M               if (((_mainloop) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M               else
                          M         bsf     PCLATH, 4
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M 
003D   282D               M         goto    _mainloop
                      00056         END?    
  0000                    M     local loop
003E   0063               M loop    sleep
                          M         L?GOTO  loop
                          M     if ($ == (_34loop))
                          M         CLRWDT?
                          M     endif
                          M 
                          M         RST?RP
                          M     if ((PREV_BANK & 1) != 0)
                          M         bcf     STATUS, RP0
                          M     endif
                          M     if ((PREV_BANK & 2) != 0)
                          M         bcf     STATUS, RP1
                          M     endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000                M PREV_BANK = 0
                          M 
                          M     if ((_34loop) < 1)
                          M       if (CODE_SIZE >= 4)
                          M         if (((_34loop) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M         else
                          M         bsf     PCLATH, 3
                          M         endif
                          M       endif
                          M       if (CODE_SIZE == 8)
                          M         if (((_34loop) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M         else
                          M         bsf     PCLATH, 4
                          M         endif
                          M       endif
                          M     else
                          M       if ((_34loop) > $)
                          M         if (CODE_SIZE >= 4)
                          M           if (((_34loop) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M           else
                          M         bsf     PCLATH, 3
                          M           endif
                          M         endif
                          M         if (CODE_SIZE == 8)
                          M           if (((_34loop) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M           else
                          M         bsf     PCLATH, 4
                          M           endif
                          M         endif
                          M       else
                          M         if (CODE_SIZE >= 4)
                          M           if (((_34loop) & 1800h) == 0)
                          M         clrf    PCLATH
                          M           else
                          M             if (((_34loop) & 800h) == 0)
                          M         bcf     PCLATH, 3
                          M             else
                          M         bsf     PCLATH, 3
                          M             endif
                          M             if (CODE_SIZE == 8)
                          M               if (((_34loop) & 1000h) == 0)
                          M         bcf     PCLATH, 4
                          M               else
                          M         bsf     PCLATH, 4
                          M               endif
                          M             endif
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
003F   283E               M         goto    _34loop
                      00057 
                      00058         END
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

ADCON0                            0000001F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_BITS                          00000008
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS2                              00000002
ANS3                              00000003
ANSEL                             0000009F
BANK0_END                         0000007F
BANK0_START                       00000020
BANK1_END                         000000BF
BANK1_START                       000000A0
BIT?FLIP                          
BIT?FW                            
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BUTTON_PAUSE                      0000000A
C                                 00000000
CCP1CON                           00000015
CCP1IE                            00000005
CCP1IF                            00000005
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1_BIT                          2
CCP1_REG                          GPIO
CCPR1                             00000013
CCPR1H                            00000014
CCPR1L                            00000013
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CINV                              00000004
CIS                               00000003
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

CMCON0                            00000019
CMCON1                            0000001A
CMIE                              00000003
CMIF                              00000003
CMSYNC                            00000000
CODE_SIZE                         00000002
COUT                              00000006
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000005
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       00000193
DEBUG_MODE                        00000001
DEBUG_REG                         00000005
DONE                              00000023
DONERET                           00000027
DONE_USED                         00000001
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDAT                             0000009A
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
EEPROM_END                        000021FF
EEPROM_START                      00002100
END?                              
F                                 00000001
FLAGS                             00000032
FSR                               00000004
GIE                               00000007
GO                                00000001
GOP                               00000033
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
GP0                               00000000
GP1                               00000001
GP2                               00000002
GP3                               00000003
GP4                               00000004
GP5                               00000005
GPIE                              00000003
GPIF                              00000000
GPIO                              00000005
HIGH?C                            
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_RCSTA                        00000090
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

HSER_SPBRG                        00000019
HSER_TXSTA                        00000020
HTS                               00000002
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
INDF                              00000000
INIT                              00000028
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
L?CALL                            
L?GOTO                            
LABEL?L                           
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCD_BITS                          00000004
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          00000000
LCD_DREG                          00000005
LCD_EBIT                          00000003
LCD_EREG                          00000006
LCD_LINES                         00000002
LCD_RSBIT                         00000004
LCD_RSREG                         00000005
LCD_RWBIT                         00000004
LCD_RWREG                         00000005
LOW?C                             
LTS                               00000001
MOVE?AB                           
MOVE?AT                           
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
NOT_BOD                           00000000
NOT_DONE                          00000001
NOT_GPPU                          00000007
NOT_PD                            00000003
NOT_POR                           00000001
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OPTION_REG                        00000081
OSC                               00000004
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000002
OSFIF                             00000002
OSTS                              00000003
PAUSE                             00000001
PAUSE?C                           
PAUSEL                            00000002
PAUSEUS                           0000000E
PAUSEUSL                          0000000F
PAUSEUS_USED                      00000001
PAUSE_DELAY                       000003DF
PAUSE_USED                        00000001
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PREV_BANK                         00000000
PS0                               00000000
PS1                               00000001
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

PS2                               00000002
PSA                               00000003
R0                                00000020
R1                                00000022
R2                                00000024
R3                                00000026
R4                                00000028
R5                                0000002A
R6                                0000002C
R7                                0000002E
R8                                00000030
RAM_BANKS                         00000002
RAM_END                           000000BF
RAM_START                         00000020
RD                                00000000
RM1                               00000034
RM2                               00000035
RP0                               00000005
RP1                               00000006
RR1                               00000036
RR2                               00000037
RST?RP                            
SBODEN                            00000004
SCS                               00000000
STATUS                            00000003
SWDTEN                            00000000
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GE                              00000006
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
T2IE                              00000001
T2IF                              00000001
TABLE?C                           
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISIO                            00000085
TRISIO0                           00000000
TRISIO1                           00000001
TRISIO2                           00000002
TRISIO3                           00000003
TRISIO4                           00000004
TRISIO5                           00000005
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
ULPWUE                            00000005
VCFG                              00000006
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000099
VREN                              00000007
VRR                               00000005
W                                 00000000
WDTCON                            00000018
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPU0                              00000000
WPU1                              00000001
WPU2                              00000002
WPU4                              00000004
WPU5                              00000005
WPUA                              00000095
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREN                              00000002
WRERR                             00000003
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

Z                                 00000002
_BOD_NSLEEP                       00003EFF
_BOD_OFF                          00003CFF
_BOD_ON                           00003FFF
_BOD_SBODEN                       00003DFF
_BOREN_NSLEEP                     00003EFF
_BOREN_OFF                        00003CFF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003DFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_FOSC_EC                          00003FFB
_FOSC_EXTRCCLK                    00003FFF
_FOSC_EXTRCIO                     00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTOSCCLK                   00003FFD
_FOSC_INTOSCIO                    00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LED                              00000004
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PORTH                            00000005
_PORTL                            00000005
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_TRISH                            00000085
_TRISL                            00000085
_USED                             00000001
_WDTE_OFF                         00003FF7
MPASM  5.51                          TEST.ASM   2-27-2018  18:10:27         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__12F683                          00000001
_mainloop                         0000002D
main                              00000028
pauseloop                         00000003
pauseusdone                       00000022
pauseush                          00000018
pauseusloop                       00000015


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    64
Program Memory Words Free:  1984


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     3 suppressed

