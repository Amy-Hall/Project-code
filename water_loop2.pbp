'****************************************************************
'*  Name    : UNTITLED.BAS                                      *
'*  Author  : [select VIEW...EDITOR OPTIONS]                    *
'*  Notice  : Copyright (c) 2018 [select VIEW...EDITOR OPTIONS] *
'*          : All Rights Reserved                               *
'*  Date    : 22/01/2018                                        *
'*  Version : 1.0                                               *
'*  Notes   : Vary the pwm between 5% and 10%                                                  *
'*          :                                                   *
'****************************************************************
define OSC 4
OSCCON = %01000000

DEFINE LCD_DREG PORTC
DEFINE LCD_DBIT 4
DEFINE LCD_RSREG PORTC
DEFINE LCD_RSBIT 0
DEFINE LCD_EREG PORTC
DEFINE LCD_EBIT 3
DEFINE LCD_BITS 4
DEFINE LCD_LINES 2
DEFINE ADC_BITS 10
DEFINE ADC_SAMPLEUS 50 ' Set sampling time in uS

define CCP1_REG PORTC
define CCP1_BIT 2

flow_ref var word
pwm_val var word
frequency var word
flow_val var word     '100 times actual flowrate
flow_decimal var word
 
ADCON1 = %00000000 ' Right-Justify result in ADRESH:ADRESL registers
ADCON2 = %10000111
TRISA = %11111111 ' Set PORTA to all input 
TRISC = %00000000

TRISC.2 = 0          ' Set PORTC.2 (CCP1) to output
CCP1CON = %00001100  ' Set CCP1 to PWM
T2CON = %00000111    ' Turn on Timer2, Prescale=16 (last bits 00=1 01=4)
PR2 = %11111111     ' Set PR2 to get 60Hz out


pwm_val=100
CCP1CON.4 = pwm_val.0   ' Store duty to registers as
CCP1CON.5 = pwm_val.1   ' a 10-bit word
CCPR1L = pwm_val >> 2


main:
    ADCON0 = %00001101
    adcin 3, flow_ref                    'flowrate*10, want from 0-1024 to between 0 and 44
    flow_ref = (flow_ref*44)/1024
    gosub get_flowrate
    gosub get_water_pwm           
    CCP1CON.4 = pwm_val.0   ' Store duty to registers as
    CCP1CON.5 = pwm_val.1   ' a 10-bit word
    CCPR1L = pwm_val >> 2     
    
    LCDOUT $FE, 1, "flow=", dec flow_val, " frq=", dec frequency
    LCDOUT $FE, $C0, "ref=", dec flow_ref, " pwm=", dec pwm_val
    goto main
end

get_flowrate:
    COUNT PORTB.5, 250, frequency     'whats min count to still be accurate....?
    frequency = frequency/1           'would be times 2 (for 500) but the /4 for clk issues
    flow_val = (frequency*120)/1380   'litres per minute times 10, (*60/6900)  
return


get_water_pwm:
    If (flow_val < flow_ref) then
        IF (pwm_val < 120) then
            if ((flow_ref-flow_val)>5) then
                pwm_val= pwm_val + ((flow_ref-flow_val)/5)
            else
                pwm_val= pwm_val + 1
            endif
        else
            pwm_val= 120
        endif
    endif
    if (flow_val > flow_ref) then
        IF (pwm_val >50) then
            if ((flow_val-flow_ref)>5) then
                pwm_val= pwm_val - ((flow_val-flow_ref)/5)
            else
                pwm_val= pwm_val - 1
            endif
        else
            pwm_val= 50
        endif 
    endif   
return
