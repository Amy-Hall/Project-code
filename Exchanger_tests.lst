MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.47, (c) 1998, 2006 microEngineering Labs, Inc. All Rights Reserved.  
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\18F2420.INC"
                      00001 ;****************************************************************
                      00002 ;*  18F2420.INC                                                 *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 06/05/06                                        *
                      00008 ;*  Version   : 2.47                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00017         LIST
                      00018         LIST p = 18F2420, r = dec, w = -311, w = -230, f = inhx32
                      00019         INCLUDE "P18F2420.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F2420 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01291         LIST
300000 F1FF           00020         __CONFIG    _CONFIG1H, _OSC_XT_1H
300002 F31F           00021         __CONFIG    _CONFIG2H, _WDT_ON_2H & _WDTPS_512_2H
300004 FDFF           00022         __CONFIG    _CONFIG3H, _PBADEN_OFF_3H
300006 FFBB           00023         __CONFIG    _CONFIG4L, _LVP_OFF_4L & _XINST_OFF_4L
                      00026         LIST
  00F00000            00027 EEPROM_START    EQU     0F00000h
  00000040            00028 BLOCK_SIZE      EQU     64
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 #define         OSC              4
                      00010 #define         LCD_DREG                 PORTC
                      00011 #define         LCD_DBIT                 4
                      00012 #define         LCD_RSREG                PORTC
                      00013 #define         LCD_RSBIT                0
                      00014 #define         LCD_EREG                 PORTC
                      00015 #define         LCD_EBIT                 3
                      00016 #define         LCD_BITS                 4
                      00017 #define         LCD_LINES                2
                      00018 #define         ADC_BITS                 10
                      00019 #define         ADC_SAMPLEUS             50 
                      00020 #define         CCP1_REG                 PORTC
                      00021 #define         CCP1_BIT                 2
                      00022 
  00000000            00023 RAM_START                       EQU     00000h
  000002FF            00024 RAM_END                         EQU     002FFh
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00025 RAM_BANKS                       EQU     00003h
  00000080            00026 BANK0_START                     EQU     00080h
  000000FF            00027 BANK0_END                       EQU     000FFh
  00000100            00028 BANK1_START                     EQU     00100h
  000001FF            00029 BANK1_END                       EQU     001FFh
  00000200            00030 BANK2_START                     EQU     00200h
  000002FF            00031 BANK2_END                       EQU     002FFh
  00000000            00032 BANKA_START                     EQU     00000h
  0000007F            00033 BANKA_END                       EQU     0007Fh
                      00034 
  00000000            00035 FLAGS                           EQU     RAM_START + 000h
  00000001            00036 R0                              EQU     RAM_START + 001h
  00000003            00037 R1                              EQU     RAM_START + 003h
  00000005            00038 R2                              EQU     RAM_START + 005h
  00000007            00039 R3                              EQU     RAM_START + 007h
  00000009            00040 R4                              EQU     RAM_START + 009h
  0000000B            00041 R5                              EQU     RAM_START + 00Bh
  0000000D            00042 R6                              EQU     RAM_START + 00Dh
  0000000F            00043 R7                              EQU     RAM_START + 00Fh
  00000011            00044 R8                              EQU     RAM_START + 011h
  00000013            00045 T1                              EQU     RAM_START + 013h
  00000015            00046 T2                              EQU     RAM_START + 015h
  00000017            00047 T3                              EQU     RAM_START + 017h
  00000019            00048 GOP                             EQU     RAM_START + 019h
  0000001A            00049 RM1                             EQU     RAM_START + 01Ah
  0000001B            00050 RM2                             EQU     RAM_START + 01Bh
  0000001C            00051 RR1                             EQU     RAM_START + 01Ch
  0000001D            00052 RR2                             EQU     RAM_START + 01Dh
  0000001E            00053 RS1                             EQU     RAM_START + 01Eh
  0000001F            00054 RS2                             EQU     RAM_START + 01Fh
  00000020            00055 _dT_1                           EQU     RAM_START + 020h
  00000022            00056 _dT_2                           EQU     RAM_START + 022h
  00000024            00057 _flow_decimal                   EQU     RAM_START + 024h
  00000026            00058 _flow_pwm_val                   EQU     RAM_START + 026h
  00000028            00059 _flow_ref                       EQU     RAM_START + 028h
  0000002A            00060 _flow_val                       EQU     RAM_START + 02Ah
  0000002C            00061 _frequency                      EQU     RAM_START + 02Ch
  0000002E            00062 _i                              EQU     RAM_START + 02Eh
  00000030            00063 _n                              EQU     RAM_START + 030h
  00000032            00064 _n1                             EQU     RAM_START + 032h
  00000034            00065 _n2                             EQU     RAM_START + 034h
  00000036            00066 _pwm_val                        EQU     RAM_START + 036h
  00000038            00067 _t1adval                        EQU     RAM_START + 038h
  0000003A            00068 _t1res_lower                    EQU     RAM_START + 03Ah
  0000003C            00069 _t1res_upper                    EQU     RAM_START + 03Ch
  0000003E            00070 _t1resistance                   EQU     RAM_START + 03Eh
  00000040            00071 _t1temp_decimal                 EQU     RAM_START + 040h
  00000042            00072 _t1temp_integer                 EQU     RAM_START + 042h
  00000044            00073 _t1temp_lower                   EQU     RAM_START + 044h
  00000046            00074 _t1temp_ref                     EQU     RAM_START + 046h
  00000048            00075 _t1temp_upper                   EQU     RAM_START + 048h
  0000004A            00076 _t1temp_val                     EQU     RAM_START + 04Ah
  0000004C            00077 _t2adval                        EQU     RAM_START + 04Ch
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000004E            00078 _t2res_lower                    EQU     RAM_START + 04Eh
  00000050            00079 _t2res_upper                    EQU     RAM_START + 050h
  00000052            00080 _t2resistance                   EQU     RAM_START + 052h
  00000054            00081 _t2temp_decimal                 EQU     RAM_START + 054h
  00000056            00082 _t2temp_integer                 EQU     RAM_START + 056h
  00000058            00083 _t2temp_lower                   EQU     RAM_START + 058h
  0000005A            00084 _t2temp_ref                     EQU     RAM_START + 05Ah
  0000005C            00085 _t2temp_upper                   EQU     RAM_START + 05Ch
  0000005E            00086 _t2temp_val                     EQU     RAM_START + 05Eh
  00000060            00087 _temp_pwm_val                   EQU     RAM_START + 060h
  00000062            00088 _throttle                       EQU     RAM_START + 062h
  00000064            00089 _x                              EQU     RAM_START + 064h
  00000066            00090 _resistor_ref                   EQU     RAM_START + 066h
  0000007E            00091 _temp_ref                       EQU     RAM_START + 07Eh
  00000F81            00092 _PORTL                          EQU      PORTB
  00000F82            00093 _PORTH                          EQU      PORTC
  00000F93            00094 _TRISL                          EQU      TRISB
  00000F94            00095 _TRISH                          EQU      TRISC
                      00096 #define _PORTB??5                PORTB, 005h
                      00097 
                      00098 ; EEPROM data.
                      00099 
                      00100 
                      00101         INCLUDE "EXCHAN~1.MAC"
                      00001 
                      00319         LIST
                      00102         INCLUDE "C:\PBP\PBPPIC18.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC18.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 06/05/06                                          *
                      00008 ;*  Version   : 2.47                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00074   LIST
                      00075 ; Oscillator is 4MHz
                      01147   LIST
000000                01148     ORG RESET_ORG               ; Reset vector at 0
                      01152   LIST
000000 6A00           01153         clrf    FLAGS           ; Clear all flags on reset
                      01157   LIST
000002 EF91 F001      01158         goto    INIT            ; Finish initialization
                      01407   LIST
000006 C01E FFEA      01408 COUNTT  movff   RS1, FSR0H      ; Point to port
00000A C01C FFE9      01409         movff   RR1, FSR0L
00000E 501A           01410         movf    RM1, W          ; Get bit mask
000010 ECFA F000      01411         call    INPUTT          ; Set pin to input
000014 C01C FFE9      01412         movff   RR1, FSR0L      ; Point back to port
000018 0E32           01413         movlw   low (COUNT_DELAY)       ; Calculate count time based on OSC
00001A 6E07           01414         movwf   R3
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001C 0E00           01415         movlw   (COUNT_DELAY) >> 8
00001E 6E08           01416         movwf   R3 + 1
000020 EC69 F001      01417         call    MUL             ; Time is R0 + 1, R0, R2 + 1, R2 (hi to lo)
000024 2A02           01418         incf    R0 + 1, F       ; Bump up highs for dec
000026 2A01           01419         incf    R0, F
000028 2A06           01420         incf    R2 + 1, F
00002A 6A03           01421         clrf    R1              ; Zero counter
00002C 6A04           01422         clrf    R1 + 1
00002E 50EF           01423         movf    INDF0, W        ; Read pin
000030 141A           01424         andwf   RM1, W          ; Isolate it
000032 6E07           01425         movwf   R3              ; Save starting state as last
                      01426 countloop CLRWDT?NOP            ; 1 (20) Keep Watchdog happy
                          M     ifndef NO_CLRWDT
000034 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000036 50EF           01427         movf    INDF0, W        ; 1 Read pin
000038 141A           01428         andwf   RM1, W          ; 1 Isolate it
00003A 181A           01429         xorwf   RM1, W          ; 1 Only count low to high transitions
00003C 1207           01430         iorwf   R3, F           ; 1 Compare with last time
00003E B4D8           01431         btfsc   STATUS, Z       ; 1 / 2
000040 2A03           01432         incf    R1, F           ; 1 / 0 Count pulse
000042 B4D8           01433         btfsc   STATUS, Z       ; 1 / 2
000044 2A04           01434         incf    R1 + 1, F       ; 1 / 0
000046 181A           01435         xorwf   RM1, W          ; 1 Flip current state back
000048 6E07           01436         movwf   R3              ; 1 Save as new last state
00004A 0605           01437         decf    R2, F           ; 1 Count time
00004C B4D8           01438         btfsc   STATUS, Z       ; 1 / 2
00004E 0606           01439         decf    R2 + 1, F       ; 1 / 0
000050 B4D8           01440         btfsc   STATUS, Z       ; 1 / 2
000052 0601           01441         decf    R0, F           ; 1 / 0
000054 B4D8           01442         btfsc   STATUS, Z       ; 1 / 2
000056 2E02           01443         decfsz  R0 + 1, F       ; 1 / 2
000058 D7ED           01444         bra     countloop       ; 2 / 0
00005A 5003           01445         movf    R1, W           ; Result to W
00005C EF8E F001      01446         goto    DUNN
                      01916   LIST
000060 6E0A           01917 HPWM    movwf   R4 + 1          ; Save channel
                      01918 
                      01919         ; PS = (FOSC / 1024) / freq
000062 0E42           01920         movlw   low ((OSC * 1000000) / 1024)
000064 6E01           01921         movwf   R0
000066 0E0F           01922         movlw   ((OSC * 1000000) / 1024) >> 8
000068 6E02           01923         movwf   R0 + 1
00006A EC51 F001      01924         call    DIV             ; / freq (returns result in W and Z)
00006E B4D8           01925         btfsc   STATUS, Z
000070 90CA           01926         bcf     T2CON, T2CKPS0
000072 A4D8           01927         btfss   STATUS, Z
000074 80CA           01928         bsf     T2CON, T2CKPS0
000076 0FFC           01929         addlw   -4              ; Check for >= 4
000078 A0D8           01930         btfss   STATUS, C
00007A 92CA           01931         bcf     T2CON, T2CKPS1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007C B0D8           01932         btfsc   STATUS, C
00007E 82CA           01933         bsf     T2CON, T2CKPS1
                      01934 
                      01935         ; PR2 = ((FOSC / 4 / PS) / freq) - 1
000080 0E40           01936         movlw   low ((OSC * 1000000) / 4)
000082 6E01           01937         movwf   R0
000084 0E42           01938         movlw   low (((OSC * 1000000) / 4) >> 8)
000086 6E02           01939         movwf   R0 + 1
000088 0E0F           01940         movlw   ((OSC * 1000000) / 4) >> 16
00008A 6E05           01941         movwf   R2
00008C 6A06           01942         clrf    R2 + 1
00008E B0CA           01943         btfsc   T2CON, T2CKPS0  ; Shift for divide by PS
000090 D828           01944         rcall   hpwm24          ; / 4 (PS = 4 or 16)
000092 B2CA           01945         btfsc   T2CON, T2CKPS1
000094 D826           01946         rcall   hpwm24          ; / 4 (PS = 16)
000096 EC53 F001      01947         call    DIV32DIV        ; / freq
00009A 0401           01948         decf    R0, W           ; - 1
00009C 6ECB           01949         movwf   PR2             ; Save PR2
                      01950 
                      01951         ; CCP = ((PR2 + 1) * 4) */ duty cycle (10 bit result)
                      01952         ; (Multiply by 4 is not done. Result is shifted right 2 positions.)
00009E 5001           01953         movf    R0, W           ; R0 = PR2 + 1
0000A0 6E03           01954         movwf   R1              ; Set up for multiply
0000A2 5002           01955         movf    R0 + 1, W
0000A4 6E04           01956         movwf   R1 + 1
0000A6 5009           01957         movf    R4, W           ; R4 = duty cycle
0000A8 6E07           01958         movwf   R3
0000AA 6E08           01959         movwf   R3 + 1          ; Set high byte for max duty cycle (always on)
0000AC 3C09           01960         incfsz  R4, W           ; Check for max duty cycle
0000AE 6A08           01961         clrf    R3 + 1          ; Not at max - zero high byte
0000B0 EC69 F001      01962         call    MUL
0000B4 5006           01963         movf    R2 + 1, W
                      01964       ifdef CCP2CON
0000B6 2E0A           01965         decfsz  R4 + 1, F       ; Skip if channel 1
0000B8 D00B           01966         bra     hpwm2           ; Set channel 2
                      01967       endif
0000BA 6EBE           01968         movwf   CCPR1L          ; Set top 8 CCP bits
0000BC 0E0C           01969         movlw   0ch             ; Set PWM mode and clear bottom 2 CCP bits
0000BE 6EBD           01970         movwf   CCP1CON
0000C0 BE05           01971         btfsc   R2, 7           ; Set bottom 2 CCP bits
0000C2 8ABD           01972         bsf     CCP1CON, 5
0000C4 BC05           01973         btfsc   R2, 6
0000C6 88BD           01974         bsf     CCP1CON, 4
                      01975 
0000C8 9494           01976         bcf     (CCP1_REG) + 12h, CCP1_BIT      ; Set CCP1 to output
                      01977 
0000CA 84CA           01978 hpwmdone bsf    T2CON, TMR2ON   ; Start the timer
0000CC EF8E F001      01979         goto    DUNN            ; All set
                      01980 
                      01981       ifdef CCP2CON
0000D0 6EBB           01982 hpwm2   movwf   CCPR2L          ; Set top 8 CCP bits
0000D2 0E0C           01983         movlw   0ch             ; Set PWM mode and clear bottom 2 CCP bits
0000D4 6EBA           01984         movwf   CCP2CON
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000D6 BE05           01985         btfsc   R2, 7           ; Set bottom 2 CCP bits
0000D8 8ABA           01986         bsf     CCP2CON, 5
0000DA BC05           01987         btfsc   R2, 6
0000DC 88BA           01988         bsf     CCP2CON, 4
                      01989 
0000DE 9294           01990         bcf     (CCP2_REG) + 12h, CCP2_BIT      ; Set CCP2 to output
0000E0 D7F4           01991         bra     hpwmdone
                      01992       endif
                      01993 
0000E2 D800           01994 hpwm24  rcall   hpwm242         ; Divide 24 bits by 4
0000E4 90D8           01995 hpwm242 bcf     STATUS, C       ; Divide 24 bits by 2
0000E6 3205           01996         rrcf    R2, F
0000E8 3202           01997         rrcf    R0 + 1, F
0000EA 3201           01998         rrcf    R0, F
0000EC 0012           01999         return
                      02911   LIST
0000EE 50E9           02912 LCDOUTJ movf    FSR0L, W        ; Jumpman entry
                      02918   LIST
0000F0 6E08           02919 LCDOUT  movwf   R3 + 1          ; Save char
                      02920 
0000F2 9682           02921         bcf     LCD_EREG, LCD_EBIT      ; Set E low
0000F4 9082           02922         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
0000F6 9082           02923         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      02924 
0000F8 9694           02925         bcf     (LCD_EREG) + 12h, LCD_EBIT      ; Set E to output
0000FA 9094           02926         bcf     (LCD_RSREG) + 12h, LCD_RSBIT    ; Set RS to output
0000FC 9094           02927         bcf     (LCD_RWREG) + 12h, LCD_RWBIT    ; Set RW to output
                      02928     if (LCD_BITS == 8)
                      02929         clrf    (LCD_DREG) + 12h        ; Set port to all output
                      02930     else
                      02931       if (LCD_DBIT == 0)
                      02932         movlw   0f0h
                      02933       else
0000FE 0E0F           02934         movlw   0fh
                      02935       endif
000100 1694           02936         andwf   (LCD_DREG) + 12h, F     ; Set proper half of port to output
000102 5008           02937         movf    R3 + 1, W       ; Get back char
                      02938     endif
                      02939 
000104 B200           02940         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
000106 D022           02941         bra     lcdout1         ; Yes
                      02942 
000108 0E3A           02943         movlw   high 15000      ; Wait at least 15ms
00010A 6E02           02944         movwf   R0 + 1
00010C 0E98           02945         movlw   low 15000
00010E EC18 F001      02946         call    PAUSEUSL
                      02947 
000112 0E33           02948         movlw   33h             ; Init lcd
000114 6E07           02949         movwf   R3              ; Save char
000116 D82F           02950         rcall   lcdloop         ; Send init
                      02951 
000118 0E13           02952         movlw   high 5000       ; Wait at least 5ms
00011A 6E02           02953         movwf   R0 + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00011C 0E88           02954         movlw   low 5000
00011E EC18 F001      02955         call    PAUSEUSL
                      02956 
000122 D829           02957         rcall   lcdloop         ; Send init again
                      02958 
000124 0E64           02959         movlw   100             ; Wait at least 100us
000126 EC17 F001      02960         call    PAUSEUS
                      02961 
00012A D825           02962         rcall   lcdloop         ; Send init more time
                      02963 
00012C 0E64           02964         movlw   100             ; Wait at least 100us
00012E EC17 F001      02965         call    PAUSEUS
                      02966 
                      02967     if (LCD_BITS != 8)
000132 0E22           02968         movlw   22h             ; Set 4-bit mode
000134 6E07           02969         movwf   R3              ; Save character
000136 D81F           02970         rcall   lcdloop         ; Set interface to 4-bit mode
                      02971     endif
                      02972 
                      02973     if (LCD_BITS == 8)
                      02974       if (LCD_LINES == 1)
                      02975         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      02976       else
                      02977         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      02978       endif
                      02979     else
                      02980       if (LCD_LINES == 1)
                      02981         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      02982       else
000138 0E28           02983         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      02984       endif
                      02985     endif
00013A D807           02986         rcall   lcdoutcom       ; Send function set
                      02987 
00013C 0E0C           02988         movlw   0ch             ; Display on, no cursor, no blink
00013E D805           02989         rcall   lcdoutcom
                      02990 
000140 0E06           02991         movlw   06h             ; Lcd entry mode set, increment, no shift
000142 D803           02992         rcall   lcdoutcom
                      02993 
000144 8200           02994         bsf     LCDINITFLAG     ; Set to initialized
                      02995 
000146 5008           02996         movf    R3 + 1, W       ; Get saved char back
000148 D001           02997         bra     lcdout1
                      02998 
00014A 8000           02999 lcdoutcom bsf   LCDCDFLAG       ; Set command
                      03000 
00014C 6E07           03001 lcdout1 movwf   R3              ; Save char if 4 bit
00014E A000           03002         btfss   LCDCDFLAG       ; Command this time?
000150 D00B           03003         bra     lcdchkcd        ; No
                      03004 
000152 9082           03005         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
000154 0803           03006         sublw   3
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000156 E30E           03007         bnc     lcdsend         ; Short delay
                      03008 
000158 D80D           03009         rcall   lcdsend         ; Long delay
00015A 0E07           03010         movlw   high LCD_COMMANDUS      ; Wait for command to complete
00015C 6E02           03011         movwf   R0 + 1
00015E 0ED0           03012         movlw   low LCD_COMMANDUS
000160 EC18 F001      03013         call    PAUSEUSL
000164 80D8           03014         bsf     STATUS, C       ; Set no timeout for Serout2mod
000166 0012           03015         return
                      03016 
000168 8000           03017 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
00016A 08FE           03018         sublw   0feh            ; Command next time? (char still in W)
00016C B4D8           03019         btfsc   STATUS, Z
00016E EF8E F001      03020         goto    DUNN            ; Yes - nothing to do this time (C set)
                      03021 
000172 8082           03022         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
                      03023 
000174                03024 lcdsend
                      03025     if (LCD_BITS == 8)
                      03026 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03027         movf    R3, W           ; Get char back
                      03028         movwf   LCD_DREG        ; Write char to the port
                      03029       if (OSC > 16)
                      03030         nop                     ; Minimum 1us enable time
                      03031       endif
                      03032       if (OSC > 20)
                      03033         bra     $ + 2
                      03034       endif
                      03035       if (OSC > 25)
                      03036         bra     $ + 2
                      03037       endif
                      03038       if (OSC > 33)
                      03039         nop
                      03040       endif
                      03041       if (OSC > 40)
                      03042         bra     $ + 2
                      03043       endif
                      03044         bcf     LCDCDFLAG       ; Indicate data next time
                      03045         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03046     else
                      03047 
                      03048       if (LCD_DBIT == 0)
                      03049         swapf   R3, F           ; Swap top and bottom nibbles
                      03050       endif
                      03051 
000174 A000           03052         btfss   LCDCDFLAG       ; First time through only
000176 9000           03053 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03054 
000178 8682           03055         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03056 
                      03057       if (LCD_DBIT == 0)
                      03058         movlw   0f0h            ; Clear lcd data port
                      03059       else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00017A 0E0F           03060         movlw   0fh             ; Clear lcd data port
                      03061       endif
00017C 1682           03062         andwf   LCD_DREG, F
                      03063 
00017E 5007           03064         movf    R3, W           ; Isolate proper nibble of char
                      03065       if (LCD_DBIT == 0)
                      03066         andlw   0fh
                      03067       else
000180 0BF0           03068         andlw   0f0h
                      03069       endif
000182 1282           03070         iorwf   LCD_DREG, F     ; Write char to port
                      03071 
                      03072       if (OSC > 20)
                      03073         nop                     ; Minimum 1us enable time
                      03074       endif
                      03075       if (OSC > 25)
                      03076         bra     $ + 2
                      03077       endif
                      03078       if (OSC > 33)
                      03079         nop
                      03080       endif
                      03081       if (OSC > 40)
                      03082         bra     $ + 2
                      03083       endif
                      03084 
000184 9682           03085         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
000186 3A07           03086         swapf   R3, F           ; Get to other nibble
                      03087 
                      03088       if (OSC > 20)
                      03089         nop                     ; Minimum 1us not-enabled time
                      03090       endif
                      03091       if (OSC > 25)
                      03092         bra     $ + 2
                      03093       endif
                      03094       if (OSC > 33)
                      03095         nop
                      03096       endif
                      03097       if (OSC > 40)
                      03098         bra     $ + 2
                      03099       endif
                      03100 
000188 B000           03101         btfsc   LCDCDFLAG
00018A D7F5           03102         bra     lcdloop         ; Send lower 4 to lcd
                      03103     endif
                      03104 
00018C 0E32           03105         movlw   LCD_DATAUS      ; Wait for data operation to complete
00018E EC17 F001      03106         call    PAUSEUS
000192 80D8           03107         bsf     STATUS, C       ; Set no timeout for Serout2mod
000194 EF8E F001      03108         goto    DUNN
                      05040   LIST
000198 9E19           05041 SEROUT2DEC bcf  GOP, 7          ; Blanking off
00019A 500A           05042         movf    R4 + 1, W       ; 0 digits?
00019C B4D8           05043         btfsc   STATUS, Z
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00019E 8E19           05044         bsf     GOP, 7          ; Yes, blanking on
0001A0 0E05           05045         movlw   5               ; 5 digits max to do
0001A2 6E09           05046         movwf   R4
0001A4 0E27           05047         movlw   high 10000      ; Find 10,000s
0001A6 6E04           05048         movwf   R1 + 1
0001A8 0E10           05049         movlw   low 10000
0001AA D80C           05050         rcall   serout2ddig     ; Do the work
                      05051       ifdef SEROUT2TO_USED
                      05052         btfss   STATUS, C       ; Timed out?
                      05053         return                  ; Yes
                      05054       endif
0001AC 0E03           05055         movlw   high 1000       ; Find 1,000s
0001AE 6E04           05056         movwf   R1 + 1
0001B0 0EE8           05057         movlw   low 1000
0001B2 D808           05058         rcall   serout2ddig     ; Do the work
                      05059       ifdef SEROUT2TO_USED
                      05060         btfss   STATUS, C       ; Timed out?
                      05061         return                  ; Yes
                      05062       endif
0001B4 6A04           05063         clrf    R1 + 1          ; Find 100s
0001B6 0E64           05064         movlw   100
0001B8 D805           05065         rcall   serout2ddig     ; Do the work
                      05066       ifdef SEROUT2TO_USED
                      05067         btfss   STATUS, C       ; Timed out?
                      05068         return                  ; Yes
                      05069       endif
0001BA 6A04           05070         clrf    R1 + 1          ; Find 10s
0001BC 0E0A           05071         movlw   10
0001BE D802           05072         rcall   serout2ddig     ; Do the work
                      05073       ifdef SEROUT2TO_USED
                      05074         btfss   STATUS, C       ; Timed out?
                      05075         return                  ; Yes
                      05076       endif
0001C0 5005           05077         movf    R2, W           ; Get the 1s
0001C2 D008           05078         bra     SEROUT2SEND     ; Send the 1s and exit
                      05079 
0001C4 6E03           05080 serout2ddig movwf R1            ; Save last piece
0001C6 5006           05081         movf    R2 + 1, W       ; Move remainder to dividend
0001C8 6E02           05082         movwf   R0 + 1
0001CA 5005           05083         movf    R2, W
0001CC 6E01           05084         movwf   R0
0001CE EC51 F001      05085         call    DIV             ; Do the math
0001D2 5001           05086         movf    R0, W           ; Get the result
                      05087 ;       bra     SEROUT2SEND     ; Fall through
                      05094   LIST
0001D4 6E01           05095 SEROUT2SEND movwf R0            ; Save char for a moment
0001D6 4E09           05096         dcfsnz  R4, F           ; Bump down count while we're here
0001D8 9E19           05097         bcf     GOP, 7
0001DA 500A           05098         movf    R4 + 1, W       ; Get number of digits to send
0001DC E003           05099         bz      serout2send1    ; If zero digits skip count compare
0001DE 5C09           05100         subwf   R4, W           ; Send if within count
0001E0 B0D8           05101         btfsc   STATUS, C
0001E2 0012           05102         return
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001E4 5001           05103 serout2send1 movf  R0, W        ; Get char back
                      05104       ifdef SEROUT2TO_USED
                      05105         bsf     STATUS, C       ; Set carry for no timeout in case of blanking
                      05106       endif
0001E6 A4D8           05107         btfss   STATUS, Z       ; If zero, goto blank check
0001E8 9E19           05108         bcf     GOP, 7          ; Not zero so clear blank
0001EA BE19           05109         btfsc   GOP, 7          ; If blanking on, don't send
0001EC 0012           05110         return
0001EE 0F30           05111         addlw   '0'             ; Add ASCII offset
0001F0 EF88 F001      05112         goto    JUMPMAN         ; Send it
                      05747   LIST
0001F4 88E9           05748 INPUTT  bsf     FSR0L, 4        ; Point to TRIS register
0001F6 2AE9           05749         incf    FSR0L, F
0001F8 12EC           05750         iorwf   PREINC0, F      ; Set bit to input
0001FA EF8E F001      05751         goto    DUNN            ; Done
                      05930   LIST
0001FE                05931 ADCIN
                      05932       ifdef ADCON2
0001FE 36E8           05933         rlcf    WREG, F         ; Move channel into proper position
000200 36E8           05934         rlcf    WREG, F
000202 0B3C           05935         andlw   03ch            ; Mask channel
000204 0901           05936         iorlw   1               ; Turn on ADC
000206 12C2           05937         iorwf   ADCON0, F       ; Set the one bits
000208 09C0           05938         iorlw   0c0h
00020A 16C2           05939         andwf   ADCON0, F       ; Clear the zero bits
00020C 50C0           05940         movf    ADCON2, W       ; Set up clock source
00020E 0BF8           05941         andlw   0f8h
000210 0903           05942         iorlw   (ADC_CLOCK) & 7
000212 6EC0           05943         movwf   ADCON2
                      05944       else
                      05945         rlcf    WREG, F         ; Move channel into proper position
                      05946         rlcf    WREG, F
                      05947         rlcf    WREG, F
                      05948         andlw   038h            ; Mask channel
                      05949         iorlw   (((ADC_CLOCK) & 3) << 6) | 1    ; Set up clock source and turn on ADC
                      05950         movwf   ADCON0
                      05951       endif
                      05952       if ((ADC_SAMPLEUS) != 0)
000214 0E00           05953         movlw   (ADC_SAMPLEUS) >> 8     ; Get sample time
000216 6E02           05954         movwf   R0 + 1
000218 0E32           05955         movlw   low (ADC_SAMPLEUS)
00021A EC18 F001      05956         call    PAUSEUSL        ; Wait sample time
                      05957       endif
00021E 82C2           05958         bsf     ADCON0, GO_DONE ; Start conversion
000220 B2C2           05959 adcinloop btfsc ADCON0, GO_DONE ; Wait for conversion to complete
000222 D7FE           05960         bra     adcinloop
                      05961       if ((ADC_BITS) <= 8)
                      05962         clrf    R0 + 1
                      05963         movf    ADRESH, W       ; Get 8-bit result
                      05964       else
000224 50C4           05965         movf    ADRESH, W       ; Get 16-bit result
000226 6E02           05966         movwf   R0 + 1
000228 50C3           05967         movf    ADRESL, W
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05968       endif
00022A EF8E F001      05969         goto    DUNN
                      06284   LIST
00022E 6A02           06285 PAUSEUS clrf    R0 + 1          ; 1
000230 0FE8           06286 PAUSEUSL addlw  -24             ; 1 Subtract overhead
000232 6E01           06287         movwf   R0              ; 1
000234 1E02           06288         comf    R0 + 1, F       ; 1
000236 0EFC           06289         movlw   -4              ; 1
000238 A0D8           06290         btfss   STATUS, C       ; 1 / 2
00023A D003           06291         bra     pauseush        ; 2 / 0
00023C 2601           06292 pauseusloop addwf R0, F         ; 1
00023E B0D8           06293         btfsc   STATUS, C       ; 1 / 2
000240 D7FD           06294         bra     pauseusloop     ; 2 / 0
000242 2601           06295 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06296         CLRWDT?NOP              ; 1 Keep Watchdog clear
                          M     ifndef NO_CLRWDT
000244 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000246 3E02           06297         incfsz  R0 + 1, F       ; 1 / 2
000248 D7F9           06298         bra     pauseusloop     ; 2 / 0
00024A B001           06299         btfsc   R0, 0           ; 1 / 2
00024C D000           06300         bra     $ + 2           ; 2 / 0 Burn an extra cycle
00024E A201           06301         btfss   R0, 1           ; 1 / 2
000250 D002           06302         bra     pauseusdone     ; 2 / 0
000252 0000           06303         nop                     ; 1
000254 D000           06304         bra     $ + 2           ; 2 Burn an extra 2 cycles
000256 0012           06305 pauseusdone return              ; 2 + 3 (call + setup)
                      07120   LIST
000258 6E03           07121 CMPGE   movwf   R1
00025A 0E03           07122         movlw   3               ; Mask for = >
00025C D006           07123         bra     CMP
                      07153   LIST
00025E 6E03           07154 CMPGT   movwf   R1
000260 0E01           07155         movlw   1               ; Mask for >
000262 D003           07156         bra     CMP
                      07219   LIST
000264 6E03           07220 CMPLT   movwf   R1
000266 0E04           07221         movlw   4               ; Mask for <
000268 D000           07222         bra     CMP
                      07271   LIST
00026A 6E09           07272 CMP     movwf   R4              ; Save compare state
00026C 5004           07273         movf    R1 + 1, W       ; Flags = MSB(R0) - MSB(R1)
00026E 5C02           07274         subwf   R0 + 1, W
000270 E102           07275         bnz     cmpnoteq        ; If unequal then done
000272 5003           07276         movf    R1, W           ; Flags = LSB(R0) - LSB(R1)
000274 5C01           07277         subwf   R0, W
000276 0E04           07278 cmpnoteq movlw  4               ; W = 4 if R0 < R1
000278 B0D8           07279         btfsc   STATUS, C
00027A 0E01           07280         movlw   1               ; W = 1 if R0 > R1
00027C B4D8           07281         btfsc   STATUS, Z
00027E 0E02           07282         movlw   2               ; W = 2 if R0 == R1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000280 1409           07283         andwf   R4, W           ; Mask for compare state
000282 A4D8           07284         btfss   STATUS, Z
000284 0EFF           07285         movlw   -1
000286 EF8E F001      07286         goto    DUNN
                      07306   LIST
00028A 66E8           07307 LAND    tstfsz  WREG
00028C 0EFF           07308         movlw   -1
00028E 1401           07309         andwf   R0, W
000290 A4D8           07310         btfss   STATUS, Z
000292 0EFF           07311         movlw   -1
000294 EF8E F001      07312         goto    DUNN
                      07328   LIST
000298 1001           07329 LOR     iorwf   R0, W
00029A A4D8           07330         btfss   STATUS, Z
00029C 0EFF           07331         movlw   -1
00029E EF8E F001      07332         goto    DUNN
                      07496   LIST
0002A2 6A06           07497 DIV     clrf    R2 + 1
0002A4 6A05           07498         clrf    R2
                      07499 
0002A6 0E10           07500 DIV32DIV movlw   16
0002A8 6E07           07501         movwf   R3
                      07502 
0002AA 3402           07503 divloop rlcf    R0 + 1, W
0002AC 3605           07504         rlcf    R2, F
0002AE 3606           07505         rlcf    R2 + 1, F
0002B0 5003           07506         movf    R1, W
0002B2 5E05           07507         subwf   R2, F
0002B4 5004           07508         movf    R1 + 1, W
0002B6 5A06           07509         subwfb  R2 + 1, F
                      07510 
0002B8 E205           07511         bc      divok
0002BA 5003           07512         movf    R1, W
0002BC 2605           07513         addwf   R2, F
0002BE 5004           07514         movf    R1 + 1, W
0002C0 2206           07515         addwfc  R2 + 1, F
                      07516 
0002C2 90D8           07517         bcf     STATUS, C
                      07518 
0002C4 3601           07519 divok   rlcf    R0, F
0002C6 3602           07520         rlcf    R0 + 1, F
                      07521 
0002C8 2E07           07522         decfsz  R3, F
0002CA D7EF           07523         bra     divloop
0002CC 5001           07524         movf    R0, W           ; Get low byte to W
0002CE EF8E F001      07525         goto    DUNN
                      07542   LIST
0002D2 5003           07543 MUL     movf    R1, W
0002D4 0207           07544         mulwf   R3              ; R1 * R3 = PRODHL
                      07545 
0002D6 CFF4 F006      07546         movff   PRODH, R2 + 1
0002DA CFF3 F005      07547         movff   PRODL, R2
                      07548 
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002DE 5004           07549         movf    R1 + 1, W
0002E0 0208           07550         mulwf   R3 + 1          ; R1 + 1 * R3 + 1 = PRODHL
                      07551 
0002E2 CFF4 F002      07552         movff   PRODH, R0 + 1
0002E6 CFF3 F001      07553         movff   PRODL, R0
                      07554 
0002EA 5003           07555         movf    R1, W
0002EC 0208           07556         mulwf   R3 + 1          ; R1 * R3 + 1 = PRODHL
                      07557 
0002EE 50F3           07558         movf    PRODL, W        ; Add cross products
0002F0 2606           07559         addwf   R2 + 1, F
0002F2 50F4           07560         movf    PRODH, W
0002F4 2201           07561         addwfc  R0, F
0002F6 6AE8           07562         clrf    WREG
0002F8 2202           07563         addwfc  R0 + 1, F
                      07564 
0002FA 5004           07565         movf    R1 + 1, W
0002FC 0207           07566         mulwf   R3              ; R1 + 1 * R3 = PRODHL
                      07567 
0002FE 50F3           07568         movf    PRODL, W        ; Add cross products
000300 2606           07569         addwf   R2 + 1, F
000302 50F4           07570         movf    PRODH, W
000304 2201           07571         addwfc  R0, F
000306 6AE8           07572         clrf    WREG
000308 2202           07573         addwfc  R0 + 1, F
                      07574 
00030A 5005           07575         movf    R2, W           ; Get low byte to W
00030C EF8E F001      07576         goto    DUNN
                      07627   LIST
000310 6EE9           07628 JUMPMAN movwf   FSR0L
000312 6AFB           07629         clrf    PCLATU
000314 5012           07630         movf    R8 + 1, W
000316 6EFA           07631         movwf   PCLATH
000318 5011           07632         movf    R8, W
00031A 6EF9           07633         movwf   PCL
                      07647   LIST
00031C 0100           07648 DUNN    movlb   0               ; 1 Reset banks to 0
                      07649 DUNN3   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
00031E 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000320 0012           07650 DUNNRET return                  ; 2 Done
                      07663   LIST
000322                07664 INIT
                      07708   LIST
000322                07709 main
                      00103 
                      00104         MOVE?CB 040h, OSCCON
                          M         CHK?RP  OSCCON
                          M     if (((OSCCON) > BANKA_END) & ((OSCCON) < (0f01h + BANKA_END)))
                          M       if (((OSCCON) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (OSCCON)
                          M PREV_BANK = high (OSCCON)
                          M       endif
                          M     endif
                          M     if (low (040h) == 0)
                          M         clrf    OSCCON
                          M     else
000322 0E40               M         movlw   low (040h)
000324 6ED3               M         movwf   OSCCON
                          M     endif
                      00105         MOVE?CB 0FFh, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) > BANKA_END) & ((TRISA) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISA
                          M     else
000326 0EFF               M         movlw   low (0FFh)
000328 6E92               M         movwf   TRISA
                          M     endif
                      00106         MOVE?CB 000h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) > BANKA_END) & ((TRISC) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00032A 6A94               M         clrf    TRISC
                          M     else
                          M         movlw   low (000h)
                          M         movwf   TRISC
                          M     endif
                      00107         MOVE?CB 000h, ADCON1
                          M         CHK?RP  ADCON1
                          M     if (((ADCON1) > BANKA_END) & ((ADCON1) < (0f01h + BANKA_END)))
                          M       if (((ADCON1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON1)
                          M PREV_BANK = high (ADCON1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00032C 6AC1               M         clrf    ADCON1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   ADCON1
                          M     endif
                      00108         MOVE?CB 087h, ADCON2
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  ADCON2
                          M     if (((ADCON2) > BANKA_END) & ((ADCON2) < (0f01h + BANKA_END)))
                          M       if (((ADCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON2)
                          M PREV_BANK = high (ADCON2)
                          M       endif
                          M     endif
                          M     if (low (087h) == 0)
                          M         clrf    ADCON2
                          M     else
00032E 0E87               M         movlw   low (087h)
000330 6EC0               M         movwf   ADCON2
                          M     endif
                      00109         MOVE?CB 00Ch, CCP1CON
                          M         CHK?RP  CCP1CON
                          M     if (((CCP1CON) > BANKA_END) & ((CCP1CON) < (0f01h + BANKA_END)))
                          M       if (((CCP1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (CCP1CON)
                          M PREV_BANK = high (CCP1CON)
                          M       endif
                          M     endif
                          M     if (low (00Ch) == 0)
                          M         clrf    CCP1CON
                          M     else
000332 0E0C               M         movlw   low (00Ch)
000334 6EBD               M         movwf   CCP1CON
                          M     endif
                      00110         MOVE?CB 007h, T2CON
                          M         CHK?RP  T2CON
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
                          M     if (low (007h) == 0)
                          M         clrf    T2CON
                          M     else
000336 0E07               M         movlw   low (007h)
000338 6ECA               M         movwf   T2CON
                          M     endif
                      00111         MOVE?CB 0FFh, PR2
                          M         CHK?RP  PR2
                          M     if (((PR2)   > BANKA_END) & ((PR2)   < (0f01h + BANKA_END)))
                          M       if (((PR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PR2)
                          M PREV_BANK = high (PR2)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    PR2
                          M     else
00033A 0EFF               M         movlw   low (0FFh)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00033C 6ECB               M         movwf   PR2
                          M     endif
                      00112         MOVE?CW 064h, _dT_1
                          M         CHK?RP  _dT_1
                          M     if (((_dT_1) > BANKA_END) & ((_dT_1) < (0f01h + BANKA_END)))
                          M       if (((_dT_1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_1)
                          M PREV_BANK = high (_dT_1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (064h)
                          M         movwf   _dT_1
                          M         movlw   high (064h)
                          M         movwf   (_dT_1) + 1
                          M     else
                          M       if (low (064h) == 0)
                          M         clrf    _dT_1
                          M       else
00033E 0E64               M         movlw   low (064h)
000340 6E20               M         movwf   _dT_1
                          M       endif
                          M       if ((high (064h)) == 0)
000342 6A21               M         clrf    (_dT_1) + 1
                          M       else
                          M         movlw   high (064h)
                          M         movwf   (_dT_1) + 1
                          M       endif
                          M     endif
                      00113         MOVE?CW 00Ah, _dT_2
                          M         CHK?RP  _dT_2
                          M     if (((_dT_2) > BANKA_END) & ((_dT_2) < (0f01h + BANKA_END)))
                          M       if (((_dT_2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_dT_2)
                          M PREV_BANK = high (_dT_2)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   _dT_2
                          M         movlw   high (00Ah)
                          M         movwf   (_dT_2) + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    _dT_2
                          M       else
000344 0E0A               M         movlw   low (00Ah)
000346 6E22               M         movwf   _dT_2
                          M       endif
                          M       if ((high (00Ah)) == 0)
000348 6A23               M         clrf    (_dT_2) + 1
                          M       else
                          M         movlw   high (00Ah)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (_dT_2) + 1
                          M       endif
                          M     endif
                      00114         MOVE?CW 005h, _n1
                          M         CHK?RP  _n1
                          M     if (((_n1)   > BANKA_END) & ((_n1)   < (0f01h + BANKA_END)))
                          M       if (((_n1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_n1)
                          M PREV_BANK = high (_n1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005h)
                          M         movwf   _n1
                          M         movlw   high (005h)
                          M         movwf   (_n1)  + 1
                          M     else
                          M       if (low (005h) == 0)
                          M         clrf    _n1
                          M       else
00034A 0E05               M         movlw   low (005h)
00034C 6E32               M         movwf   _n1
                          M       endif
                          M       if ((high (005h)) == 0)
00034E 6A33               M         clrf    (_n1)  + 1
                          M       else
                          M         movlw   high (005h)
                          M         movwf   (_n1)  + 1
                          M       endif
                          M     endif
                      00115         MOVE?CW 032h, _n2
                          M         CHK?RP  _n2
                          M     if (((_n2)   > BANKA_END) & ((_n2)   < (0f01h + BANKA_END)))
                          M       if (((_n2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_n2)
                          M PREV_BANK = high (_n2)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _n2
                          M         movlw   high (032h)
                          M         movwf   (_n2)  + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _n2
                          M       else
000350 0E32               M         movlw   low (032h)
000352 6E34               M         movwf   _n2
                          M       endif
                          M       if ((high (032h)) == 0)
000354 6A35               M         clrf    (_n2)  + 1
                          M       else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   high (032h)
                          M         movwf   (_n2)  + 1
                          M       endif
                          M     endif
                      00116         MOVE?CW 005h, _temp_ref
                          M         CHK?RP  _temp_ref
                          M     if (((_temp_ref) > BANKA_END) & ((_temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref)
                          M PREV_BANK = high (_temp_ref)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005h)
                          M         movwf   _temp_ref
                          M         movlw   high (005h)
                          M         movwf   (_temp_ref) + 1
                          M     else
                          M       if (low (005h) == 0)
                          M         clrf    _temp_ref
                          M       else
000356 0E05               M         movlw   low (005h)
000358 6E7E               M         movwf   _temp_ref
                          M       endif
                          M       if ((high (005h)) == 0)
00035A 6A7F               M         clrf    (_temp_ref) + 1
                          M       else
                          M         movlw   high (005h)
                          M         movwf   (_temp_ref) + 1
                          M       endif
                          M     endif
                      00117         MOVE?CW 00Ah, _temp_ref + 00002h
                          M         CHK?RP  _temp_ref + 00002h
                          M     if (((_temp_ref + 00002h) > BANKA_END) & ((_temp_ref + 00002h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00002h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00002h)
                          M PREV_BANK = high (_temp_ref + 00002h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   _temp_ref + 00002h
                          M         movlw   high (00Ah)
                          M         movwf   (_temp_ref + 00002h) + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    _temp_ref + 00002h
                          M       else
00035C 0E0A               M         movlw   low (00Ah)
00035E 6F80               M         movwf   _temp_ref + 00002h
                          M       endif
                          M       if ((high (00Ah)) == 0)
000360 6B81               M         clrf    (_temp_ref + 00002h) + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (_temp_ref + 00002h) + 1
                          M       endif
                          M     endif
                      00118         MOVE?CW 00Fh, _temp_ref + 00004h
                          M         CHK?RP  _temp_ref + 00004h
                          M     if (((_temp_ref + 00004h) > BANKA_END) & ((_temp_ref + 00004h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00004h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00004h)
                          M PREV_BANK = high (_temp_ref + 00004h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Fh)
                          M         movwf   _temp_ref + 00004h
                          M         movlw   high (00Fh)
                          M         movwf   (_temp_ref + 00004h) + 1
                          M     else
                          M       if (low (00Fh) == 0)
                          M         clrf    _temp_ref + 00004h
                          M       else
000362 0E0F               M         movlw   low (00Fh)
000364 6F82               M         movwf   _temp_ref + 00004h
                          M       endif
                          M       if ((high (00Fh)) == 0)
000366 6B83               M         clrf    (_temp_ref + 00004h) + 1
                          M       else
                          M         movlw   high (00Fh)
                          M         movwf   (_temp_ref + 00004h) + 1
                          M       endif
                          M     endif
                      00119         MOVE?CW 014h, _temp_ref + 00006h
                          M         CHK?RP  _temp_ref + 00006h
                          M     if (((_temp_ref + 00006h) > BANKA_END) & ((_temp_ref + 00006h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00006h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00006h)
                          M PREV_BANK = high (_temp_ref + 00006h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (014h)
                          M         movwf   _temp_ref + 00006h
                          M         movlw   high (014h)
                          M         movwf   (_temp_ref + 00006h) + 1
                          M     else
                          M       if (low (014h) == 0)
                          M         clrf    _temp_ref + 00006h
                          M       else
000368 0E14               M         movlw   low (014h)
00036A 6F84               M         movwf   _temp_ref + 00006h
                          M       endif
                          M       if ((high (014h)) == 0)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00036C 6B85               M         clrf    (_temp_ref + 00006h) + 1
                          M       else
                          M         movlw   high (014h)
                          M         movwf   (_temp_ref + 00006h) + 1
                          M       endif
                          M     endif
                      00120         MOVE?CW 019h, _temp_ref + 00008h
                          M         CHK?RP  _temp_ref + 00008h
                          M     if (((_temp_ref + 00008h) > BANKA_END) & ((_temp_ref + 00008h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00008h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00008h)
                          M PREV_BANK = high (_temp_ref + 00008h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (019h)
                          M         movwf   _temp_ref + 00008h
                          M         movlw   high (019h)
                          M         movwf   (_temp_ref + 00008h) + 1
                          M     else
                          M       if (low (019h) == 0)
                          M         clrf    _temp_ref + 00008h
                          M       else
00036E 0E19               M         movlw   low (019h)
000370 6F86               M         movwf   _temp_ref + 00008h
                          M       endif
                          M       if ((high (019h)) == 0)
000372 6B87               M         clrf    (_temp_ref + 00008h) + 1
                          M       else
                          M         movlw   high (019h)
                          M         movwf   (_temp_ref + 00008h) + 1
                          M       endif
                          M     endif
                      00121         MOVE?CW 01Eh, _temp_ref + 0000Ah
                          M         CHK?RP  _temp_ref + 0000Ah
                          M     if (((_temp_ref + 0000Ah) > BANKA_END) & ((_temp_ref + 0000Ah) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Ah) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Ah)
                          M PREV_BANK = high (_temp_ref + 0000Ah)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (01Eh)
                          M         movwf   _temp_ref + 0000Ah
                          M         movlw   high (01Eh)
                          M         movwf   (_temp_ref + 0000Ah) + 1
                          M     else
                          M       if (low (01Eh) == 0)
                          M         clrf    _temp_ref + 0000Ah
                          M       else
000374 0E1E               M         movlw   low (01Eh)
000376 6F88               M         movwf   _temp_ref + 0000Ah
                          M       endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((high (01Eh)) == 0)
000378 6B89               M         clrf    (_temp_ref + 0000Ah) + 1
                          M       else
                          M         movlw   high (01Eh)
                          M         movwf   (_temp_ref + 0000Ah) + 1
                          M       endif
                          M     endif
                      00122         MOVE?CW 023h, _temp_ref + 0000Ch
                          M         CHK?RP  _temp_ref + 0000Ch
                          M     if (((_temp_ref + 0000Ch) > BANKA_END) & ((_temp_ref + 0000Ch) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Ch) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Ch)
                          M PREV_BANK = high (_temp_ref + 0000Ch)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (023h)
                          M         movwf   _temp_ref + 0000Ch
                          M         movlw   high (023h)
                          M         movwf   (_temp_ref + 0000Ch) + 1
                          M     else
                          M       if (low (023h) == 0)
                          M         clrf    _temp_ref + 0000Ch
                          M       else
00037A 0E23               M         movlw   low (023h)
00037C 6F8A               M         movwf   _temp_ref + 0000Ch
                          M       endif
                          M       if ((high (023h)) == 0)
00037E 6B8B               M         clrf    (_temp_ref + 0000Ch) + 1
                          M       else
                          M         movlw   high (023h)
                          M         movwf   (_temp_ref + 0000Ch) + 1
                          M       endif
                          M     endif
                      00123         MOVE?CW 028h, _temp_ref + 0000Eh
                          M         CHK?RP  _temp_ref + 0000Eh
                          M     if (((_temp_ref + 0000Eh) > BANKA_END) & ((_temp_ref + 0000Eh) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Eh) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Eh)
                          M PREV_BANK = high (_temp_ref + 0000Eh)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (028h)
                          M         movwf   _temp_ref + 0000Eh
                          M         movlw   high (028h)
                          M         movwf   (_temp_ref + 0000Eh) + 1
                          M     else
                          M       if (low (028h) == 0)
                          M         clrf    _temp_ref + 0000Eh
                          M       else
000380 0E28               M         movlw   low (028h)
000382 6F8C               M         movwf   _temp_ref + 0000Eh
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if ((high (028h)) == 0)
000384 6B8D               M         clrf    (_temp_ref + 0000Eh) + 1
                          M       else
                          M         movlw   high (028h)
                          M         movwf   (_temp_ref + 0000Eh) + 1
                          M       endif
                          M     endif
                      00124         MOVE?CW 02Dh, _temp_ref + 00010h
                          M         CHK?RP  _temp_ref + 00010h
                          M     if (((_temp_ref + 00010h) > BANKA_END) & ((_temp_ref + 00010h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00010h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00010h)
                          M PREV_BANK = high (_temp_ref + 00010h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (02Dh)
                          M         movwf   _temp_ref + 00010h
                          M         movlw   high (02Dh)
                          M         movwf   (_temp_ref + 00010h) + 1
                          M     else
                          M       if (low (02Dh) == 0)
                          M         clrf    _temp_ref + 00010h
                          M       else
000386 0E2D               M         movlw   low (02Dh)
000388 6F8E               M         movwf   _temp_ref + 00010h
                          M       endif
                          M       if ((high (02Dh)) == 0)
00038A 6B8F               M         clrf    (_temp_ref + 00010h) + 1
                          M       else
                          M         movlw   high (02Dh)
                          M         movwf   (_temp_ref + 00010h) + 1
                          M       endif
                          M     endif
                      00125         MOVE?CW 032h, _temp_ref + 00012h
                          M         CHK?RP  _temp_ref + 00012h
                          M     if (((_temp_ref + 00012h) > BANKA_END) & ((_temp_ref + 00012h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00012h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00012h)
                          M PREV_BANK = high (_temp_ref + 00012h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _temp_ref + 00012h
                          M         movlw   high (032h)
                          M         movwf   (_temp_ref + 00012h) + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _temp_ref + 00012h
                          M       else
00038C 0E32               M         movlw   low (032h)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00038E 6F90               M         movwf   _temp_ref + 00012h
                          M       endif
                          M       if ((high (032h)) == 0)
000390 6B91               M         clrf    (_temp_ref + 00012h) + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_temp_ref + 00012h) + 1
                          M       endif
                          M     endif
                      00126         MOVE?CW 037h, _temp_ref + 00014h
                          M         CHK?RP  _temp_ref + 00014h
                          M     if (((_temp_ref + 00014h) > BANKA_END) & ((_temp_ref + 00014h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00014h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00014h)
                          M PREV_BANK = high (_temp_ref + 00014h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (037h)
                          M         movwf   _temp_ref + 00014h
                          M         movlw   high (037h)
                          M         movwf   (_temp_ref + 00014h) + 1
                          M     else
                          M       if (low (037h) == 0)
                          M         clrf    _temp_ref + 00014h
                          M       else
000392 0E37               M         movlw   low (037h)
000394 6F92               M         movwf   _temp_ref + 00014h
                          M       endif
                          M       if ((high (037h)) == 0)
000396 6B93               M         clrf    (_temp_ref + 00014h) + 1
                          M       else
                          M         movlw   high (037h)
                          M         movwf   (_temp_ref + 00014h) + 1
                          M       endif
                          M     endif
                      00127         MOVE?CW 03Ch, _temp_ref + 00016h
                          M         CHK?RP  _temp_ref + 00016h
                          M     if (((_temp_ref + 00016h) > BANKA_END) & ((_temp_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00016h)
                          M PREV_BANK = high (_temp_ref + 00016h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (03Ch)
                          M         movwf   _temp_ref + 00016h
                          M         movlw   high (03Ch)
                          M         movwf   (_temp_ref + 00016h) + 1
                          M     else
                          M       if (low (03Ch) == 0)
                          M         clrf    _temp_ref + 00016h
                          M       else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000398 0E3C               M         movlw   low (03Ch)
00039A 6F94               M         movwf   _temp_ref + 00016h
                          M       endif
                          M       if ((high (03Ch)) == 0)
00039C 6B95               M         clrf    (_temp_ref + 00016h) + 1
                          M       else
                          M         movlw   high (03Ch)
                          M         movwf   (_temp_ref + 00016h) + 1
                          M       endif
                          M     endif
                      00128         MOVE?CW 013DBh, _resistor_ref
                          M         CHK?RP  _resistor_ref
                          M     if (((_resistor_ref) > BANKA_END) & ((_resistor_ref) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref)
                          M PREV_BANK = high (_resistor_ref)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (013DBh)
                          M         movwf   _resistor_ref
                          M         movlw   high (013DBh)
                          M         movwf   (_resistor_ref) + 1
                          M     else
                          M       if (low (013DBh) == 0)
                          M         clrf    _resistor_ref
                          M       else
00039E 0EDB               M         movlw   low (013DBh)
0003A0 6E66               M         movwf   _resistor_ref
                          M       endif
                          M       if ((high (013DBh)) == 0)
                          M         clrf    (_resistor_ref) + 1
                          M       else
0003A2 0E13               M         movlw   high (013DBh)
0003A4 6E67               M         movwf   (_resistor_ref) + 1
                          M       endif
                          M     endif
                      00129         MOVE?CW 00FF1h, _resistor_ref + 00002h
                          M         CHK?RP  _resistor_ref + 00002h
                          M     if (((_resistor_ref + 00002h) > BANKA_END) & ((_resistor_ref + 00002h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00002h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00002h)
                          M PREV_BANK = high (_resistor_ref + 00002h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00FF1h)
                          M         movwf   _resistor_ref + 00002h
                          M         movlw   high (00FF1h)
                          M         movwf   (_resistor_ref + 00002h) + 1
                          M     else
                          M       if (low (00FF1h) == 0)
                          M         clrf    _resistor_ref + 00002h
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
0003A6 0EF1               M         movlw   low (00FF1h)
0003A8 6E68               M         movwf   _resistor_ref + 00002h
                          M       endif
                          M       if ((high (00FF1h)) == 0)
                          M         clrf    (_resistor_ref + 00002h) + 1
                          M       else
0003AA 0E0F               M         movlw   high (00FF1h)
0003AC 6E69               M         movwf   (_resistor_ref + 00002h) + 1
                          M       endif
                          M     endif
                      00130         MOVE?CW 00CE3h, _resistor_ref + 00004h
                          M         CHK?RP  _resistor_ref + 00004h
                          M     if (((_resistor_ref + 00004h) > BANKA_END) & ((_resistor_ref + 00004h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00004h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00004h)
                          M PREV_BANK = high (_resistor_ref + 00004h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00CE3h)
                          M         movwf   _resistor_ref + 00004h
                          M         movlw   high (00CE3h)
                          M         movwf   (_resistor_ref + 00004h) + 1
                          M     else
                          M       if (low (00CE3h) == 0)
                          M         clrf    _resistor_ref + 00004h
                          M       else
0003AE 0EE3               M         movlw   low (00CE3h)
0003B0 6E6A               M         movwf   _resistor_ref + 00004h
                          M       endif
                          M       if ((high (00CE3h)) == 0)
                          M         clrf    (_resistor_ref + 00004h) + 1
                          M       else
0003B2 0E0C               M         movlw   high (00CE3h)
0003B4 6E6B               M         movwf   (_resistor_ref + 00004h) + 1
                          M       endif
                          M     endif
                      00131         MOVE?CW 00A7Dh, _resistor_ref + 00006h
                          M         CHK?RP  _resistor_ref + 00006h
                          M     if (((_resistor_ref + 00006h) > BANKA_END) & ((_resistor_ref + 00006h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00006h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00006h)
                          M PREV_BANK = high (_resistor_ref + 00006h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00A7Dh)
                          M         movwf   _resistor_ref + 00006h
                          M         movlw   high (00A7Dh)
                          M         movwf   (_resistor_ref + 00006h) + 1
                          M     else
                          M       if (low (00A7Dh) == 0)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    _resistor_ref + 00006h
                          M       else
0003B6 0E7D               M         movlw   low (00A7Dh)
0003B8 6E6C               M         movwf   _resistor_ref + 00006h
                          M       endif
                          M       if ((high (00A7Dh)) == 0)
                          M         clrf    (_resistor_ref + 00006h) + 1
                          M       else
0003BA 0E0A               M         movlw   high (00A7Dh)
0003BC 6E6D               M         movwf   (_resistor_ref + 00006h) + 1
                          M       endif
                          M     endif
                      00132         MOVE?CW 00898h, _resistor_ref + 00008h
                          M         CHK?RP  _resistor_ref + 00008h
                          M     if (((_resistor_ref + 00008h) > BANKA_END) & ((_resistor_ref + 00008h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00008h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00008h)
                          M PREV_BANK = high (_resistor_ref + 00008h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00898h)
                          M         movwf   _resistor_ref + 00008h
                          M         movlw   high (00898h)
                          M         movwf   (_resistor_ref + 00008h) + 1
                          M     else
                          M       if (low (00898h) == 0)
                          M         clrf    _resistor_ref + 00008h
                          M       else
0003BE 0E98               M         movlw   low (00898h)
0003C0 6E6E               M         movwf   _resistor_ref + 00008h
                          M       endif
                          M       if ((high (00898h)) == 0)
                          M         clrf    (_resistor_ref + 00008h) + 1
                          M       else
0003C2 0E08               M         movlw   high (00898h)
0003C4 6E6F               M         movwf   (_resistor_ref + 00008h) + 1
                          M       endif
                          M     endif
                      00133         MOVE?CW 00715h, _resistor_ref + 0000Ah
                          M         CHK?RP  _resistor_ref + 0000Ah
                          M     if (((_resistor_ref + 0000Ah) > BANKA_END) & ((_resistor_ref + 0000Ah) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Ah) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Ah)
                          M PREV_BANK = high (_resistor_ref + 0000Ah)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00715h)
                          M         movwf   _resistor_ref + 0000Ah
                          M         movlw   high (00715h)
                          M         movwf   (_resistor_ref + 0000Ah) + 1
                          M     else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (00715h) == 0)
                          M         clrf    _resistor_ref + 0000Ah
                          M       else
0003C6 0E15               M         movlw   low (00715h)
0003C8 6E70               M         movwf   _resistor_ref + 0000Ah
                          M       endif
                          M       if ((high (00715h)) == 0)
                          M         clrf    (_resistor_ref + 0000Ah) + 1
                          M       else
0003CA 0E07               M         movlw   high (00715h)
0003CC 6E71               M         movwf   (_resistor_ref + 0000Ah) + 1
                          M       endif
                          M     endif
                      00134         MOVE?CW 005DFh, _resistor_ref + 0000Ch
                          M         CHK?RP  _resistor_ref + 0000Ch
                          M     if (((_resistor_ref + 0000Ch) > BANKA_END) & ((_resistor_ref + 0000Ch) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Ch) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Ch)
                          M PREV_BANK = high (_resistor_ref + 0000Ch)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005DFh)
                          M         movwf   _resistor_ref + 0000Ch
                          M         movlw   high (005DFh)
                          M         movwf   (_resistor_ref + 0000Ch) + 1
                          M     else
                          M       if (low (005DFh) == 0)
                          M         clrf    _resistor_ref + 0000Ch
                          M       else
0003CE 0EDF               M         movlw   low (005DFh)
0003D0 6E72               M         movwf   _resistor_ref + 0000Ch
                          M       endif
                          M       if ((high (005DFh)) == 0)
                          M         clrf    (_resistor_ref + 0000Ch) + 1
                          M       else
0003D2 0E05               M         movlw   high (005DFh)
0003D4 6E73               M         movwf   (_resistor_ref + 0000Ch) + 1
                          M       endif
                          M     endif
                      00135         MOVE?CW 004E6h, _resistor_ref + 0000Eh
                          M         CHK?RP  _resistor_ref + 0000Eh
                          M     if (((_resistor_ref + 0000Eh) > BANKA_END) & ((_resistor_ref + 0000Eh) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Eh) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Eh)
                          M PREV_BANK = high (_resistor_ref + 0000Eh)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (004E6h)
                          M         movwf   _resistor_ref + 0000Eh
                          M         movlw   high (004E6h)
                          M         movwf   (_resistor_ref + 0000Eh) + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (low (004E6h) == 0)
                          M         clrf    _resistor_ref + 0000Eh
                          M       else
0003D6 0EE6               M         movlw   low (004E6h)
0003D8 6E74               M         movwf   _resistor_ref + 0000Eh
                          M       endif
                          M       if ((high (004E6h)) == 0)
                          M         clrf    (_resistor_ref + 0000Eh) + 1
                          M       else
0003DA 0E04               M         movlw   high (004E6h)
0003DC 6E75               M         movwf   (_resistor_ref + 0000Eh) + 1
                          M       endif
                          M     endif
                      00136         MOVE?CW 0041Bh, _resistor_ref + 00010h
                          M         CHK?RP  _resistor_ref + 00010h
                          M     if (((_resistor_ref + 00010h) > BANKA_END) & ((_resistor_ref + 00010h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00010h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00010h)
                          M PREV_BANK = high (_resistor_ref + 00010h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0041Bh)
                          M         movwf   _resistor_ref + 00010h
                          M         movlw   high (0041Bh)
                          M         movwf   (_resistor_ref + 00010h) + 1
                          M     else
                          M       if (low (0041Bh) == 0)
                          M         clrf    _resistor_ref + 00010h
                          M       else
0003DE 0E1B               M         movlw   low (0041Bh)
0003E0 6E76               M         movwf   _resistor_ref + 00010h
                          M       endif
                          M       if ((high (0041Bh)) == 0)
                          M         clrf    (_resistor_ref + 00010h) + 1
                          M       else
0003E2 0E04               M         movlw   high (0041Bh)
0003E4 6E77               M         movwf   (_resistor_ref + 00010h) + 1
                          M       endif
                          M     endif
                      00137         MOVE?CW 00376h, _resistor_ref + 00012h
                          M         CHK?RP  _resistor_ref + 00012h
                          M     if (((_resistor_ref + 00012h) > BANKA_END) & ((_resistor_ref + 00012h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00012h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00012h)
                          M PREV_BANK = high (_resistor_ref + 00012h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00376h)
                          M         movwf   _resistor_ref + 00012h
                          M         movlw   high (00376h)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (_resistor_ref + 00012h) + 1
                          M     else
                          M       if (low (00376h) == 0)
                          M         clrf    _resistor_ref + 00012h
                          M       else
0003E6 0E76               M         movlw   low (00376h)
0003E8 6E78               M         movwf   _resistor_ref + 00012h
                          M       endif
                          M       if ((high (00376h)) == 0)
                          M         clrf    (_resistor_ref + 00012h) + 1
                          M       else
0003EA 0E03               M         movlw   high (00376h)
0003EC 6E79               M         movwf   (_resistor_ref + 00012h) + 1
                          M       endif
                          M     endif
                      00138         MOVE?CW 002EEh, _resistor_ref + 00014h
                          M         CHK?RP  _resistor_ref + 00014h
                          M     if (((_resistor_ref + 00014h) > BANKA_END) & ((_resistor_ref + 00014h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00014h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00014h)
                          M PREV_BANK = high (_resistor_ref + 00014h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (002EEh)
                          M         movwf   _resistor_ref + 00014h
                          M         movlw   high (002EEh)
                          M         movwf   (_resistor_ref + 00014h) + 1
                          M     else
                          M       if (low (002EEh) == 0)
                          M         clrf    _resistor_ref + 00014h
                          M       else
0003EE 0EEE               M         movlw   low (002EEh)
0003F0 6E7A               M         movwf   _resistor_ref + 00014h
                          M       endif
                          M       if ((high (002EEh)) == 0)
                          M         clrf    (_resistor_ref + 00014h) + 1
                          M       else
0003F2 0E02               M         movlw   high (002EEh)
0003F4 6E7B               M         movwf   (_resistor_ref + 00014h) + 1
                          M       endif
                          M     endif
                      00139         MOVE?CW 0027Fh, _resistor_ref + 00016h
                          M         CHK?RP  _resistor_ref + 00016h
                          M     if (((_resistor_ref + 00016h) > BANKA_END) & ((_resistor_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00016h)
                          M PREV_BANK = high (_resistor_ref + 00016h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0027Fh)
                          M         movwf   _resistor_ref + 00016h
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   high (0027Fh)
                          M         movwf   (_resistor_ref + 00016h) + 1
                          M     else
                          M       if (low (0027Fh) == 0)
                          M         clrf    _resistor_ref + 00016h
                          M       else
0003F6 0E7F               M         movlw   low (0027Fh)
0003F8 6E7C               M         movwf   _resistor_ref + 00016h
                          M       endif
                          M       if ((high (0027Fh)) == 0)
                          M         clrf    (_resistor_ref + 00016h) + 1
                          M       else
0003FA 0E02               M         movlw   high (0027Fh)
0003FC 6E7D               M         movwf   (_resistor_ref + 00016h) + 1
                          M       endif
                          M     endif
                      00140 
                      00141         LABEL?L _main   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _main
                          M         XALL
                          M     else
0003FE                    M _main
                          M     endif
                      00142         GOSUB?L _get_temp1_value
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _get_temp1_value
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_temp1_value
                          M     else
                          M       if ((_get_temp1_value) < 1)
                          M         call    _get_temp1_value
                          M       else
                          M         if ((_get_temp1_value) > $)
0003FE EC76 F002          M         call    _get_temp1_value
                          M         else
                          M           if ((_get_temp1_value) < ($ - 3ffh))
                          M         call    _get_temp1_value
                          M           else
                          M         rcall   _get_temp1_value
                          M           endif
                          M         endif
                          M       endif
                          M     endif
000402                    M dlabel
                      00143         GOSUB?L _get_temp2_value
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _get_temp2_value
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_temp2_value
                          M     else
                          M       if ((_get_temp2_value) < 1)
                          M         call    _get_temp2_value
                          M       else
                          M         if ((_get_temp2_value) > $)
000402 ECAA F003          M         call    _get_temp2_value
                          M         else
                          M           if ((_get_temp2_value) < ($ - 3ffh))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    _get_temp2_value
                          M           else
                          M         rcall   _get_temp2_value
                          M           endif
                          M         endif
                          M       endif
                          M     endif
000406                    M dlabel
                      00144         MOVE?CB 009h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (009h) == 0)
                          M         clrf    ADCON0
                          M     else
000406 0E09               M         movlw   low (009h)
000408 6EC2               M         movwf   ADCON0
                          M     endif
                      00145         ADCIN?CW        002h, _throttle
                          M         MOVE?CA 002h
00040A 0E02               M         movlw   low (002h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
                          M         call    ADCIN
                          M           else
00040C DEF8               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _throttle
                          M         MOVE?AB _throttle
                          M         CHK?RP  _throttle
                          M     if (((_throttle) > BANKA_END) & ((_throttle) < (0f01h + BANKA_END)))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((_throttle) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_throttle)
                          M PREV_BANK = high (_throttle)
                          M       endif
                          M     endif
00040E 6E62               M         movwf   _throttle
                          M         MOVE?BB (R0)  + 1, (_throttle) + 1
000410 C002 F063          M         movff   (R0) + 1, (_throttle) + 1
                      00146         MUL?WCW _throttle, 019h, T1
                          M         MOVE?WW _throttle, R3
                          M         MOVE?BB _throttle, R3
000414 C062 F007          M         movff   _throttle, R3
                          M         MOVE?BB (_throttle) + 1, (R3) + 1
000418 C063 F008          M         movff   (_throttle) + 1, (R3) + 1
                          M         MOVE?CW 019h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (019h)
                          M         movwf   R1
                          M         movlw   high (019h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (019h) == 0)
                          M         clrf    R1
                          M       else
00041C 0E19               M         movlw   low (019h)
00041E 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (019h)) == 0)
000420 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (019h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000422 DF57               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000424 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000426 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00147         DIV?WCW T1, 066h, _pwm_val
                          M     if (066h == 2)
                          M         bcf     STATUS, C
                          M       if (_pwm_val == T1)
                          M         CHK?RP  _pwm_val
                          M         rrcf    _pwm_val + 1, F
                          M         rrcf    _pwm_val, F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB _pwm_val + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB _pwm_val
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
00042A C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00042E C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 066h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         movlw   low (066h)
                          M         movwf   R1
                          M         movlw   high (066h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (066h) == 0)
                          M         clrf    R1
                          M       else
000432 0E66               M         movlw   low (066h)
000434 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (066h)) == 0)
000436 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (066h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
000438 DF34               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _pwm_val
                          M         MOVE?AB _pwm_val
                          M         CHK?RP  _pwm_val
                          M     if (((_pwm_val) > BANKA_END) & ((_pwm_val) < (0f01h + BANKA_END)))
                          M       if (((_pwm_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_pwm_val)
                          M PREV_BANK = high (_pwm_val)
                          M       endif
                          M     endif
00043A 6E36               M         movwf   _pwm_val
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB (R0)  + 1, (_pwm_val) + 1
00043C C002 F037          M         movff   (R0) + 1, (_pwm_val) + 1
                          M     endif
                      00148         HPWM?CWC        002h, _pwm_val, 0F5h
                          M         MOVE?WB _pwm_val, R4
                          M         MOVE?BB _pwm_val, R4
000440 C036 F009          M         movff   _pwm_val, R4
                          M         MOVE?CW 0F5h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0F5h)
                          M         movwf   R1
                          M         movlw   high (0F5h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (0F5h) == 0)
                          M         clrf    R1
                          M       else
000444 0EF5               M         movlw   low (0F5h)
000446 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (0F5h)) == 0)
000448 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (0F5h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         MOVE?CA 002h
00044A 0E02               M         movlw   low (002h)
                          M         L?CALL  HPWM
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    HPWM
                          M     else
                          M       if ((HPWM)  < 1)
                          M         call    HPWM
                          M       else
                          M         if ((HPWM)  > $)
                          M         call    HPWM
                          M         else
                          M           if ((HPWM)  < ($ - 3ffh))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    HPWM
                          M           else
00044C DE09               M         rcall   HPWM
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00149         GOSUB?L _get_flowrate
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _get_flowrate
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _get_flowrate
                          M     else
                          M       if ((_get_flowrate) < 1)
                          M         call    _get_flowrate
                          M       else
                          M         if ((_get_flowrate) > $)
00044E ECE8 F004          M         call    _get_flowrate
                          M         else
                          M           if ((_get_flowrate) < ($ - 3ffh))
                          M         call    _get_flowrate
                          M           else
                          M         rcall   _get_flowrate
                          M           endif
                          M         endif
                          M       endif
                          M     endif
000452                    M dlabel
                      00150         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
000452 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000454 DE4D               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00151         LCDOUT?C        001h
                          M         MOVE?CA 001h
000456 0E01               M         movlw   low (001h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000458 DE4B               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00152         LCDOUT?C        054h
                          M         MOVE?CA 054h
00045A 0E54               M         movlw   low (054h)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00045C DE49               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00153         LCDOUT?C        065h
                          M         MOVE?CA 065h
00045E 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000460 DE47               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00154         LCDOUT?C        06Dh
                          M         MOVE?CA 06Dh
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000462 0E6D               M         movlw   low (06Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000464 DE45               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00155         LCDOUT?C        070h
                          M         MOVE?CA 070h
000466 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000468 DE43               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00156         LCDOUT?C        03Ah
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CA 03Ah
00046A 0E3A               M         movlw   low (03Ah)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00046C DE41               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00157         LCDOUT?C        020h
                          M         MOVE?CA 020h
00046E 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000470 DE3F               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00158         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000472 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00159         LCDOUTNUM?W     _t2temp_val
                          M         MOVE?WW _t2temp_val, R2
                          M         MOVE?BB _t2temp_val, R2
000474 C05E F005          M         movff   _t2temp_val, R2
                          M         MOVE?BB (_t2temp_val) + 1, (R2) + 1
000478 C05F F006          M         movff   (_t2temp_val) + 1, (R2) + 1
                      00160         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
00047C 0EEE               M         movlw   low (LCDOUTJ)
00047E 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000480 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
000482 DE8A               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00161         LCDOUT?C        020h
                          M         MOVE?CA 020h
000484 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000486 DE34               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00162         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000488 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00163         LCDOUTNUM?W     _t1temp_val
                          M         MOVE?WW _t1temp_val, R2
                          M         MOVE?BB _t1temp_val, R2
00048A C04A F005          M         movff   _t1temp_val, R2
                          M         MOVE?BB (_t1temp_val) + 1, (R2) + 1
00048E C04B F006          M         movff   (_t1temp_val) + 1, (R2) + 1
                      00164         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000492 0EEE               M         movlw   low (LCDOUTJ)
000494 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000496 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
000498 DE7F               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00165         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
00049A 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00049C DE29               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00166         LCDOUT?C        0C0h
                          M         MOVE?CA 0C0h
00049E 0EC0               M         movlw   low (0C0h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004A0 DE27               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00167         LCDOUT?C        046h
                          M         MOVE?CA 046h
0004A2 0E46               M         movlw   low (046h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004A4 DE25               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00168         LCDOUT?C        06Ch
                          M         MOVE?CA 06Ch
0004A6 0E6C               M         movlw   low (06Ch)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004A8 DE23               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00169         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
0004AA 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004AC DE21               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00170         LCDOUT?C        077h
                          M         MOVE?CA 077h
0004AE 0E77               M         movlw   low (077h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004B0 DE1F               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00171         LCDOUT?C        03Ah
                          M         MOVE?CA 03Ah
0004B2 0E3A               M         movlw   low (03Ah)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004B4 DE1D               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00172         LCDOUT?C        020h
                          M         MOVE?CA 020h
0004B6 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004B8 DE1B               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00173         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0004BA 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00174         LCDOUTNUM?W     _frequency
                          M         MOVE?WW _frequency, R2
                          M         MOVE?BB _frequency, R2
0004BC C02C F005          M         movff   _frequency, R2
                          M         MOVE?BB (_frequency) + 1, (R2) + 1
0004C0 C02D F006          M         movff   (_frequency) + 1, (R2) + 1
                      00175         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
0004C4 0EEE               M         movlw   low (LCDOUTJ)
0004C6 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
0004C8 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
0004CA DE66               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00176         LCDOUT?C        020h
                          M         MOVE?CA 020h
0004CC 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004CE DE10               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00177         LCDOUT?C        020h
                          M         MOVE?CA 020h
0004D0 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0004D2 DE0E               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00178         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0004D4 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00179         LCDOUTNUM?W     _flow_val
                          M         MOVE?WW _flow_val, R2
                          M         MOVE?BB _flow_val, R2
0004D6 C02A F005          M         movff   _flow_val, R2
                          M         MOVE?BB (_flow_val) + 1, (R2) + 1
0004DA C02B F006          M         movff   (_flow_val) + 1, (R2) + 1
                      00180         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
0004DE 0EEE               M         movlw   low (LCDOUTJ)
0004E0 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
0004E2 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
0004E4 DE59               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00181         GOTO?L  _main
                          M         L?GOTO  _main
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_main))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _main
                          M     else
                          M       if ((_main) < 1)
                          M         goto    _main
                          M       else
                          M         if ((_main) > $)
                          M         goto    _main
                          M         else
                          M           if ((_main) < ($ - 3ffh))
                          M         goto    _main
                          M           else
0004E6 D78B               M         bra     _main
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00182         END?    
  0000                    M     local loop
0004E8 0003               M loop    sleep
0004EA D7FE               M         bra     loop
                      00183 
                      00184         LABEL?L _get_temp1_value        
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_temp1_value
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         XALL
                          M     else
0004EC                    M _get_temp1_value
                          M     endif
                      00185         MOVE?CB 001h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    ADCON0
                          M     else
0004EC 0E01               M         movlw   low (001h)
0004EE 6EC2               M         movwf   ADCON0
                          M     endif
                      00186         ADCIN?CW        000h, _t1adval
                          M         MOVE?CA 000h
0004F0 0E00               M         movlw   low (000h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
                          M         call    ADCIN
                          M           else
0004F2 DE85               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _t1adval
                          M         MOVE?AB _t1adval
                          M         CHK?RP  _t1adval
                          M     if (((_t1adval) > BANKA_END) & ((_t1adval) < (0f01h + BANKA_END)))
                          M       if (((_t1adval) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1adval)
                          M PREV_BANK = high (_t1adval)
                          M       endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0004F4 6E38               M         movwf   _t1adval
                          M         MOVE?BB (R0)  + 1, (_t1adval) + 1
0004F6 C002 F039          M         movff   (R0) + 1, (_t1adval) + 1
                      00187         DIV?CWW 0B000h, _t1adval, T1
                          M         MOVE?CW 0B000h, R0
                          M         CHK?RP  R0
                          M     if (((R0)    > BANKA_END) & ((R0)    < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0B000h)
                          M         movwf   R0
                          M         movlw   high (0B000h)
                          M         movwf   (R0)   + 1
                          M     else
                          M       if (low (0B000h) == 0)
0004FA 6A01               M         clrf    R0
                          M       else
                          M         movlw   low (0B000h)
                          M         movwf   R0
                          M       endif
                          M       if ((high (0B000h)) == 0)
                          M         clrf    (R0)   + 1
                          M       else
0004FC 0EB0               M         movlw   high (0B000h)
0004FE 6E02               M         movwf   (R0)   + 1
                          M       endif
                          M     endif
                          M         MOVE?WW _t1adval, R1
                          M         MOVE?BB _t1adval, R1
000500 C038 F003          M         movff   _t1adval, R1
                          M         MOVE?BB (_t1adval) + 1, (R1) + 1
000504 C039 F004          M         movff   (_t1adval) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
000508 DECC               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00050A 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
00050C C002 F014          M         movff   (R0) + 1, (T1) + 1
                      00188         MUL?WCW T1, 032h, T1
                          M         MOVE?WW T1,  R3
                          M         MOVE?BB T1,  R3
000510 C013 F007          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
000514 C014 F008          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
000518 0E32               M         movlw   low (032h)
00051A 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
00051C 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
00051E DED9               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000520 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000522 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00189         SUB?WCW T1, 00898h, _t1resistance
                          M     if (_t1resistance == T1)
                          M         movlw   low (00898h)
                          M         CHK?RP  _t1resistance
                          M         subwf   _t1resistance, F
                          M         movlw   (00898h) >> 8
                          M         subwfb  _t1resistance + 1, F
                          M     else
000526 0E98               M         movlw   low (00898h)
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000528 5C13               M         subwf   T1,  W
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB _t1resistance
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
00052A 6E3E               M         movwf   _t1resistance
00052C 0E08               M         movlw   (00898h) >> 8
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00052E 5814               M         subwfb  T1  + 1, W
                          M         MOVE?AB _t1resistance + 1
                          M         CHK?RP  _t1resistance + 1
                          M     if (((_t1resistance + 1) > BANKA_END) & ((_t1resistance + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance + 1)
                          M PREV_BANK = high (_t1resistance + 1)
                          M       endif
                          M     endif
000530 6E3F               M         movwf   _t1resistance + 1
                          M     endif
                      00190         CMPGT?WWB       _t1resistance, _resistor_ref, T1
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
000532 C03E F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
000536 C03F F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref, R1
                          M         MOVE?BB (_resistor_ref) + 1, (R1) + 1
00053A C067 F004          M         movff   (_resistor_ref) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref
                          M         CHK?RP  _resistor_ref
                          M     if (((_resistor_ref) > BANKA_END) & ((_resistor_ref) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref)
                          M PREV_BANK = high (_resistor_ref)
                          M       endif
                          M     endif
00053E 5066               M         movf    _resistor_ref, W
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
                          M         call    CMPGT
                          M           else
000540 DE8E               M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000542 6E13               M         movwf   T1
                      00191         CMPLT?WWB       _t1resistance, _resistor_ref + 00016h, T2
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
000544 C03E F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
000548 C03F F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref + 00016h, R1
                          M         MOVE?BB (_resistor_ref + 00016h) + 1, (R1) + 1
00054C C07D F004          M         movff   (_resistor_ref + 00016h) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref + 00016h
                          M         CHK?RP  _resistor_ref + 00016h
                          M     if (((_resistor_ref + 00016h) > BANKA_END) & ((_resistor_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00016h)
                          M PREV_BANK = high (_resistor_ref + 00016h)
                          M       endif
                          M     endif
000550 507C               M         movf    _resistor_ref + 00016h, W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
                          M         call    CMPLT
                          M           else
000552 DE88               M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000554 6E15               M         movwf   T2
                      00192         LOR?BBW T1, T2, T2
                          M         MOVE?BB T1,   R0
000556 C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00055A 5015               M         movf    T2,  W
                          M         L?CALL  LOR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LOR
                          M     else
                          M       if ((LOR)   < 1)
                          M         call    LOR
                          M       else
                          M         if ((LOR)   > $)
                          M         call    LOR
                          M         else
                          M           if ((LOR)   < ($ - 3ffh))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LOR
                          M           else
00055C DE9D               M         rcall   LOR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00055E 6E15               M         movwf   T2
000560 6E16               M         movwf   T2   + 1
                      00193         CMPF?WL T2, L00001
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000562 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000564 5015               M         movf    T2,  W
000566 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00001
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
000568 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
00056A EFE3 F002          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
                          M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00194         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
00056E 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000570 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00195         LCDOUT?C        001h
                          M         MOVE?CA 001h
000574 0E01               M         movlw   low (001h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000576 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00196         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
00057A 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00057C EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00197         LCDOUT?C        075h
                          M         MOVE?CA 075h
000580 0E75               M         movlw   low (075h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000582 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00198         LCDOUT?C        074h
                          M         MOVE?CA 074h
000586 0E74               M         movlw   low (074h)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000588 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00199         LCDOUT?C        020h
                          M         MOVE?CA 020h
00058C 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00058E EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00200         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000592 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000594 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00201         LCDOUT?C        066h
                          M         MOVE?CA 066h
000598 0E66               M         movlw   low (066h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00059A EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00202         LCDOUT?C        020h
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CA 020h
00059E 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005A0 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00203         LCDOUT?C        072h
                          M         MOVE?CA 072h
0005A4 0E72               M         movlw   low (072h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005A6 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00204         LCDOUT?C        061h
                          M         MOVE?CA 061h
0005AA 0E61               M         movlw   low (061h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005AC EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00205         LCDOUT?C        06Eh
                          M         MOVE?CA 06Eh
0005B0 0E6E               M         movlw   low (06Eh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005B2 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00206         LCDOUT?C        067h
                          M         MOVE?CA 067h
0005B6 0E67               M         movlw   low (067h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005B8 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00207         LCDOUT?C        065h
                          M         MOVE?CA 065h
0005BC 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005BE EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      00208         GOTO?L  L00002
                          M         L?GOTO  L00002
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00002))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00002
                          M     else
                          M       if ((L00002) < 1)
                          M         goto    L00002
                          M       else
                          M         if ((L00002) > $)
0005C2 EFA9 F003          M         goto    L00002
                          M         else
                          M           if ((L00002) < ($ - 3ffh))
                          M         goto    L00002
                          M           else
                          M         bra     L00002
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00209         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
                          M     else
0005C6                    M L00001
                          M     endif
                      00210         MOVE?CW 000h, _i
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (000h)
                          M         movwf   _i
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
                          M     else
                          M       if (low (000h) == 0)
0005C6 6A2E               M         clrf    _i
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _i
                          M       endif
                          M       if ((high (000h)) == 0)
0005C8 6A2F               M         clrf    (_i)   + 1
                          M       else
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
                          M       endif
                          M     endif
                      00211         LABEL?L L00003  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00003
                          M         XALL
                          M     else
0005CA                    M L00003
                          M     endif
                      00212         CMPGT?WCL       _i, 00Bh, L00004
                          M         MOVE?WW _i,  R0
                          M         MOVE?BB _i,  R0
0005CA C02E F001          M         movff   _i,  R0
                          M         MOVE?BB (_i)  + 1, (R0)   + 1
0005CE C02F F002          M         movff   (_i) + 1, (R0) + 1
                          M         MOVE?CB (00Bh) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((00Bh) >> 8) == 0)
0005D2 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((00Bh) >> 8)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (00Bh)
0005D4 0E0B               M         movlw   low (low (00Bh))
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
                          M         call    CMPGT
                          M           else
0005D6 DE43               M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00004
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00004))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M       else
                          M         if ((L00004) < 1)
                          M         btfsc   STATUS, OV
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00004
                          M         else
                          M           if ((L00004) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M           else
                          M             if ((L00004) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M             else
                          M         bov     L00004
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0005D8 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00004
                          M       else
                          M         if ((L00004) < 1)
                          M         goto    L00004
                          M         else
                          M           if ((L00004) > $)
0005DA EF72 F003          M         goto    L00004
                          M           else
                          M             if ((L00004) < ($ - 3ffh))
                          M         goto    L00004
                          M             else
                          M         bra     L00004
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00213         AOUT?WWW        _resistor_ref, _i, T1
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0005DE 90D8               M         bcf     STATUS, C
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005E0 342E               M         rlcf    _i,   W
0005E2 6EE9               M         movwf   FSR0L
0005E4 342F               M         rlcf    _i   + 1, W
0005E6 6EEA               M         movwf   FSR0H
0005E8 0E66               M         movlw   low (_resistor_ref)
0005EA 26E9               M         addwf   FSR0L, F
0005EC 0E00               M         movlw   (_resistor_ref) >> 8
0005EE 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T1
0005F0 CFEF F013          M         movff   INDF0, T1
                          M         MOVE?BB PREINC0, T1   + 1
0005F4 CFEC F014          M         movff   PREINC0, T1 + 1
                      00214         CMPLT?WWB       _t1resistance, T1, T1
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
0005F8 C03E F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
0005FC C03F F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA T1,   R1
                          M         MOVE?BB (T1)  + 1, (R1)   + 1
000600 C014 F004          M         movff   (T1) + 1, (R1) + 1
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000604 5013               M         movf    T1,  W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
                          M         call    CMPLT
                          M           else
000606 DE2E               M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000608 6E13               M         movwf   T1
                      00215         ADD?WCW _i, 001h, T2
                          M     if (T2   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T2
                          M         incf    T2,   F
                          M         btfsc   STATUS, Z
                          M         incf    T2   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T2
                          M         addwf   T2,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T2   + 1, F
                          M       endif
                          M     else
00060A 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
00060C 242E               M         addwf   _i,  W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00060E 6E15               M         movwf   T2
000610 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000612 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T2   + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
000614 6E16               M         movwf   T2 + 1
                          M     endif
                      00216         AOUT?WWW        _resistor_ref, T2, T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000616 90D8               M         bcf     STATUS, C
000618 3415               M         rlcf    T2,   W
00061A 6EE9               M         movwf   FSR0L
00061C 3416               M         rlcf    T2   + 1, W
00061E 6EEA               M         movwf   FSR0H
000620 0E66               M         movlw   low (_resistor_ref)
000622 26E9               M         addwf   FSR0L, F
000624 0E00               M         movlw   (_resistor_ref) >> 8
000626 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T2
000628 CFEF F015          M         movff   INDF0, T2
                          M         MOVE?BB PREINC0, T2   + 1
00062C CFEC F016          M         movff   PREINC0, T2 + 1
                      00217         CMPGE?WWB       _t1resistance, T2, T2
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
000630 C03E F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
000634 C03F F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA T2,   R1
                          M         MOVE?BB (T2)  + 1, (R1)   + 1
000638 C016 F004          M         movff   (T2) + 1, (R1) + 1
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00063C 5015               M         movf    T2,  W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
                          M         call    CMPGE
                          M           else
00063E DE0C               M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000640 6E15               M         movwf   T2
                      00218         LAND?BBW        T1, T2, T2
                          M         MOVE?BB T1,   R0
000642 C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000646 5015               M         movf    T2,  W
                          M         L?CALL  LAND
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LAND
                          M     else
                          M       if ((LAND)  < 1)
                          M         call    LAND
                          M       else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((LAND)  > $)
                          M         call    LAND
                          M         else
                          M           if ((LAND)  < ($ - 3ffh))
                          M         call    LAND
                          M           else
000648 DE20               M         rcall   LAND
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00064A 6E15               M         movwf   T2
00064C 6E16               M         movwf   T2   + 1
                      00219         CMPF?WL T2, L00005
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
00064E 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000650 5015               M         movf    T2,  W
000652 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00005
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00005))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M             else
                          M         bov     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
000654 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
000656 EF6D F003          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 3ffh))
                          M         goto    L00005
                          M             else
                          M         bra     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00220         ADD?WCW _i, 001h, T1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
00065A 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
00065C 242E               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00065E 6E13               M         movwf   T1
000660 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000662 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000664 6E14               M         movwf   T1 + 1
                          M     endif
                      00221         AOUT?WWW        _resistor_ref, T1, _t1res_lower
                          M         CHK?RP  T1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000666 90D8               M         bcf     STATUS, C
000668 3413               M         rlcf    T1,   W
00066A 6EE9               M         movwf   FSR0L
00066C 3414               M         rlcf    T1   + 1, W
00066E 6EEA               M         movwf   FSR0H
000670 0E66               M         movlw   low (_resistor_ref)
000672 26E9               M         addwf   FSR0L, F
000674 0E00               M         movlw   (_resistor_ref) >> 8
000676 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1res_lower
000678 CFEF F03A          M         movff   INDF0, _t1res_lower
                          M         MOVE?BB PREINC0, _t1res_lower + 1
00067C CFEC F03B          M         movff   PREINC0, _t1res_lower + 1
                      00222         AOUT?WWW        _resistor_ref, _i, _t1res_upper
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000680 90D8               M         bcf     STATUS, C
000682 342E               M         rlcf    _i,   W
000684 6EE9               M         movwf   FSR0L
000686 342F               M         rlcf    _i   + 1, W
000688 6EEA               M         movwf   FSR0H
00068A 0E66               M         movlw   low (_resistor_ref)
00068C 26E9               M         addwf   FSR0L, F
00068E 0E00               M         movlw   (_resistor_ref) >> 8
000690 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1res_upper
000692 CFEF F03C          M         movff   INDF0, _t1res_upper
                          M         MOVE?BB PREINC0, _t1res_upper + 1
000696 CFEC F03D          M         movff   PREINC0, _t1res_upper + 1
                      00223         AOUT?WWW        _temp_ref, _i, _t1temp_lower
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
00069A 90D8               M         bcf     STATUS, C
00069C 342E               M         rlcf    _i,   W
00069E 6EE9               M         movwf   FSR0L
0006A0 342F               M         rlcf    _i   + 1, W
0006A2 6EEA               M         movwf   FSR0H
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006A4 0E7E               M         movlw   low (_temp_ref)
0006A6 26E9               M         addwf   FSR0L, F
0006A8 0E00               M         movlw   (_temp_ref) >> 8
0006AA 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1temp_lower
0006AC CFEF F044          M         movff   INDF0, _t1temp_lower
                          M         MOVE?BB PREINC0, _t1temp_lower + 1
0006B0 CFEC F045          M         movff   PREINC0, _t1temp_lower + 1
                      00224         ADD?WCW _i, 001h, T1
                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
0006B4 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006B6 242E               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0006B8 6E13               M         movwf   T1
0006BA 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006BC 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0006BE 6E14               M         movwf   T1 + 1
                          M     endif
                      00225         AOUT?WWW        _temp_ref, T1, _t1temp_upper
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0006C0 90D8               M         bcf     STATUS, C
0006C2 3413               M         rlcf    T1,   W
0006C4 6EE9               M         movwf   FSR0L
0006C6 3414               M         rlcf    T1   + 1, W
0006C8 6EEA               M         movwf   FSR0H
0006CA 0E7E               M         movlw   low (_temp_ref)
0006CC 26E9               M         addwf   FSR0L, F
0006CE 0E00               M         movlw   (_temp_ref) >> 8
0006D0 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1temp_upper
0006D2 CFEF F048          M         movff   INDF0, _t1temp_upper
                          M         MOVE?BB PREINC0, _t1temp_upper + 1
0006D6 CFEC F049          M         movff   PREINC0, _t1temp_upper + 1
                      00226         LABEL?L L00005  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00005
                          M         XALL
                          M     else
0006DA                    M L00005
                          M     endif
                      00227         NEXT?WCL        _i, 001h, L00003
  0000                    M     local endlabel
                          M     if (001h == 1)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0006DA 2A2E               M         incf    _i,  F
0006DC B4D8               M         btfsc   STATUS, Z
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006DE 2A2F               M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00003))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M             else
                          M         bov     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0006E0 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 3ffh))
                          M         goto    L00003
                          M             else
0006E2 D773               M         bra     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (001h <= 255)
                          M         MOVE?CA 001h
                          M         CHK?RP  _i
                          M         addwf   _i,  F
                          M         BIT?GOTO 0, STATUS, C, L00003
                          M         CHK?RP  _i
                          M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M       else
                          M         movlw   low (001h)
                          M         CHK?RP  _i
                          M         addwf   _i,  F
                          M         movlw   high (001h)
                          M         btfsc   STATUS, C
                          M         addlw   1
                          M         bc      endlabel
                          M         addwf   _i  + 1, F
                          M         BIT?GOTO 0, STATUS, C, L00003
                          M       endif
                          M     endif
0006E4                    M endlabel
                      00228         LABEL?L L00004  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00004
                          M         XALL
                          M     else
0006E4                    M L00004
                          M     endif
                      00229         MUL?WCW _t1temp_upper, 00Ah, T1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?WW _t1temp_upper, R3
                          M         MOVE?BB _t1temp_upper, R3
0006E4 C048 F007          M         movff   _t1temp_upper, R3
                          M         MOVE?BB (_t1temp_upper) + 1, (R3) + 1
0006E8 C049 F008          M         movff   (_t1temp_upper) + 1, (R3) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    R1
                          M       else
0006EC 0E0A               M         movlw   low (00Ah)
0006EE 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
0006F0 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
0006F2 EC69 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0006F6 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
0006F8 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00230         SUB?WWW _t1resistance, _t1res_lower, T2
                          M     if (T2   == _t1resistance)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T2
                          M         subwf   T2,   F
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T2
                          M         subwfb  T2   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower)
                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
0006FC 503A               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
0006FE 5C3E               M         subwf   _t1resistance, W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000700 6E15               M         movwf   T2
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
                          M     endif
000702 503B               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
000704 583F               M         subwfb  _t1resistance + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
000706 6E16               M         movwf   T2 + 1
                          M     endif
                      00231         MUL?WCW T2, 032h, T2
                          M         MOVE?WW T2,  R3
                          M         MOVE?BB T2,  R3
000708 C015 F007          M         movff   T2,  R3
                          M         MOVE?BB (T2)  + 1, (R3)   + 1
00070C C016 F008          M         movff   (T2) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
000710 0E32               M         movlw   low (032h)
000712 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
000714 6A04               M         clrf    (R1)   + 1
                          M       else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
000716 EC69 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T2
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00071A 6E15               M         movwf   T2
                          M         MOVE?BB (R2)  + 1, (T2)   + 1
00071C C006 F016          M         movff   (R2) + 1, (T2) + 1
                      00232         SUB?WWW _t1res_upper, _t1res_lower, T3
                          M     if (T3   == _t1res_upper)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T3
                          M         subwf   T3,   F
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T3
                          M         subwfb  T3   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_t1res_lower)
                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
000720 503A               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
000722 5C3C               M         subwf   _t1res_upper, W
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000724 6E17               M         movwf   T3
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
                          M     endif
000726 503B               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
000728 583D               M         subwfb  _t1res_upper + 1, W
                          M         MOVE?AB T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
00072A 6E18               M         movwf   T3 + 1
                          M     endif
                      00233         DIV?WWW T2, T3, T3
                          M         MOVE?WW T2,   R0
                          M         MOVE?BB T2,  R0
00072C C015 F001          M         movff   T2,  R0
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB (T2)  + 1, (R0)   + 1
000730 C016 F002          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?WW T3,   R1
                          M         MOVE?BB T3,  R1
000734 C017 F003          M         movff   T3,  R1
                          M         MOVE?BB (T3)  + 1, (R1)   + 1
000738 C018 F004          M         movff   (T3) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
00073C EC51 F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T3
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000740 6E17               M         movwf   T3
                          M         MOVE?BB (R0)  + 1, (T3)   + 1
000742 C002 F018          M         movff   (R0) + 1, (T3) + 1
                      00234         SUB?WWW T1, T3, _t1temp_val
                          M     if (_t1temp_val == T1)
                          M         MOVE?BA T3
                          M         CHK?RP  _t1temp_val
                          M         subwf   _t1temp_val, F
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  _t1temp_val
                          M         subwfb  _t1temp_val + 1, F
                          M     else
                          M         MOVE?BA T3
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000746 5017               M         movf    T3,  W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000748 5C13               M         subwf   T1,   W
                          M         MOVE?AB _t1temp_val
                          M         CHK?RP  _t1temp_val
                          M     if (((_t1temp_val) > BANKA_END) & ((_t1temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val)
                          M PREV_BANK = high (_t1temp_val)
                          M       endif
                          M     endif
00074A 6E4A               M         movwf   _t1temp_val
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
00074C 5018               M         movf    T3 + 1, W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00074E 5814               M         subwfb  T1   + 1, W
                          M         MOVE?AB _t1temp_val + 1
                          M         CHK?RP  _t1temp_val + 1
                          M     if (((_t1temp_val + 1) > BANKA_END) & ((_t1temp_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_val + 1)
                          M PREV_BANK = high (_t1temp_val + 1)
                          M       endif
                          M     endif
000750 6E4B               M         movwf   _t1temp_val + 1
                          M     endif
                      00235         LABEL?L L00002  
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00002
                          M         XALL
                          M     else
000752                    M L00002
                          M     endif
                      00236         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000752 0012               M         return
                      00237 
                      00238         LABEL?L _get_temp2_value        
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_temp2_value
                          M         XALL
                          M     else
000754                    M _get_temp2_value
                          M     endif
                      00239         MOVE?CB 005h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (005h) == 0)
                          M         clrf    ADCON0
                          M     else
000754 0E05               M         movlw   low (005h)
000756 6EC2               M         movwf   ADCON0
                          M     endif
                      00240         ADCIN?CW        001h, _t2adval
                          M         MOVE?CA 001h
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000758 0E01               M         movlw   low (001h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
00075A ECFF F000          M         call    ADCIN
                          M           else
                          M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _t2adval
                          M         MOVE?AB _t2adval
                          M         CHK?RP  _t2adval
                          M     if (((_t2adval) > BANKA_END) & ((_t2adval) < (0f01h + BANKA_END)))
                          M       if (((_t2adval) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2adval)
                          M PREV_BANK = high (_t2adval)
                          M       endif
                          M     endif
00075E 6E4C               M         movwf   _t2adval
                          M         MOVE?BB (R0)  + 1, (_t2adval) + 1
000760 C002 F04D          M         movff   (R0) + 1, (_t2adval) + 1
                      00241         DIV?CWW 0B000h, _t2adval, T1
                          M         MOVE?CW 0B000h, R0
                          M         CHK?RP  R0
                          M     if (((R0)    > BANKA_END) & ((R0)    < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0B000h)
                          M         movwf   R0
                          M         movlw   high (0B000h)
                          M         movwf   (R0)   + 1
                          M     else
                          M       if (low (0B000h) == 0)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000764 6A01               M         clrf    R0
                          M       else
                          M         movlw   low (0B000h)
                          M         movwf   R0
                          M       endif
                          M       if ((high (0B000h)) == 0)
                          M         clrf    (R0)   + 1
                          M       else
000766 0EB0               M         movlw   high (0B000h)
000768 6E02               M         movwf   (R0)   + 1
                          M       endif
                          M     endif
                          M         MOVE?WW _t2adval, R1
                          M         MOVE?BB _t2adval, R1
00076A C04C F003          M         movff   _t2adval, R1
                          M         MOVE?BB (_t2adval) + 1, (R1) + 1
00076E C04D F004          M         movff   (_t2adval) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
000772 EC51 F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000776 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000778 C002 F014          M         movff   (R0) + 1, (T1) + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242         MUL?WCW T1, 032h, T1
                          M         MOVE?WW T1,  R3
                          M         MOVE?BB T1,  R3
00077C C013 F007          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
000780 C014 F008          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
000784 0E32               M         movlw   low (032h)
000786 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
000788 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
00078A EC69 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00078E 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000790 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00243         SUB?WCW T1, 00898h, _t2resistance
                          M     if (_t2resistance == T1)
                          M         movlw   low (00898h)
                          M         CHK?RP  _t2resistance
                          M         subwf   _t2resistance, F
                          M         movlw   (00898h) >> 8
                          M         subwfb  _t2resistance + 1, F
                          M     else
000794 0E98               M         movlw   low (00898h)
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000796 5C13               M         subwf   T1,  W
                          M         MOVE?AB _t2resistance
                          M         CHK?RP  _t2resistance
                          M     if (((_t2resistance) > BANKA_END) & ((_t2resistance) < (0f01h + BANKA_END)))
                          M       if (((_t2resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2resistance)
                          M PREV_BANK = high (_t2resistance)
                          M       endif
                          M     endif
000798 6E52               M         movwf   _t2resistance
00079A 0E08               M         movlw   (00898h) >> 8
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00079C 5814               M         subwfb  T1  + 1, W
                          M         MOVE?AB _t2resistance + 1
                          M         CHK?RP  _t2resistance + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_t2resistance + 1) > BANKA_END) & ((_t2resistance + 1) < (0f01h + BANKA_END)))
                          M       if (((_t2resistance + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2resistance + 1)
                          M PREV_BANK = high (_t2resistance + 1)
                          M       endif
                          M     endif
00079E 6E53               M         movwf   _t2resistance + 1
                          M     endif
                      00244         CMPGT?WWB       _t2resistance, _resistor_ref, T1
                          M         MOVE?WW _t2resistance, R0
                          M         MOVE?BB _t2resistance, R0
0007A0 C052 F001          M         movff   _t2resistance, R0
                          M         MOVE?BB (_t2resistance) + 1, (R0) + 1
0007A4 C053 F002          M         movff   (_t2resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref, R1
                          M         MOVE?BB (_resistor_ref) + 1, (R1) + 1
0007A8 C067 F004          M         movff   (_resistor_ref) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref
                          M         CHK?RP  _resistor_ref
                          M     if (((_resistor_ref) > BANKA_END) & ((_resistor_ref) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref)
                          M PREV_BANK = high (_resistor_ref)
                          M       endif
                          M     endif
0007AC 5066               M         movf    _resistor_ref, W
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
0007AE EC2F F001          M         call    CMPGT
                          M           else
                          M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0007B2 6E13               M         movwf   T1
                      00245         CMPLT?WWB       _t2resistance, _resistor_ref + 00016h, T2
                          M         MOVE?WW _t2resistance, R0
                          M         MOVE?BB _t2resistance, R0
0007B4 C052 F001          M         movff   _t2resistance, R0
                          M         MOVE?BB (_t2resistance) + 1, (R0) + 1
0007B8 C053 F002          M         movff   (_t2resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref + 00016h, R1
                          M         MOVE?BB (_resistor_ref + 00016h) + 1, (R1) + 1
0007BC C07D F004          M         movff   (_resistor_ref + 00016h) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref + 00016h
                          M         CHK?RP  _resistor_ref + 00016h
                          M     if (((_resistor_ref + 00016h) > BANKA_END) & ((_resistor_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00016h)
                          M PREV_BANK = high (_resistor_ref + 00016h)
                          M       endif
                          M     endif
0007C0 507C               M         movf    _resistor_ref + 00016h, W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
0007C2 EC32 F001          M         call    CMPLT
                          M           else
                          M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0007C6 6E15               M         movwf   T2
                      00246         LOR?BBW T1, T2, T2
                          M         MOVE?BB T1,   R0
0007C8 C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0007CC 5015               M         movf    T2,  W
                          M         L?CALL  LOR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LOR
                          M     else
                          M       if ((LOR)   < 1)
                          M         call    LOR
                          M       else
                          M         if ((LOR)   > $)
                          M         call    LOR
                          M         else
                          M           if ((LOR)   < ($ - 3ffh))
0007CE EC4C F001          M         call    LOR
                          M           else
                          M         rcall   LOR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0007D2 6E15               M         movwf   T2
0007D4 6E16               M         movwf   T2   + 1
                      00247         CMPF?WL T2, L00007
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007D6 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0007D8 5015               M         movf    T2,  W
0007DA 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00007
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00007))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M             else
                          M         bov     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
0007DC B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
0007DE EF1D F004          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 3ffh))
                          M         goto    L00007
                          M             else
                          M         bra     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00248         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
0007E2 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0007E4 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      00249         LCDOUT?C        0C0h
                          M         MOVE?CA 0C0h
0007E8 0EC0               M         movlw   low (0C0h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0007EA EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00250         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
0007EE 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0007F0 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                      00251         LCDOUT?C        075h
                          M         MOVE?CA 075h
0007F4 0E75               M         movlw   low (075h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0007F6 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00252         LCDOUT?C        074h
                          M         MOVE?CA 074h
0007FA 0E74               M         movlw   low (074h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0007FC EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00253         LCDOUT?C        020h
                          M         MOVE?CA 020h
000800 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000802 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00254         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
000806 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000808 EC78 F000          M         call    LCDOUT
                          M           else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00255         LCDOUT?C        066h
                          M         MOVE?CA 066h
00080C 0E66               M         movlw   low (066h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00080E EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00256         LCDOUT?C        020h
                          M         MOVE?CA 020h
000812 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000814 EC78 F000          M         call    LCDOUT
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00257         LCDOUT?C        072h
                          M         MOVE?CA 072h
000818 0E72               M         movlw   low (072h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00081A EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00258         LCDOUT?C        061h
                          M         MOVE?CA 061h
00081E 0E61               M         movlw   low (061h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000820 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00259         LCDOUT?C        06Eh
                          M         MOVE?CA 06Eh
000824 0E6E               M         movlw   low (06Eh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000826 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00260         LCDOUT?C        067h
                          M         MOVE?CA 067h
00082A 0E67               M         movlw   low (067h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((LCDOUT) < ($ - 3ffh))
00082C EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00261         LCDOUT?C        065h
                          M         MOVE?CA 065h
000830 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000832 EC78 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00262         GOTO?L  L00008
                          M         L?GOTO  L00008
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00008))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00008
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((L00008) < 1)
                          M         goto    L00008
                          M       else
                          M         if ((L00008) > $)
000836 EFE7 F004          M         goto    L00008
                          M         else
                          M           if ((L00008) < ($ - 3ffh))
                          M         goto    L00008
                          M           else
                          M         bra     L00008
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00263         LABEL?L L00007  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00007
                          M         XALL
                          M     else
00083A                    M L00007
                          M     endif
                      00264         MOVE?CW 000h, _i
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (000h)
                          M         movwf   _i
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
                          M     else
                          M       if (low (000h) == 0)
00083A 6A2E               M         clrf    _i
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _i
                          M       endif
                          M       if ((high (000h)) == 0)
00083C 6A2F               M         clrf    (_i)   + 1
                          M       else
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      00265         LABEL?L L00009  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00009
                          M         XALL
                          M     else
00083E                    M L00009
                          M     endif
                      00266         CMPGT?WCL       _i, 00Bh, L00010
                          M         MOVE?WW _i,  R0
                          M         MOVE?BB _i,  R0
00083E C02E F001          M         movff   _i,  R0
                          M         MOVE?BB (_i)  + 1, (R0)   + 1
000842 C02F F002          M         movff   (_i) + 1, (R0) + 1
                          M         MOVE?CB (00Bh) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((00Bh) >> 8) == 0)
000846 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((00Bh) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (00Bh)
000848 0E0B               M         movlw   low (low (00Bh))
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((CMPGT) < ($ - 3ffh))
00084A EC2F F001          M         call    CMPGT
                          M           else
                          M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00010
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00010))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00010
                          M       else
                          M         if ((L00010) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00010
                          M         else
                          M           if ((L00010) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00010
                          M           else
                          M             if ((L00010) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00010
                          M             else
                          M         bov     L00010
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M       if (0      == 0)
00084E A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00010
                          M       else
                          M         if ((L00010) < 1)
                          M         goto    L00010
                          M         else
                          M           if ((L00010) > $)
000850 EFB0 F004          M         goto    L00010
                          M           else
                          M             if ((L00010) < ($ - 3ffh))
                          M         goto    L00010
                          M             else
                          M         bra     L00010
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00267         AOUT?WWW        _resistor_ref, _i, T1
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000854 90D8               M         bcf     STATUS, C
000856 342E               M         rlcf    _i,   W
000858 6EE9               M         movwf   FSR0L
00085A 342F               M         rlcf    _i   + 1, W
00085C 6EEA               M         movwf   FSR0H
00085E 0E66               M         movlw   low (_resistor_ref)
000860 26E9               M         addwf   FSR0L, F
000862 0E00               M         movlw   (_resistor_ref) >> 8
000864 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T1
000866 CFEF F013          M         movff   INDF0, T1
                          M         MOVE?BB PREINC0, T1   + 1
00086A CFEC F014          M         movff   PREINC0, T1 + 1
                      00268         CMPLT?WWB       _t2resistance, T1, T1
                          M         MOVE?WW _t2resistance, R0
                          M         MOVE?BB _t2resistance, R0
00086E C052 F001          M         movff   _t2resistance, R0
                          M         MOVE?BB (_t2resistance) + 1, (R0) + 1
000872 C053 F002          M         movff   (_t2resistance) + 1, (R0) + 1
                          M         MOVE?WWA T1,   R1
                          M         MOVE?BB (T1)  + 1, (R1)   + 1
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000876 C014 F004          M         movff   (T1) + 1, (R1) + 1
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00087A 5013               M         movf    T1,  W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
00087C EC32 F001          M         call    CMPLT
                          M           else
                          M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000880 6E13               M         movwf   T1
                      00269         ADD?WCW _i, 001h, T2
                          M     if (T2   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T2
                          M         incf    T2,   F
                          M         btfsc   STATUS, Z
                          M         incf    T2   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T2
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         addwf   T2,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T2   + 1, F
                          M       endif
                          M     else
000882 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000884 242E               M         addwf   _i,  W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000886 6E15               M         movwf   T2
000888 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
00088A 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
00088C 6E16               M         movwf   T2 + 1
                          M     endif
                      00270         AOUT?WWW        _resistor_ref, T2, T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00088E 90D8               M         bcf     STATUS, C
000890 3415               M         rlcf    T2,   W
000892 6EE9               M         movwf   FSR0L
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000894 3416               M         rlcf    T2   + 1, W
000896 6EEA               M         movwf   FSR0H
000898 0E66               M         movlw   low (_resistor_ref)
00089A 26E9               M         addwf   FSR0L, F
00089C 0E00               M         movlw   (_resistor_ref) >> 8
00089E 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T2
0008A0 CFEF F015          M         movff   INDF0, T2
                          M         MOVE?BB PREINC0, T2   + 1
0008A4 CFEC F016          M         movff   PREINC0, T2 + 1
                      00271         CMPGE?WWB       _t2resistance, T2, T2
                          M         MOVE?WW _t2resistance, R0
                          M         MOVE?BB _t2resistance, R0
0008A8 C052 F001          M         movff   _t2resistance, R0
                          M         MOVE?BB (_t2resistance) + 1, (R0) + 1
0008AC C053 F002          M         movff   (_t2resistance) + 1, (R0) + 1
                          M         MOVE?WWA T2,   R1
                          M         MOVE?BB (T2)  + 1, (R1)   + 1
0008B0 C016 F004          M         movff   (T2) + 1, (R1) + 1
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0008B4 5015               M         movf    T2,  W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
0008B6 EC2C F001          M         call    CMPGE
                          M           else
                          M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0008BA 6E15               M         movwf   T2
                      00272         LAND?BBW        T1, T2, T2
                          M         MOVE?BB T1,   R0
0008BC C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0008C0 5015               M         movf    T2,  W
                          M         L?CALL  LAND
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LAND
                          M     else
                          M       if ((LAND)  < 1)
                          M         call    LAND
                          M       else
                          M         if ((LAND)  > $)
                          M         call    LAND
                          M         else
                          M           if ((LAND)  < ($ - 3ffh))
0008C2 EC45 F001          M         call    LAND
                          M           else
                          M         rcall   LAND
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0008C6 6E15               M         movwf   T2
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008C8 6E16               M         movwf   T2   + 1
                      00273         CMPF?WL T2, L00011
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
0008CA 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0008CC 5015               M         movf    T2,  W
0008CE 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00011
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00011))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M             else
                          M         bov     L00011
                          M             endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
0008D0 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
0008D2 EFAB F004          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 3ffh))
                          M         goto    L00011
                          M             else
                          M         bra     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00274         ADD?WCW _i, 001h, T1
                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
0008D6 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
0008D8 242E               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0008DA 6E13               M         movwf   T1
0008DC 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0008DE 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0008E0 6E14               M         movwf   T1 + 1
                          M     endif
                      00275         AOUT?WWW        _resistor_ref, T1, _t2res_lower
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0008E2 90D8               M         bcf     STATUS, C
0008E4 3413               M         rlcf    T1,   W
0008E6 6EE9               M         movwf   FSR0L
0008E8 3414               M         rlcf    T1   + 1, W
0008EA 6EEA               M         movwf   FSR0H
0008EC 0E66               M         movlw   low (_resistor_ref)
0008EE 26E9               M         addwf   FSR0L, F
0008F0 0E00               M         movlw   (_resistor_ref) >> 8
0008F2 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t2res_lower
0008F4 CFEF F04E          M         movff   INDF0, _t2res_lower
                          M         MOVE?BB PREINC0, _t2res_lower + 1
0008F8 CFEC F04F          M         movff   PREINC0, _t2res_lower + 1
                      00276         AOUT?WWW        _resistor_ref, _i, _t2res_upper
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0008FC 90D8               M         bcf     STATUS, C
0008FE 342E               M         rlcf    _i,   W
000900 6EE9               M         movwf   FSR0L
000902 342F               M         rlcf    _i   + 1, W
000904 6EEA               M         movwf   FSR0H
000906 0E66               M         movlw   low (_resistor_ref)
000908 26E9               M         addwf   FSR0L, F
00090A 0E00               M         movlw   (_resistor_ref) >> 8
00090C 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t2res_upper
00090E CFEF F050          M         movff   INDF0, _t2res_upper
                          M         MOVE?BB PREINC0, _t2res_upper + 1
000912 CFEC F051          M         movff   PREINC0, _t2res_upper + 1
                      00277         AOUT?WWW        _temp_ref, _i, _t2temp_lower
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000916 90D8               M         bcf     STATUS, C
000918 342E               M         rlcf    _i,   W
00091A 6EE9               M         movwf   FSR0L
00091C 342F               M         rlcf    _i   + 1, W
00091E 6EEA               M         movwf   FSR0H
000920 0E7E               M         movlw   low (_temp_ref)
000922 26E9               M         addwf   FSR0L, F
000924 0E00               M         movlw   (_temp_ref) >> 8
000926 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t2temp_lower
000928 CFEF F058          M         movff   INDF0, _t2temp_lower
                          M         MOVE?BB PREINC0, _t2temp_lower + 1
00092C CFEC F059          M         movff   PREINC0, _t2temp_lower + 1
                      00278         ADD?WCW _i, 001h, T1
                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
000930 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000932 242E               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000934 6E13               M         movwf   T1
000936 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000938 202F               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
00093A 6E14               M         movwf   T1 + 1
                          M     endif
                      00279         AOUT?WWW        _temp_ref, T1, _t2temp_upper
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00093C 90D8               M         bcf     STATUS, C
00093E 3413               M         rlcf    T1,   W
000940 6EE9               M         movwf   FSR0L
000942 3414               M         rlcf    T1   + 1, W
000944 6EEA               M         movwf   FSR0H
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000946 0E7E               M         movlw   low (_temp_ref)
000948 26E9               M         addwf   FSR0L, F
00094A 0E00               M         movlw   (_temp_ref) >> 8
00094C 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t2temp_upper
00094E CFEF F05C          M         movff   INDF0, _t2temp_upper
                          M         MOVE?BB PREINC0, _t2temp_upper + 1
000952 CFEC F05D          M         movff   PREINC0, _t2temp_upper + 1
                      00280         LABEL?L L00011  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00011
                          M         XALL
                          M     else
000956                    M L00011
                          M     endif
                      00281         NEXT?WCL        _i, 001h, L00009
  0000                    M     local endlabel
                          M     if (001h == 1)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000956 2A2E               M         incf    _i,  F
000958 B4D8               M         btfsc   STATUS, Z
00095A 2A2F               M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00009
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00009))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M             else
                          M         bov     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
00095C A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
                          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 3ffh))
                          M         goto    L00009
                          M             else
00095E D76F               M         bra     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (001h <= 255)
                          M         MOVE?CA 001h
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _i
                          M         addwf   _i,  F
                          M         BIT?GOTO 0, STATUS, C, L00009
                          M         CHK?RP  _i
                          M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00009
                          M       else
                          M         movlw   low (001h)
                          M         CHK?RP  _i
                          M         addwf   _i,  F
                          M         movlw   high (001h)
                          M         btfsc   STATUS, C
                          M         addlw   1
                          M         bc      endlabel
                          M         addwf   _i  + 1, F
                          M         BIT?GOTO 0, STATUS, C, L00009
                          M       endif
                          M     endif
000960                    M endlabel
                      00282         LABEL?L L00010  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00010
                          M         XALL
                          M     else
000960                    M L00010
                          M     endif
                      00283         MUL?WCW _t2temp_upper, 00Ah, T1
                          M         MOVE?WW _t2temp_upper, R3
                          M         MOVE?BB _t2temp_upper, R3
000960 C05C F007          M         movff   _t2temp_upper, R3
                          M         MOVE?BB (_t2temp_upper) + 1, (R3) + 1
000964 C05D F008          M         movff   (_t2temp_upper) + 1, (R3) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    R1
                          M       else
000968 0E0A               M         movlw   low (00Ah)
00096A 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
00096C 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
00096E EC69 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000972 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000974 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00284         SUB?WWW _t2resistance, _t2res_lower, T2
                          M     if (T2   == _t2resistance)
                          M         MOVE?BA _t2res_lower
                          M         CHK?RP  T2
                          M         subwf   T2,   F
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BA _t2res_lower + 1
                          M         CHK?RP  T2
                          M         subwfb  T2   + 1, F
                          M     else
                          M         MOVE?BA _t2res_lower
                          M         CHK?RP  _t2res_lower
                          M     if (((_t2res_lower) > BANKA_END) & ((_t2res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t2res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2res_lower)
                          M PREV_BANK = high (_t2res_lower)
                          M       endif
                          M     endif
000978 504E               M         movf    _t2res_lower, W
                          M         CHK?RP  _t2resistance
                          M     if (((_t2resistance) > BANKA_END) & ((_t2resistance) < (0f01h + BANKA_END)))
                          M       if (((_t2resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2resistance)
                          M PREV_BANK = high (_t2resistance)
                          M       endif
                          M     endif
00097A 5C52               M         subwf   _t2resistance, W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00097C 6E15               M         movwf   T2
                          M         MOVE?BA _t2res_lower + 1
                          M         CHK?RP  _t2res_lower + 1
                          M     if (((_t2res_lower + 1) > BANKA_END) & ((_t2res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t2res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2res_lower + 1)
                          M PREV_BANK = high (_t2res_lower + 1)
                          M       endif
                          M     endif
00097E 504F               M         movf    _t2res_lower + 1, W
                          M         CHK?RP  _t2resistance
                          M     if (((_t2resistance) > BANKA_END) & ((_t2resistance) < (0f01h + BANKA_END)))
                          M       if (((_t2resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2resistance)
                          M PREV_BANK = high (_t2resistance)
                          M       endif
                          M     endif
000980 5853               M         subwfb  _t2resistance + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000982 6E16               M         movwf   T2 + 1
                          M     endif
                      00285         MUL?WCW T2, 032h, T2
                          M         MOVE?WW T2,  R3
                          M         MOVE?BB T2,  R3
000984 C015 F007          M         movff   T2,  R3
                          M         MOVE?BB (T2)  + 1, (R3)   + 1
000988 C016 F008          M         movff   (T2) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
00098C 0E32               M         movlw   low (032h)
00098E 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
000990 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((MUL)   < ($ - 3ffh))
000992 EC69 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T2
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000996 6E15               M         movwf   T2
                          M         MOVE?BB (R2)  + 1, (T2)   + 1
000998 C006 F016          M         movff   (R2) + 1, (T2) + 1
                      00286         SUB?WWW _t2res_upper, _t2res_lower, T3
                          M     if (T3   == _t2res_upper)
                          M         MOVE?BA _t2res_lower
                          M         CHK?RP  T3
                          M         subwf   T3,   F
                          M         MOVE?BA _t2res_lower + 1
                          M         CHK?RP  T3
                          M         subwfb  T3   + 1, F
                          M     else
                          M         MOVE?BA _t2res_lower
                          M         CHK?RP  _t2res_lower
                          M     if (((_t2res_lower) > BANKA_END) & ((_t2res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t2res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2res_lower)
                          M PREV_BANK = high (_t2res_lower)
                          M       endif
                          M     endif
00099C 504E               M         movf    _t2res_lower, W
                          M         CHK?RP  _t2res_upper
                          M     if (((_t2res_upper) > BANKA_END) & ((_t2res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t2res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2res_upper)
                          M PREV_BANK = high (_t2res_upper)
                          M       endif
                          M     endif
00099E 5C50               M         subwf   _t2res_upper, W
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0009A0 6E17               M         movwf   T3
                          M         MOVE?BA _t2res_lower + 1
                          M         CHK?RP  _t2res_lower + 1
                          M     if (((_t2res_lower + 1) > BANKA_END) & ((_t2res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t2res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2res_lower + 1)
                          M PREV_BANK = high (_t2res_lower + 1)
                          M       endif
                          M     endif
0009A2 504F               M         movf    _t2res_lower + 1, W
                          M         CHK?RP  _t2res_upper
                          M     if (((_t2res_upper) > BANKA_END) & ((_t2res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t2res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2res_upper)
                          M PREV_BANK = high (_t2res_upper)
                          M       endif
                          M     endif
0009A4 5851               M         subwfb  _t2res_upper + 1, W
                          M         MOVE?AB T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
0009A6 6E18               M         movwf   T3 + 1
                          M     endif
                      00287         DIV?WWW T2, T3, T3
                          M         MOVE?WW T2,   R0
                          M         MOVE?BB T2,  R0
0009A8 C015 F001          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
0009AC C016 F002          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?WW T3,   R1
                          M         MOVE?BB T3,  R1
0009B0 C017 F003          M         movff   T3,  R1
                          M         MOVE?BB (T3)  + 1, (R1)   + 1
0009B4 C018 F004          M         movff   (T3) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
0009B8 EC51 F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T3
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
0009BC 6E17               M         movwf   T3
                          M         MOVE?BB (R0)  + 1, (T3)   + 1
0009BE C002 F018          M         movff   (R0) + 1, (T3) + 1
                      00288         SUB?WWW T1, T3, _t2temp_val
                          M     if (_t2temp_val == T1)
                          M         MOVE?BA T3
                          M         CHK?RP  _t2temp_val
                          M         subwf   _t2temp_val, F
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  _t2temp_val
                          M         subwfb  _t2temp_val + 1, F
                          M     else
                          M         MOVE?BA T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
0009C2 5017               M         movf    T3,  W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0009C4 5C13               M         subwf   T1,   W
                          M         MOVE?AB _t2temp_val
                          M         CHK?RP  _t2temp_val
                          M     if (((_t2temp_val) > BANKA_END) & ((_t2temp_val) < (0f01h + BANKA_END)))
                          M       if (((_t2temp_val) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_t2temp_val)
                          M PREV_BANK = high (_t2temp_val)
                          M       endif
                          M     endif
0009C6 6E5E               M         movwf   _t2temp_val
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
0009C8 5018               M         movf    T3 + 1, W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0009CA 5814               M         subwfb  T1   + 1, W
                          M         MOVE?AB _t2temp_val + 1
                          M         CHK?RP  _t2temp_val + 1
                          M     if (((_t2temp_val + 1) > BANKA_END) & ((_t2temp_val + 1) < (0f01h + BANKA_END)))
                          M       if (((_t2temp_val + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t2temp_val + 1)
                          M PREV_BANK = high (_t2temp_val + 1)
                          M       endif
                          M     endif
0009CC 6E5F               M         movwf   _t2temp_val + 1
                          M     endif
                      00289         LABEL?L L00008  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00008
                          M         XALL
                          M     else
0009CE                    M L00008
                          M     endif
                      00290         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
0009CE 0012               M         return
                      00291 
                      00292         LABEL?L _get_flowrate   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _get_flowrate
                          M         XALL
                          M     else
0009D0                    M _get_flowrate
                          M     endif
                      00293         COUNT?TCW       _PORTB??5, 0FAh, _frequency
                          M         MOVE?CW 0FAh, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0FAh)
                          M         movwf   R1
                          M         movlw   high (0FAh)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (0FAh) == 0)
                          M         clrf    R1
                          M       else
0009D0 0EFA               M         movlw   low (0FAh)
0009D2 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (0FAh)) == 0)
0009D4 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (0FAh)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         BIT?R1  PORTB, 005h
                          M     if (((005h)  & 8) == 0)
0009D6 0E81               M         movlw   low (PORTB)
                          M     else
                          M         movlw   low ((PORTB) + 1)
                          M     endif
                          M         CHK?RP  RR1
                          M     if (((RR1)   > BANKA_END) & ((RR1)   < (0f01h + BANKA_END)))
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
0009D8 6E1C               M         movwf   RR1
0009DA 0E0F               M         movlw   high (PORTB)
0009DC 6E1E               M         movwf   RS1
                          M         BIT?W   005h
                          M     if (((005h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((005h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((005h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((005h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((005h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((005h)  & 7) == 5)
0009DE 0E20               M         movlw   20h
                          M     endif
                          M     if (((005h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((005h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0009E0 6E1A               M         movwf   RM1
                          M         L?CALL  COUNTT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    COUNTT
                          M     else
                          M       if ((COUNTT) < 1)
                          M         call    COUNTT
                          M       else
                          M         if ((COUNTT) > $)
                          M         call    COUNTT
                          M         else
                          M           if ((COUNTT) < ($ - 3ffh))
0009E2 EC03 F000          M         call    COUNTT
                          M           else
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rcall   COUNTT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R1, _frequency
                          M         MOVE?AB _frequency
                          M         CHK?RP  _frequency
                          M     if (((_frequency) > BANKA_END) & ((_frequency) < (0f01h + BANKA_END)))
                          M       if (((_frequency) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_frequency)
                          M PREV_BANK = high (_frequency)
                          M       endif
                          M     endif
0009E6 6E2C               M         movwf   _frequency
                          M         MOVE?BB (R1)  + 1, (_frequency) + 1
0009E8 C004 F02D          M         movff   (R1) + 1, (_frequency) + 1
                      00294         DIV?WCW _frequency, 001h, _frequency
                          M     if (001h == 2)
                          M         bcf     STATUS, C
                          M       if (_frequency == _frequency)
                          M         CHK?RP  _frequency
                          M         rrcf    _frequency + 1, F
                          M         rrcf    _frequency, F
                          M       else
                          M         CHK?RP  _frequency
                          M         rrcf    _frequency + 1, W
                          M         MOVE?AB _frequency + 1
                          M         CHK?RP  _frequency
                          M         rrcf    _frequency, W
                          M         MOVE?AB _frequency
                          M       endif
                          M     else
                          M         MOVE?WW _frequency, R0
                          M         MOVE?BB _frequency, R0
0009EC C02C F001          M         movff   _frequency, R0
                          M         MOVE?BB (_frequency) + 1, (R0) + 1
0009F0 C02D F002          M         movff   (_frequency) + 1, (R0) + 1
                          M         MOVE?CW 001h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (001h)
                          M         movwf   R1
                          M         movlw   high (001h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (001h) == 0)
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    R1
                          M       else
0009F4 0E01               M         movlw   low (001h)
0009F6 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (001h)) == 0)
0009F8 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (001h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
0009FA EC51 F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _frequency
                          M         MOVE?AB _frequency
                          M         CHK?RP  _frequency
                          M     if (((_frequency) > BANKA_END) & ((_frequency) < (0f01h + BANKA_END)))
                          M       if (((_frequency) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_frequency)
                          M PREV_BANK = high (_frequency)
                          M       endif
                          M     endif
0009FE 6E2C               M         movwf   _frequency
                          M         MOVE?BB (R0)  + 1, (_frequency) + 1
000A00 C002 F02D          M         movff   (R0) + 1, (_frequency) + 1
                          M     endif
                      00295         MUL?WCW _frequency, 078h, T1
                          M         MOVE?WW _frequency, R3
                          M         MOVE?BB _frequency, R3
000A04 C02C F007          M         movff   _frequency, R3
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB (_frequency) + 1, (R3) + 1
000A08 C02D F008          M         movff   (_frequency) + 1, (R3) + 1
                          M         MOVE?CW 078h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (078h)
                          M         movwf   R1
                          M         movlw   high (078h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (078h) == 0)
                          M         clrf    R1
                          M       else
000A0C 0E78               M         movlw   low (078h)
000A0E 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (078h)) == 0)
000A10 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (078h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
000A12 EC69 F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000A16 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000A18 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00296         DIV?WCW T1, 00564h, _flow_val
                          M     if (00564h == 2)
                          M         bcf     STATUS, C
                          M       if (_flow_val == T1)
                          M         CHK?RP  _flow_val
                          M         rrcf    _flow_val + 1, F
                          M         rrcf    _flow_val, F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    T1  + 1, W
                          M         MOVE?AB _flow_val + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB _flow_val
                          M       endif
                          M     else
                          M         MOVE?WW T1,  R0
                          M         MOVE?BB T1,  R0
000A1C C013 F001          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000A20 C014 F002          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?CW 00564h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00564h)
                          M         movwf   R1
                          M         movlw   high (00564h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00564h) == 0)
                          M         clrf    R1
                          M       else
000A24 0E64               M         movlw   low (00564h)
000A26 6E03               M         movwf   R1
                          M       endif
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((high (00564h)) == 0)
                          M         clrf    (R1)   + 1
                          M       else
000A28 0E05               M         movlw   high (00564h)
000A2A 6E04               M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
000A2C EC51 F001          M         call    DIV
                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _flow_val
                          M         MOVE?AB _flow_val
                          M         CHK?RP  _flow_val
                          M     if (((_flow_val) > BANKA_END) & ((_flow_val) < (0f01h + BANKA_END)))
                          M       if (((_flow_val) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_flow_val)
                          M PREV_BANK = high (_flow_val)
                          M       endif
                          M     endif
000A30 6E2A               M         movwf   _flow_val
                          M         MOVE?BB (R0)  + 1, (_flow_val) + 1
000A32 C002 F02B          M         movff   (R0) + 1, (_flow_val) + 1
                          M     endif
                      00297         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000A36 0012               M         return
                      00298 
                      00299         END
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 142


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCIN                             000001FE
ADCIN?CW                          
ADCIN_USED                        00000001
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          10
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      50
ADD?WCW                           
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
AOUT?WWW                          
BANK0_END                         000000FF
BANK0_START                       00000080
BANK1_END                         000001FF
BANK1_START                       00000100
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 143


SYMBOL TABLE
  LABEL                             VALUE 

BANK2_END                         000002FF
BANK2_START                       00000200
BANKA_END                         0000007F
BANKA_START                       00000000
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          2
CCP1_REG                          PORTC
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 144


SYMBOL TABLE
  LABEL                             VALUE 

CCP2_BIT                          00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCP2_REG                          00000F82
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMP                               0000026A
CMPF?WL                           
CMPGE                             00000258
CMPGE?WWB                         
CMPGE_USED                        00000001
CMPGT                             0000025E
CMPGT?WCL                         
CMPGT?WWB                         
CMPGT_USED                        00000001
CMPLT                             00000264
CMPLT?WWB                         
CMPLT_USED                        00000001
CMP_USED                          00000001
COUNT?TCW                         
COUNTT                            00000006
COUNTT_USED                       00000001
COUNT_DELAY                       00000032
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 145


SYMBOL TABLE
  LABEL                             VALUE 

CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       00000193
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DIV                               000002A2
DIV32DIV                          000002A6
DIV?CWW                           
DIV?WCW                           
DIV?WWW                           
DIV_USED                          00000001
DONE                              00000001
DUNN                              0000031C
DUNN3                             0000031E
DUNNRET                           00000320
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 146


SYMBOL TABLE
  LABEL                             VALUE 

EEPGD                             00000007
EEPROM_START                      00F00000
END?                              
FAST                              00000001
FERR                              00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FLTS                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000019
GOSUB?L                           
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HPWM                              00000060
HPWM?CWC                          
HPWM_USED                         00000001
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000019
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000019
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 147


SYMBOL TABLE
  LABEL                             VALUE 

HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              00000322
INPUTT                            000001F4
INPUTT_USED                       00000001
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
JUMPMAN                           00000310
JUMPMAN_USED                      00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 148


SYMBOL TABLE
  LABEL                             VALUE 

KBI3                              00000007
L00001                            000005C6
L00002                            00000752
L00003                            000005CA
L00004                            000006E4
L00005                            000006DA
L00007                            0000083A
L00008                            000009CE
L00009                            0000083E
L00010                            00000960
L00011                            00000956
L?CALL                            
L?GOTO                            
LABEL?L                           
LAND                              0000028A
LAND?BBW                          
LAND_USED                         00000001
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            000000F0
LCDOUT?C                          
LCDOUTCOUNT?C                     
LCDOUTDEC?                        
LCDOUTJ                           000000EE
LCDOUTJ_USED                      00000001
LCDOUTNUM?W                       
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 149


SYMBOL TABLE
  LABEL                             VALUE 

LCDOUT_USED                       00000001
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          4
LCD_DREG                          PORTC
LCD_EBIT                          3
LCD_EREG                          PORTC
LCD_LINES                         2
LCD_RSBIT                         0
LCD_RSREG                         PORTC
LCD_RWBIT                         00000000
LCD_RWREG                         00000F82
LOR                               00000298
LOR?BBW                           
LOR_USED                          00000001
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MCLR                              00000003
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MUL                               000002D2
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 150


SYMBOL TABLE
  LABEL                             VALUE 

MUL?WCW                           
MUL_USED                          00000001
N                                 00000004
NEXT?WCL                          
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OSC                               4
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
PAUSEUS                           0000022E
PAUSEUSL                          00000230
PAUSEUS_USED                      00000001
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR                               00000F9E
PIR1                              00000F9E
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 151


SYMBOL TABLE
  LABEL                             VALUE 

PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_BANK                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PWM1CON                           00000FB7
R                                 00000002
R0                                00000001
R1                                00000003
R2                                00000005
R3                                00000007
R4                                00000009
R5                                0000000B
R6                                0000000D
R7                                0000000F
R8                                00000011
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000003
RAM_END                           000002FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 152


SYMBOL TABLE
  LABEL                             VALUE 

RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD16                              00000007
RE3                               00000003
RESET_ORG                         00000000
RETURN?                           
RI                                00000004
RM1                               0000001A
RM2                               0000001B
RR1                               0000001C
RR2                               0000001D
RS1                               0000001E
RS2                               0000001F
RSEN                              00000001
RST?RP                            
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 153


SYMBOL TABLE
  LABEL                             VALUE 

SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SEROUT2DEC                        00000198
SEROUT2DEC_USED                   00000001
SEROUT2SEND                       000001D4
SEROUT2SEND_USED                  00000001
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SUB?WCW                           
SUB?WWW                           
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 154


SYMBOL TABLE
  LABEL                             VALUE 

T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T1                                00000013
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2                                00000015
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3                                00000017
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 155


SYMBOL TABLE
  LABEL                             VALUE 

TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 156


SYMBOL TABLE
  LABEL                             VALUE 

TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 157


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PORTB??5                         PORTB, 005h
_PORTH                            00000F82
_PORTL                            00000F81
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_TRISH                            00000F94
_TRISL                            00000F93
_USED                             00000001
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 158


SYMBOL TABLE
  LABEL                             VALUE 

_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F2420                         00000001
_dT_1                             00000020
_dT_2                             00000022
_flow_decimal                     00000024
_flow_pwm_val                     00000026
_flow_ref                         00000028
_flow_val                         0000002A
_frequency                        0000002C
_get_flowrate                     000009D0
_get_temp1_value                  000004EC
_get_temp2_value                  00000754
_i                                0000002E
_main                             000003FE
_n                                00000030
_n1                               00000032
_n2                               00000034
_pwm_val                          00000036
_resistor_ref                     00000066
_t1adval                          00000038
_t1res_lower                      0000003A
_t1res_upper                      0000003C
_t1resistance                     0000003E
_t1temp_decimal                   00000040
_t1temp_integer                   00000042
_t1temp_lower                     00000044
_t1temp_ref                       00000046
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 159


SYMBOL TABLE
  LABEL                             VALUE 

_t1temp_upper                     00000048
_t1temp_val                       0000004A
_t2adval                          0000004C
_t2res_lower                      0000004E
_t2res_upper                      00000050
_t2resistance                     00000052
_t2temp_decimal                   00000054
_t2temp_integer                   00000056
_t2temp_lower                     00000058
_t2temp_ref                       0000005A
_t2temp_upper                     0000005C
_t2temp_val                       0000005E
_temp_pwm_val                     00000060
_temp_ref                         0000007E
_throttle                         00000062
_x                                00000064
adcinloop                         00000220
cmpnoteq                          00000276
countloop                         00000034
divloop                           000002AA
divok                             000002C4
hpwm2                             000000D0
hpwm24                            000000E2
hpwm242                           000000E4
hpwmdone                          000000CA
lcdchkcd                          00000168
lcdloop                           00000176
lcdout1                           0000014C
lcdoutcom                         0000014A
lcdsend                           00000174
main                              00000322
pauseusdone                       00000256
pauseush                          00000242
pauseusloop                       0000023C
serout2ddig                       000001C4
serout2send1                      000001E4


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.51                      EXCHAN~1.ASM   2-27-2018  17:57:57         PAGE 160


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXX--------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  2624
Program Memory Bytes Free: 13760


Errors   :     0
Warnings :     0 reported,     4 suppressed
Messages :     0 reported,     0 suppressed

