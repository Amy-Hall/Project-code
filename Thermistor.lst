MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.47, (c) 1998, 2006 microEngineering Labs, Inc. All Rights Reserved.  
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\PBP\18F2420.INC"
                      00001 ;****************************************************************
                      00002 ;*  18F2420.INC                                                 *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 06/05/06                                        *
                      00008 ;*  Version   : 2.47                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00017         LIST
                      00018         LIST p = 18F2420, r = dec, w = -311, w = -230, f = inhx32
                      00019         INCLUDE "P18F2420.INC"   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F2420 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01291         LIST
300000 F1FF           00020         __CONFIG    _CONFIG1H, _OSC_XT_1H
300002 F31F           00021         __CONFIG    _CONFIG2H, _WDT_ON_2H & _WDTPS_512_2H
300004 FDFF           00022         __CONFIG    _CONFIG3H, _PBADEN_OFF_3H
300006 FFBB           00023         __CONFIG    _CONFIG4L, _LVP_OFF_4L & _XINST_OFF_4L
                      00026         LIST
  00F00000            00027 EEPROM_START    EQU     0F00000h
  00000040            00028 BLOCK_SIZE      EQU     64
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 #define         OSC              8
                      00010 #define         LCD_DREG                 PORTC
                      00011 #define         LCD_DBIT                 4
                      00012 #define         LCD_RSREG                PORTC
                      00013 #define         LCD_RSBIT                0
                      00014 #define         LCD_EREG                 PORTC
                      00015 #define         LCD_EBIT                 3
                      00016 #define         LCD_BITS                 4
                      00017 #define         LCD_LINES                2
                      00018 #define         ADC_BITS                 10
                      00019 #define         ADC_SAMPLEUS             50 
                      00020 
  00000000            00021 RAM_START                       EQU     00000h
  000002FF            00022 RAM_END                         EQU     002FFh
  00000003            00023 RAM_BANKS                       EQU     00003h
  00000080            00024 BANK0_START                     EQU     00080h
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000FF            00025 BANK0_END                       EQU     000FFh
  00000100            00026 BANK1_START                     EQU     00100h
  000001FF            00027 BANK1_END                       EQU     001FFh
  00000200            00028 BANK2_START                     EQU     00200h
  000002FF            00029 BANK2_END                       EQU     002FFh
  00000000            00030 BANKA_START                     EQU     00000h
  0000007F            00031 BANKA_END                       EQU     0007Fh
                      00032 
  00000000            00033 FLAGS                           EQU     RAM_START + 000h
  00000001            00034 R0                              EQU     RAM_START + 001h
  00000003            00035 R1                              EQU     RAM_START + 003h
  00000005            00036 R2                              EQU     RAM_START + 005h
  00000007            00037 R3                              EQU     RAM_START + 007h
  00000009            00038 R4                              EQU     RAM_START + 009h
  0000000B            00039 R5                              EQU     RAM_START + 00Bh
  0000000D            00040 R6                              EQU     RAM_START + 00Dh
  0000000F            00041 R7                              EQU     RAM_START + 00Fh
  00000011            00042 R8                              EQU     RAM_START + 011h
  00000013            00043 T1                              EQU     RAM_START + 013h
  00000015            00044 T2                              EQU     RAM_START + 015h
  00000017            00045 T3                              EQU     RAM_START + 017h
  00000019            00046 GOP                             EQU     RAM_START + 019h
  0000001A            00047 RM1                             EQU     RAM_START + 01Ah
  0000001B            00048 RM2                             EQU     RAM_START + 01Bh
  0000001C            00049 RR1                             EQU     RAM_START + 01Ch
  0000001D            00050 RR2                             EQU     RAM_START + 01Dh
  0000001E            00051 RS1                             EQU     RAM_START + 01Eh
  0000001F            00052 RS2                             EQU     RAM_START + 01Fh
  00000020            00053 _i                              EQU     RAM_START + 020h
  00000022            00054 _n                              EQU     RAM_START + 022h
  00000024            00055 _t1adval                        EQU     RAM_START + 024h
  00000026            00056 _t1res_lower                    EQU     RAM_START + 026h
  00000028            00057 _t1res_upper                    EQU     RAM_START + 028h
  0000002A            00058 _t1resistance                   EQU     RAM_START + 02Ah
  0000002C            00059 _t1temp_decimal                 EQU     RAM_START + 02Ch
  0000002E            00060 _t1temp_integer                 EQU     RAM_START + 02Eh
  00000030            00061 _t1temp_lower                   EQU     RAM_START + 030h
  00000032            00062 _t1temp_upper                   EQU     RAM_START + 032h
  00000034            00063 _resistor_ref                   EQU     RAM_START + 034h
  0000004C            00064 _temp_ref                       EQU     RAM_START + 04Ch
  00000F81            00065 _PORTL                          EQU      PORTB
  00000F82            00066 _PORTH                          EQU      PORTC
  00000F93            00067 _TRISL                          EQU      TRISB
  00000F94            00068 _TRISH                          EQU      TRISC
                      00069 
                      00070 ; EEPROM data.
                      00071 
                      00072 
                      00073         INCLUDE "THERMI~1.MAC"
                      00001 
                      00281         LIST
                      00074         INCLUDE "C:\PBP\PBPPIC18.LIB"
                      00001 ;******************************************************************
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 ;*  PBPPIC18.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2006 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 06/05/06                                          *
                      00008 ;*  Version   : 2.47                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00079   LIST
                      00080 ; Oscillator is 8MHz
                      01147   LIST
000000                01148     ORG RESET_ORG               ; Reset vector at 0
                      01152   LIST
000000 6A00           01153         clrf    FLAGS           ; Clear all flags on reset
                      01157   LIST
000002 EF17 F001      01158         goto    INIT            ; Finish initialization
                      02911   LIST
000006 50E9           02912 LCDOUTJ movf    FSR0L, W        ; Jumpman entry
                      02918   LIST
000008 6E08           02919 LCDOUT  movwf   R3 + 1          ; Save char
                      02920 
00000A 9682           02921         bcf     LCD_EREG, LCD_EBIT      ; Set E low
00000C 9082           02922         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
00000E 9082           02923         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      02924 
000010 9694           02925         bcf     (LCD_EREG) + 12h, LCD_EBIT      ; Set E to output
000012 9094           02926         bcf     (LCD_RSREG) + 12h, LCD_RSBIT    ; Set RS to output
000014 9094           02927         bcf     (LCD_RWREG) + 12h, LCD_RWBIT    ; Set RW to output
                      02928     if (LCD_BITS == 8)
                      02929         clrf    (LCD_DREG) + 12h        ; Set port to all output
                      02930     else
                      02931       if (LCD_DBIT == 0)
                      02932         movlw   0f0h
                      02933       else
000016 0E0F           02934         movlw   0fh
                      02935       endif
000018 1694           02936         andwf   (LCD_DREG) + 12h, F     ; Set proper half of port to output
00001A 5008           02937         movf    R3 + 1, W       ; Get back char
                      02938     endif
                      02939 
00001C B200           02940         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
00001E D022           02941         bra     lcdout1         ; Yes
                      02942 
000020 0E3A           02943         movlw   high 15000      ; Wait at least 15ms
000022 6E02           02944         movwf   R0 + 1
000024 0E98           02945         movlw   low 15000
000026 EC9F F000      02946         call    PAUSEUSL
                      02947 
00002A 0E33           02948         movlw   33h             ; Init lcd
00002C 6E07           02949         movwf   R3              ; Save char
00002E D82F           02950         rcall   lcdloop         ; Send init
                      02951 
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000030 0E13           02952         movlw   high 5000       ; Wait at least 5ms
000032 6E02           02953         movwf   R0 + 1
000034 0E88           02954         movlw   low 5000
000036 EC9F F000      02955         call    PAUSEUSL
                      02956 
00003A D829           02957         rcall   lcdloop         ; Send init again
                      02958 
00003C 0E64           02959         movlw   100             ; Wait at least 100us
00003E EC9E F000      02960         call    PAUSEUS
                      02961 
000042 D825           02962         rcall   lcdloop         ; Send init more time
                      02963 
000044 0E64           02964         movlw   100             ; Wait at least 100us
000046 EC9E F000      02965         call    PAUSEUS
                      02966 
                      02967     if (LCD_BITS != 8)
00004A 0E22           02968         movlw   22h             ; Set 4-bit mode
00004C 6E07           02969         movwf   R3              ; Save character
00004E D81F           02970         rcall   lcdloop         ; Set interface to 4-bit mode
                      02971     endif
                      02972 
                      02973     if (LCD_BITS == 8)
                      02974       if (LCD_LINES == 1)
                      02975         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      02976       else
                      02977         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      02978       endif
                      02979     else
                      02980       if (LCD_LINES == 1)
                      02981         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      02982       else
000050 0E28           02983         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      02984       endif
                      02985     endif
000052 D807           02986         rcall   lcdoutcom       ; Send function set
                      02987 
000054 0E0C           02988         movlw   0ch             ; Display on, no cursor, no blink
000056 D805           02989         rcall   lcdoutcom
                      02990 
000058 0E06           02991         movlw   06h             ; Lcd entry mode set, increment, no shift
00005A D803           02992         rcall   lcdoutcom
                      02993 
00005C 8200           02994         bsf     LCDINITFLAG     ; Set to initialized
                      02995 
00005E 5008           02996         movf    R3 + 1, W       ; Get saved char back
000060 D001           02997         bra     lcdout1
                      02998 
000062 8000           02999 lcdoutcom bsf   LCDCDFLAG       ; Set command
                      03000 
000064 6E07           03001 lcdout1 movwf   R3              ; Save char if 4 bit
000066 A000           03002         btfss   LCDCDFLAG       ; Command this time?
000068 D00B           03003         bra     lcdchkcd        ; No
                      03004 
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00006A 9082           03005         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
00006C 0803           03006         sublw   3
00006E E30E           03007         bnc     lcdsend         ; Short delay
                      03008 
000070 D80D           03009         rcall   lcdsend         ; Long delay
000072 0E07           03010         movlw   high LCD_COMMANDUS      ; Wait for command to complete
000074 6E02           03011         movwf   R0 + 1
000076 0ED0           03012         movlw   low LCD_COMMANDUS
000078 EC9F F000      03013         call    PAUSEUSL
00007C 80D8           03014         bsf     STATUS, C       ; Set no timeout for Serout2mod
00007E 0012           03015         return
                      03016 
000080 8000           03017 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
000082 08FE           03018         sublw   0feh            ; Command next time? (char still in W)
000084 B4D8           03019         btfsc   STATUS, Z
000086 EF14 F001      03020         goto    DUNN            ; Yes - nothing to do this time (C set)
                      03021 
00008A 8082           03022         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
                      03023 
00008C                03024 lcdsend
                      03025     if (LCD_BITS == 8)
                      03026 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03027         movf    R3, W           ; Get char back
                      03028         movwf   LCD_DREG        ; Write char to the port
                      03029       if (OSC > 16)
                      03030         nop                     ; Minimum 1us enable time
                      03031       endif
                      03032       if (OSC > 20)
                      03033         bra     $ + 2
                      03034       endif
                      03035       if (OSC > 25)
                      03036         bra     $ + 2
                      03037       endif
                      03038       if (OSC > 33)
                      03039         nop
                      03040       endif
                      03041       if (OSC > 40)
                      03042         bra     $ + 2
                      03043       endif
                      03044         bcf     LCDCDFLAG       ; Indicate data next time
                      03045         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03046     else
                      03047 
                      03048       if (LCD_DBIT == 0)
                      03049         swapf   R3, F           ; Swap top and bottom nibbles
                      03050       endif
                      03051 
00008C A000           03052         btfss   LCDCDFLAG       ; First time through only
00008E 9000           03053 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03054 
000090 8682           03055         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03056 
                      03057       if (LCD_DBIT == 0)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03058         movlw   0f0h            ; Clear lcd data port
                      03059       else
000092 0E0F           03060         movlw   0fh             ; Clear lcd data port
                      03061       endif
000094 1682           03062         andwf   LCD_DREG, F
                      03063 
000096 5007           03064         movf    R3, W           ; Isolate proper nibble of char
                      03065       if (LCD_DBIT == 0)
                      03066         andlw   0fh
                      03067       else
000098 0BF0           03068         andlw   0f0h
                      03069       endif
00009A 1282           03070         iorwf   LCD_DREG, F     ; Write char to port
                      03071 
                      03072       if (OSC > 20)
                      03073         nop                     ; Minimum 1us enable time
                      03074       endif
                      03075       if (OSC > 25)
                      03076         bra     $ + 2
                      03077       endif
                      03078       if (OSC > 33)
                      03079         nop
                      03080       endif
                      03081       if (OSC > 40)
                      03082         bra     $ + 2
                      03083       endif
                      03084 
00009C 9682           03085         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
00009E 3A07           03086         swapf   R3, F           ; Get to other nibble
                      03087 
                      03088       if (OSC > 20)
                      03089         nop                     ; Minimum 1us not-enabled time
                      03090       endif
                      03091       if (OSC > 25)
                      03092         bra     $ + 2
                      03093       endif
                      03094       if (OSC > 33)
                      03095         nop
                      03096       endif
                      03097       if (OSC > 40)
                      03098         bra     $ + 2
                      03099       endif
                      03100 
0000A0 B000           03101         btfsc   LCDCDFLAG
0000A2 D7F5           03102         bra     lcdloop         ; Send lower 4 to lcd
                      03103     endif
                      03104 
0000A4 0E32           03105         movlw   LCD_DATAUS      ; Wait for data operation to complete
0000A6 EC9E F000      03106         call    PAUSEUS
0000AA 80D8           03107         bsf     STATUS, C       ; Set no timeout for Serout2mod
0000AC EF14 F001      03108         goto    DUNN
                      05040   LIST
0000B0 9E19           05041 SEROUT2DEC bcf  GOP, 7          ; Blanking off
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000B2 500A           05042         movf    R4 + 1, W       ; 0 digits?
0000B4 B4D8           05043         btfsc   STATUS, Z
0000B6 8E19           05044         bsf     GOP, 7          ; Yes, blanking on
0000B8 0E05           05045         movlw   5               ; 5 digits max to do
0000BA 6E09           05046         movwf   R4
0000BC 0E27           05047         movlw   high 10000      ; Find 10,000s
0000BE 6E04           05048         movwf   R1 + 1
0000C0 0E10           05049         movlw   low 10000
0000C2 D80C           05050         rcall   serout2ddig     ; Do the work
                      05051       ifdef SEROUT2TO_USED
                      05052         btfss   STATUS, C       ; Timed out?
                      05053         return                  ; Yes
                      05054       endif
0000C4 0E03           05055         movlw   high 1000       ; Find 1,000s
0000C6 6E04           05056         movwf   R1 + 1
0000C8 0EE8           05057         movlw   low 1000
0000CA D808           05058         rcall   serout2ddig     ; Do the work
                      05059       ifdef SEROUT2TO_USED
                      05060         btfss   STATUS, C       ; Timed out?
                      05061         return                  ; Yes
                      05062       endif
0000CC 6A04           05063         clrf    R1 + 1          ; Find 100s
0000CE 0E64           05064         movlw   100
0000D0 D805           05065         rcall   serout2ddig     ; Do the work
                      05066       ifdef SEROUT2TO_USED
                      05067         btfss   STATUS, C       ; Timed out?
                      05068         return                  ; Yes
                      05069       endif
0000D2 6A04           05070         clrf    R1 + 1          ; Find 10s
0000D4 0E0A           05071         movlw   10
0000D6 D802           05072         rcall   serout2ddig     ; Do the work
                      05073       ifdef SEROUT2TO_USED
                      05074         btfss   STATUS, C       ; Timed out?
                      05075         return                  ; Yes
                      05076       endif
0000D8 5005           05077         movf    R2, W           ; Get the 1s
0000DA D008           05078         bra     SEROUT2SEND     ; Send the 1s and exit
                      05079 
0000DC 6E03           05080 serout2ddig movwf R1            ; Save last piece
0000DE 5006           05081         movf    R2 + 1, W       ; Move remainder to dividend
0000E0 6E02           05082         movwf   R0 + 1
0000E2 5005           05083         movf    R2, W
0000E4 6E01           05084         movwf   R0
0000E6 ECD7 F000      05085         call    DIV             ; Do the math
0000EA 5001           05086         movf    R0, W           ; Get the result
                      05087 ;       bra     SEROUT2SEND     ; Fall through
                      05094   LIST
0000EC 6E01           05095 SEROUT2SEND movwf R0            ; Save char for a moment
0000EE 4E09           05096         dcfsnz  R4, F           ; Bump down count while we're here
0000F0 9E19           05097         bcf     GOP, 7
0000F2 500A           05098         movf    R4 + 1, W       ; Get number of digits to send
0000F4 E003           05099         bz      serout2send1    ; If zero digits skip count compare
0000F6 5C09           05100         subwf   R4, W           ; Send if within count
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000F8 B0D8           05101         btfsc   STATUS, C
0000FA 0012           05102         return
0000FC 5001           05103 serout2send1 movf  R0, W        ; Get char back
                      05104       ifdef SEROUT2TO_USED
                      05105         bsf     STATUS, C       ; Set carry for no timeout in case of blanking
                      05106       endif
0000FE A4D8           05107         btfss   STATUS, Z       ; If zero, goto blank check
000100 9E19           05108         bcf     GOP, 7          ; Not zero so clear blank
000102 BE19           05109         btfsc   GOP, 7          ; If blanking on, don't send
000104 0012           05110         return
000106 0F30           05111         addlw   '0'             ; Add ASCII offset
000108 EF0E F001      05112         goto    JUMPMAN         ; Send it
                      05930   LIST
00010C                05931 ADCIN
                      05932       ifdef ADCON2
00010C 36E8           05933         rlcf    WREG, F         ; Move channel into proper position
00010E 36E8           05934         rlcf    WREG, F
000110 0B3C           05935         andlw   03ch            ; Mask channel
000112 0901           05936         iorlw   1               ; Turn on ADC
000114 12C2           05937         iorwf   ADCON0, F       ; Set the one bits
000116 09C0           05938         iorlw   0c0h
000118 16C2           05939         andwf   ADCON0, F       ; Clear the zero bits
00011A 50C0           05940         movf    ADCON2, W       ; Set up clock source
00011C 0BF8           05941         andlw   0f8h
00011E 0903           05942         iorlw   (ADC_CLOCK) & 7
000120 6EC0           05943         movwf   ADCON2
                      05944       else
                      05945         rlcf    WREG, F         ; Move channel into proper position
                      05946         rlcf    WREG, F
                      05947         rlcf    WREG, F
                      05948         andlw   038h            ; Mask channel
                      05949         iorlw   (((ADC_CLOCK) & 3) << 6) | 1    ; Set up clock source and turn on ADC
                      05950         movwf   ADCON0
                      05951       endif
                      05952       if ((ADC_SAMPLEUS) != 0)
000122 0E00           05953         movlw   (ADC_SAMPLEUS) >> 8     ; Get sample time
000124 6E02           05954         movwf   R0 + 1
000126 0E32           05955         movlw   low (ADC_SAMPLEUS)
000128 EC9F F000      05956         call    PAUSEUSL        ; Wait sample time
                      05957       endif
00012C 82C2           05958         bsf     ADCON0, GO_DONE ; Start conversion
00012E B2C2           05959 adcinloop btfsc ADCON0, GO_DONE ; Wait for conversion to complete
000130 D7FE           05960         bra     adcinloop
                      05961       if ((ADC_BITS) <= 8)
                      05962         clrf    R0 + 1
                      05963         movf    ADRESH, W       ; Get 8-bit result
                      05964       else
000132 50C4           05965         movf    ADRESH, W       ; Get 16-bit result
000134 6E02           05966         movwf   R0 + 1
000136 50C3           05967         movf    ADRESL, W
                      05968       endif
000138 EF14 F001      05969         goto    DUNN
                      06319   LIST
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00013C 6A02           06320 PAUSEUS clrf    R0 + 1          ; 1
00013E 0FF4           06321 PAUSEUSL addlw  -12             ; 1 Subtract overhead
000140 6E01           06322         movwf   R0              ; 1
000142 1E02           06323         comf    R0 + 1, F       ; 1
000144 0EFE           06324         movlw   -2              ; 1
000146 A0D8           06325         btfss   STATUS, C       ; 1 / 2
000148 D003           06326         bra     pauseush        ; 2 / 0
00014A 2601           06327 pauseusloop addwf R0, F         ; 1
00014C B0D8           06328         btfsc   STATUS, C       ; 1 / 2
00014E D7FD           06329         bra     pauseusloop     ; 2 / 0
000150 2601           06330 pauseush addwf  R0, F           ; 1 Do an extra countdown
                      06331         CLRWDT?NOP              ; 1 Keep Watchdog clear
                          M     ifndef NO_CLRWDT
000152 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000154 3E02           06332         incfsz  R0 + 1, F       ; 1 / 2
000156 D7F9           06333         bra     pauseusloop     ; 2 / 0
000158 0000           06334         nop                     ; 1
00015A B001           06335         btfsc   R0, 0           ; 1 / 2
00015C D000           06336         bra     $ + 2           ; 2 / 0 Burn an extra cycle
00015E B001           06337         btfsc   R0, 0           ; 1 / 2
000160 D000           06338         bra     $ + 2           ; 2 / 0 Burn an extra cycle
000162 0012           06339         return                  ; 2 + 3 (call + setup)
                      07120   LIST
000164 6E03           07121 CMPGE   movwf   R1
000166 0E03           07122         movlw   3               ; Mask for = >
000168 D006           07123         bra     CMP
                      07153   LIST
00016A 6E03           07154 CMPGT   movwf   R1
00016C 0E01           07155         movlw   1               ; Mask for >
00016E D003           07156         bra     CMP
                      07219   LIST
000170 6E03           07220 CMPLT   movwf   R1
000172 0E04           07221         movlw   4               ; Mask for <
000174 D000           07222         bra     CMP
                      07271   LIST
000176 6E09           07272 CMP     movwf   R4              ; Save compare state
000178 5004           07273         movf    R1 + 1, W       ; Flags = MSB(R0) - MSB(R1)
00017A 5C02           07274         subwf   R0 + 1, W
00017C E102           07275         bnz     cmpnoteq        ; If unequal then done
00017E 5003           07276         movf    R1, W           ; Flags = LSB(R0) - LSB(R1)
000180 5C01           07277         subwf   R0, W
000182 0E04           07278 cmpnoteq movlw  4               ; W = 4 if R0 < R1
000184 B0D8           07279         btfsc   STATUS, C
000186 0E01           07280         movlw   1               ; W = 1 if R0 > R1
000188 B4D8           07281         btfsc   STATUS, Z
00018A 0E02           07282         movlw   2               ; W = 2 if R0 == R1
00018C 1409           07283         andwf   R4, W           ; Mask for compare state
00018E A4D8           07284         btfss   STATUS, Z
000190 0EFF           07285         movlw   -1
000192 EF14 F001      07286         goto    DUNN
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07306   LIST
000196 66E8           07307 LAND    tstfsz  WREG
000198 0EFF           07308         movlw   -1
00019A 1401           07309         andwf   R0, W
00019C A4D8           07310         btfss   STATUS, Z
00019E 0EFF           07311         movlw   -1
0001A0 EF14 F001      07312         goto    DUNN
                      07328   LIST
0001A4 1001           07329 LOR     iorwf   R0, W
0001A6 A4D8           07330         btfss   STATUS, Z
0001A8 0EFF           07331         movlw   -1
0001AA EF14 F001      07332         goto    DUNN
                      07496   LIST
0001AE 6A06           07497 DIV     clrf    R2 + 1
0001B0 6A05           07498         clrf    R2
                      07499 
0001B2 0E10           07500 DIV32DIV movlw   16
0001B4 6E07           07501         movwf   R3
                      07502 
0001B6 3402           07503 divloop rlcf    R0 + 1, W
0001B8 3605           07504         rlcf    R2, F
0001BA 3606           07505         rlcf    R2 + 1, F
0001BC 5003           07506         movf    R1, W
0001BE 5E05           07507         subwf   R2, F
0001C0 5004           07508         movf    R1 + 1, W
0001C2 5A06           07509         subwfb  R2 + 1, F
                      07510 
0001C4 E205           07511         bc      divok
0001C6 5003           07512         movf    R1, W
0001C8 2605           07513         addwf   R2, F
0001CA 5004           07514         movf    R1 + 1, W
0001CC 2206           07515         addwfc  R2 + 1, F
                      07516 
0001CE 90D8           07517         bcf     STATUS, C
                      07518 
0001D0 3601           07519 divok   rlcf    R0, F
0001D2 3602           07520         rlcf    R0 + 1, F
                      07521 
0001D4 2E07           07522         decfsz  R3, F
0001D6 D7EF           07523         bra     divloop
0001D8 5001           07524         movf    R0, W           ; Get low byte to W
0001DA EF14 F001      07525         goto    DUNN
                      07542   LIST
0001DE 5003           07543 MUL     movf    R1, W
0001E0 0207           07544         mulwf   R3              ; R1 * R3 = PRODHL
                      07545 
0001E2 CFF4 F006      07546         movff   PRODH, R2 + 1
0001E6 CFF3 F005      07547         movff   PRODL, R2
                      07548 
0001EA 5004           07549         movf    R1 + 1, W
0001EC 0208           07550         mulwf   R3 + 1          ; R1 + 1 * R3 + 1 = PRODHL
                      07551 
0001EE CFF4 F002      07552         movff   PRODH, R0 + 1
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F2 CFF3 F001      07553         movff   PRODL, R0
                      07554 
0001F6 5003           07555         movf    R1, W
0001F8 0208           07556         mulwf   R3 + 1          ; R1 * R3 + 1 = PRODHL
                      07557 
0001FA 50F3           07558         movf    PRODL, W        ; Add cross products
0001FC 2606           07559         addwf   R2 + 1, F
0001FE 50F4           07560         movf    PRODH, W
000200 2201           07561         addwfc  R0, F
000202 6AE8           07562         clrf    WREG
000204 2202           07563         addwfc  R0 + 1, F
                      07564 
000206 5004           07565         movf    R1 + 1, W
000208 0207           07566         mulwf   R3              ; R1 + 1 * R3 = PRODHL
                      07567 
00020A 50F3           07568         movf    PRODL, W        ; Add cross products
00020C 2606           07569         addwf   R2 + 1, F
00020E 50F4           07570         movf    PRODH, W
000210 2201           07571         addwfc  R0, F
000212 6AE8           07572         clrf    WREG
000214 2202           07573         addwfc  R0 + 1, F
                      07574 
000216 5005           07575         movf    R2, W           ; Get low byte to W
000218 EF14 F001      07576         goto    DUNN
                      07627   LIST
00021C 6EE9           07628 JUMPMAN movwf   FSR0L
00021E 6AFB           07629         clrf    PCLATU
000220 5012           07630         movf    R8 + 1, W
000222 6EFA           07631         movwf   PCLATH
000224 5011           07632         movf    R8, W
000226 6EF9           07633         movwf   PCL
                      07647   LIST
000228 0100           07648 DUNN    movlb   0               ; 1 Reset banks to 0
                      07649 DUNN3   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
00022A 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
00022C 0012           07650 DUNNRET return                  ; 2 Done
                      07663   LIST
00022E                07664 INIT
                      07708   LIST
00022E                07709 main
                      00075 
                      00076         MOVE?CW 005h, _temp_ref
                          M         CHK?RP  _temp_ref
                          M     if (((_temp_ref) > BANKA_END) & ((_temp_ref) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref)
                          M PREV_BANK = high (_temp_ref)
                          M       endif
                          M     endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         movlw   low (005h)
                          M         movwf   _temp_ref
                          M         movlw   high (005h)
                          M         movwf   (_temp_ref) + 1
                          M     else
                          M       if (low (005h) == 0)
                          M         clrf    _temp_ref
                          M       else
00022E 0E05               M         movlw   low (005h)
000230 6E4C               M         movwf   _temp_ref
                          M       endif
                          M       if ((high (005h)) == 0)
000232 6A4D               M         clrf    (_temp_ref) + 1
                          M       else
                          M         movlw   high (005h)
                          M         movwf   (_temp_ref) + 1
                          M       endif
                          M     endif
                      00077         MOVE?CW 00Ah, _temp_ref + 00002h
                          M         CHK?RP  _temp_ref + 00002h
                          M     if (((_temp_ref + 00002h) > BANKA_END) & ((_temp_ref + 00002h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00002h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00002h)
                          M PREV_BANK = high (_temp_ref + 00002h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   _temp_ref + 00002h
                          M         movlw   high (00Ah)
                          M         movwf   (_temp_ref + 00002h) + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    _temp_ref + 00002h
                          M       else
000234 0E0A               M         movlw   low (00Ah)
000236 6E4E               M         movwf   _temp_ref + 00002h
                          M       endif
                          M       if ((high (00Ah)) == 0)
000238 6A4F               M         clrf    (_temp_ref + 00002h) + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (_temp_ref + 00002h) + 1
                          M       endif
                          M     endif
                      00078         MOVE?CW 00Fh, _temp_ref + 00004h
                          M         CHK?RP  _temp_ref + 00004h
                          M     if (((_temp_ref + 00004h) > BANKA_END) & ((_temp_ref + 00004h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00004h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00004h)
                          M PREV_BANK = high (_temp_ref + 00004h)
                          M       endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Fh)
                          M         movwf   _temp_ref + 00004h
                          M         movlw   high (00Fh)
                          M         movwf   (_temp_ref + 00004h) + 1
                          M     else
                          M       if (low (00Fh) == 0)
                          M         clrf    _temp_ref + 00004h
                          M       else
00023A 0E0F               M         movlw   low (00Fh)
00023C 6E50               M         movwf   _temp_ref + 00004h
                          M       endif
                          M       if ((high (00Fh)) == 0)
00023E 6A51               M         clrf    (_temp_ref + 00004h) + 1
                          M       else
                          M         movlw   high (00Fh)
                          M         movwf   (_temp_ref + 00004h) + 1
                          M       endif
                          M     endif
                      00079         MOVE?CW 014h, _temp_ref + 00006h
                          M         CHK?RP  _temp_ref + 00006h
                          M     if (((_temp_ref + 00006h) > BANKA_END) & ((_temp_ref + 00006h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00006h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00006h)
                          M PREV_BANK = high (_temp_ref + 00006h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (014h)
                          M         movwf   _temp_ref + 00006h
                          M         movlw   high (014h)
                          M         movwf   (_temp_ref + 00006h) + 1
                          M     else
                          M       if (low (014h) == 0)
                          M         clrf    _temp_ref + 00006h
                          M       else
000240 0E14               M         movlw   low (014h)
000242 6E52               M         movwf   _temp_ref + 00006h
                          M       endif
                          M       if ((high (014h)) == 0)
000244 6A53               M         clrf    (_temp_ref + 00006h) + 1
                          M       else
                          M         movlw   high (014h)
                          M         movwf   (_temp_ref + 00006h) + 1
                          M       endif
                          M     endif
                      00080         MOVE?CW 019h, _temp_ref + 00008h
                          M         CHK?RP  _temp_ref + 00008h
                          M     if (((_temp_ref + 00008h) > BANKA_END) & ((_temp_ref + 00008h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00008h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00008h)
                          M PREV_BANK = high (_temp_ref + 00008h)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (019h)
                          M         movwf   _temp_ref + 00008h
                          M         movlw   high (019h)
                          M         movwf   (_temp_ref + 00008h) + 1
                          M     else
                          M       if (low (019h) == 0)
                          M         clrf    _temp_ref + 00008h
                          M       else
000246 0E19               M         movlw   low (019h)
000248 6E54               M         movwf   _temp_ref + 00008h
                          M       endif
                          M       if ((high (019h)) == 0)
00024A 6A55               M         clrf    (_temp_ref + 00008h) + 1
                          M       else
                          M         movlw   high (019h)
                          M         movwf   (_temp_ref + 00008h) + 1
                          M       endif
                          M     endif
                      00081         MOVE?CW 01Eh, _temp_ref + 0000Ah
                          M         CHK?RP  _temp_ref + 0000Ah
                          M     if (((_temp_ref + 0000Ah) > BANKA_END) & ((_temp_ref + 0000Ah) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Ah) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Ah)
                          M PREV_BANK = high (_temp_ref + 0000Ah)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (01Eh)
                          M         movwf   _temp_ref + 0000Ah
                          M         movlw   high (01Eh)
                          M         movwf   (_temp_ref + 0000Ah) + 1
                          M     else
                          M       if (low (01Eh) == 0)
                          M         clrf    _temp_ref + 0000Ah
                          M       else
00024C 0E1E               M         movlw   low (01Eh)
00024E 6E56               M         movwf   _temp_ref + 0000Ah
                          M       endif
                          M       if ((high (01Eh)) == 0)
000250 6A57               M         clrf    (_temp_ref + 0000Ah) + 1
                          M       else
                          M         movlw   high (01Eh)
                          M         movwf   (_temp_ref + 0000Ah) + 1
                          M       endif
                          M     endif
                      00082         MOVE?CW 023h, _temp_ref + 0000Ch
                          M         CHK?RP  _temp_ref + 0000Ch
                          M     if (((_temp_ref + 0000Ch) > BANKA_END) & ((_temp_ref + 0000Ch) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Ch) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Ch)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_temp_ref + 0000Ch)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (023h)
                          M         movwf   _temp_ref + 0000Ch
                          M         movlw   high (023h)
                          M         movwf   (_temp_ref + 0000Ch) + 1
                          M     else
                          M       if (low (023h) == 0)
                          M         clrf    _temp_ref + 0000Ch
                          M       else
000252 0E23               M         movlw   low (023h)
000254 6E58               M         movwf   _temp_ref + 0000Ch
                          M       endif
                          M       if ((high (023h)) == 0)
000256 6A59               M         clrf    (_temp_ref + 0000Ch) + 1
                          M       else
                          M         movlw   high (023h)
                          M         movwf   (_temp_ref + 0000Ch) + 1
                          M       endif
                          M     endif
                      00083         MOVE?CW 028h, _temp_ref + 0000Eh
                          M         CHK?RP  _temp_ref + 0000Eh
                          M     if (((_temp_ref + 0000Eh) > BANKA_END) & ((_temp_ref + 0000Eh) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 0000Eh) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 0000Eh)
                          M PREV_BANK = high (_temp_ref + 0000Eh)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (028h)
                          M         movwf   _temp_ref + 0000Eh
                          M         movlw   high (028h)
                          M         movwf   (_temp_ref + 0000Eh) + 1
                          M     else
                          M       if (low (028h) == 0)
                          M         clrf    _temp_ref + 0000Eh
                          M       else
000258 0E28               M         movlw   low (028h)
00025A 6E5A               M         movwf   _temp_ref + 0000Eh
                          M       endif
                          M       if ((high (028h)) == 0)
00025C 6A5B               M         clrf    (_temp_ref + 0000Eh) + 1
                          M       else
                          M         movlw   high (028h)
                          M         movwf   (_temp_ref + 0000Eh) + 1
                          M       endif
                          M     endif
                      00084         MOVE?CW 02Dh, _temp_ref + 00010h
                          M         CHK?RP  _temp_ref + 00010h
                          M     if (((_temp_ref + 00010h) > BANKA_END) & ((_temp_ref + 00010h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00010h) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_temp_ref + 00010h)
                          M PREV_BANK = high (_temp_ref + 00010h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (02Dh)
                          M         movwf   _temp_ref + 00010h
                          M         movlw   high (02Dh)
                          M         movwf   (_temp_ref + 00010h) + 1
                          M     else
                          M       if (low (02Dh) == 0)
                          M         clrf    _temp_ref + 00010h
                          M       else
00025E 0E2D               M         movlw   low (02Dh)
000260 6E5C               M         movwf   _temp_ref + 00010h
                          M       endif
                          M       if ((high (02Dh)) == 0)
000262 6A5D               M         clrf    (_temp_ref + 00010h) + 1
                          M       else
                          M         movlw   high (02Dh)
                          M         movwf   (_temp_ref + 00010h) + 1
                          M       endif
                          M     endif
                      00085         MOVE?CW 032h, _temp_ref + 00012h
                          M         CHK?RP  _temp_ref + 00012h
                          M     if (((_temp_ref + 00012h) > BANKA_END) & ((_temp_ref + 00012h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00012h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00012h)
                          M PREV_BANK = high (_temp_ref + 00012h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   _temp_ref + 00012h
                          M         movlw   high (032h)
                          M         movwf   (_temp_ref + 00012h) + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    _temp_ref + 00012h
                          M       else
000264 0E32               M         movlw   low (032h)
000266 6E5E               M         movwf   _temp_ref + 00012h
                          M       endif
                          M       if ((high (032h)) == 0)
000268 6A5F               M         clrf    (_temp_ref + 00012h) + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (_temp_ref + 00012h) + 1
                          M       endif
                          M     endif
                      00086         MOVE?CW 037h, _temp_ref + 00014h
                          M         CHK?RP  _temp_ref + 00014h
                          M     if (((_temp_ref + 00014h) > BANKA_END) & ((_temp_ref + 00014h) < (0f01h + BANKA_END)))
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((_temp_ref + 00014h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00014h)
                          M PREV_BANK = high (_temp_ref + 00014h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (037h)
                          M         movwf   _temp_ref + 00014h
                          M         movlw   high (037h)
                          M         movwf   (_temp_ref + 00014h) + 1
                          M     else
                          M       if (low (037h) == 0)
                          M         clrf    _temp_ref + 00014h
                          M       else
00026A 0E37               M         movlw   low (037h)
00026C 6E60               M         movwf   _temp_ref + 00014h
                          M       endif
                          M       if ((high (037h)) == 0)
00026E 6A61               M         clrf    (_temp_ref + 00014h) + 1
                          M       else
                          M         movlw   high (037h)
                          M         movwf   (_temp_ref + 00014h) + 1
                          M       endif
                          M     endif
                      00087         MOVE?CW 03Ch, _temp_ref + 00016h
                          M         CHK?RP  _temp_ref + 00016h
                          M     if (((_temp_ref + 00016h) > BANKA_END) & ((_temp_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_temp_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_temp_ref + 00016h)
                          M PREV_BANK = high (_temp_ref + 00016h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (03Ch)
                          M         movwf   _temp_ref + 00016h
                          M         movlw   high (03Ch)
                          M         movwf   (_temp_ref + 00016h) + 1
                          M     else
                          M       if (low (03Ch) == 0)
                          M         clrf    _temp_ref + 00016h
                          M       else
000270 0E3C               M         movlw   low (03Ch)
000272 6E62               M         movwf   _temp_ref + 00016h
                          M       endif
                          M       if ((high (03Ch)) == 0)
000274 6A63               M         clrf    (_temp_ref + 00016h) + 1
                          M       else
                          M         movlw   high (03Ch)
                          M         movwf   (_temp_ref + 00016h) + 1
                          M       endif
                          M     endif
                      00088         MOVE?CW 013DBh, _resistor_ref
                          M         CHK?RP  _resistor_ref
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_resistor_ref) > BANKA_END) & ((_resistor_ref) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref)
                          M PREV_BANK = high (_resistor_ref)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (013DBh)
                          M         movwf   _resistor_ref
                          M         movlw   high (013DBh)
                          M         movwf   (_resistor_ref) + 1
                          M     else
                          M       if (low (013DBh) == 0)
                          M         clrf    _resistor_ref
                          M       else
000276 0EDB               M         movlw   low (013DBh)
000278 6E34               M         movwf   _resistor_ref
                          M       endif
                          M       if ((high (013DBh)) == 0)
                          M         clrf    (_resistor_ref) + 1
                          M       else
00027A 0E13               M         movlw   high (013DBh)
00027C 6E35               M         movwf   (_resistor_ref) + 1
                          M       endif
                          M     endif
                      00089         MOVE?CW 00FF1h, _resistor_ref + 00002h
                          M         CHK?RP  _resistor_ref + 00002h
                          M     if (((_resistor_ref + 00002h) > BANKA_END) & ((_resistor_ref + 00002h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00002h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00002h)
                          M PREV_BANK = high (_resistor_ref + 00002h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00FF1h)
                          M         movwf   _resistor_ref + 00002h
                          M         movlw   high (00FF1h)
                          M         movwf   (_resistor_ref + 00002h) + 1
                          M     else
                          M       if (low (00FF1h) == 0)
                          M         clrf    _resistor_ref + 00002h
                          M       else
00027E 0EF1               M         movlw   low (00FF1h)
000280 6E36               M         movwf   _resistor_ref + 00002h
                          M       endif
                          M       if ((high (00FF1h)) == 0)
                          M         clrf    (_resistor_ref + 00002h) + 1
                          M       else
000282 0E0F               M         movlw   high (00FF1h)
000284 6E37               M         movwf   (_resistor_ref + 00002h) + 1
                          M       endif
                          M     endif
                      00090         MOVE?CW 00CE3h, _resistor_ref + 00004h
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _resistor_ref + 00004h
                          M     if (((_resistor_ref + 00004h) > BANKA_END) & ((_resistor_ref + 00004h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00004h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00004h)
                          M PREV_BANK = high (_resistor_ref + 00004h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00CE3h)
                          M         movwf   _resistor_ref + 00004h
                          M         movlw   high (00CE3h)
                          M         movwf   (_resistor_ref + 00004h) + 1
                          M     else
                          M       if (low (00CE3h) == 0)
                          M         clrf    _resistor_ref + 00004h
                          M       else
000286 0EE3               M         movlw   low (00CE3h)
000288 6E38               M         movwf   _resistor_ref + 00004h
                          M       endif
                          M       if ((high (00CE3h)) == 0)
                          M         clrf    (_resistor_ref + 00004h) + 1
                          M       else
00028A 0E0C               M         movlw   high (00CE3h)
00028C 6E39               M         movwf   (_resistor_ref + 00004h) + 1
                          M       endif
                          M     endif
                      00091         MOVE?CW 00A7Dh, _resistor_ref + 00006h
                          M         CHK?RP  _resistor_ref + 00006h
                          M     if (((_resistor_ref + 00006h) > BANKA_END) & ((_resistor_ref + 00006h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00006h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00006h)
                          M PREV_BANK = high (_resistor_ref + 00006h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00A7Dh)
                          M         movwf   _resistor_ref + 00006h
                          M         movlw   high (00A7Dh)
                          M         movwf   (_resistor_ref + 00006h) + 1
                          M     else
                          M       if (low (00A7Dh) == 0)
                          M         clrf    _resistor_ref + 00006h
                          M       else
00028E 0E7D               M         movlw   low (00A7Dh)
000290 6E3A               M         movwf   _resistor_ref + 00006h
                          M       endif
                          M       if ((high (00A7Dh)) == 0)
                          M         clrf    (_resistor_ref + 00006h) + 1
                          M       else
000292 0E0A               M         movlw   high (00A7Dh)
000294 6E3B               M         movwf   (_resistor_ref + 00006h) + 1
                          M       endif
                          M     endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00092         MOVE?CW 00898h, _resistor_ref + 00008h
                          M         CHK?RP  _resistor_ref + 00008h
                          M     if (((_resistor_ref + 00008h) > BANKA_END) & ((_resistor_ref + 00008h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00008h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00008h)
                          M PREV_BANK = high (_resistor_ref + 00008h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00898h)
                          M         movwf   _resistor_ref + 00008h
                          M         movlw   high (00898h)
                          M         movwf   (_resistor_ref + 00008h) + 1
                          M     else
                          M       if (low (00898h) == 0)
                          M         clrf    _resistor_ref + 00008h
                          M       else
000296 0E98               M         movlw   low (00898h)
000298 6E3C               M         movwf   _resistor_ref + 00008h
                          M       endif
                          M       if ((high (00898h)) == 0)
                          M         clrf    (_resistor_ref + 00008h) + 1
                          M       else
00029A 0E08               M         movlw   high (00898h)
00029C 6E3D               M         movwf   (_resistor_ref + 00008h) + 1
                          M       endif
                          M     endif
                      00093         MOVE?CW 00715h, _resistor_ref + 0000Ah
                          M         CHK?RP  _resistor_ref + 0000Ah
                          M     if (((_resistor_ref + 0000Ah) > BANKA_END) & ((_resistor_ref + 0000Ah) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Ah) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Ah)
                          M PREV_BANK = high (_resistor_ref + 0000Ah)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00715h)
                          M         movwf   _resistor_ref + 0000Ah
                          M         movlw   high (00715h)
                          M         movwf   (_resistor_ref + 0000Ah) + 1
                          M     else
                          M       if (low (00715h) == 0)
                          M         clrf    _resistor_ref + 0000Ah
                          M       else
00029E 0E15               M         movlw   low (00715h)
0002A0 6E3E               M         movwf   _resistor_ref + 0000Ah
                          M       endif
                          M       if ((high (00715h)) == 0)
                          M         clrf    (_resistor_ref + 0000Ah) + 1
                          M       else
0002A2 0E07               M         movlw   high (00715h)
0002A4 6E3F               M         movwf   (_resistor_ref + 0000Ah) + 1
                          M       endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00094         MOVE?CW 005DFh, _resistor_ref + 0000Ch
                          M         CHK?RP  _resistor_ref + 0000Ch
                          M     if (((_resistor_ref + 0000Ch) > BANKA_END) & ((_resistor_ref + 0000Ch) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Ch) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Ch)
                          M PREV_BANK = high (_resistor_ref + 0000Ch)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (005DFh)
                          M         movwf   _resistor_ref + 0000Ch
                          M         movlw   high (005DFh)
                          M         movwf   (_resistor_ref + 0000Ch) + 1
                          M     else
                          M       if (low (005DFh) == 0)
                          M         clrf    _resistor_ref + 0000Ch
                          M       else
0002A6 0EDF               M         movlw   low (005DFh)
0002A8 6E40               M         movwf   _resistor_ref + 0000Ch
                          M       endif
                          M       if ((high (005DFh)) == 0)
                          M         clrf    (_resistor_ref + 0000Ch) + 1
                          M       else
0002AA 0E05               M         movlw   high (005DFh)
0002AC 6E41               M         movwf   (_resistor_ref + 0000Ch) + 1
                          M       endif
                          M     endif
                      00095         MOVE?CW 004E6h, _resistor_ref + 0000Eh
                          M         CHK?RP  _resistor_ref + 0000Eh
                          M     if (((_resistor_ref + 0000Eh) > BANKA_END) & ((_resistor_ref + 0000Eh) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 0000Eh) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 0000Eh)
                          M PREV_BANK = high (_resistor_ref + 0000Eh)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (004E6h)
                          M         movwf   _resistor_ref + 0000Eh
                          M         movlw   high (004E6h)
                          M         movwf   (_resistor_ref + 0000Eh) + 1
                          M     else
                          M       if (low (004E6h) == 0)
                          M         clrf    _resistor_ref + 0000Eh
                          M       else
0002AE 0EE6               M         movlw   low (004E6h)
0002B0 6E42               M         movwf   _resistor_ref + 0000Eh
                          M       endif
                          M       if ((high (004E6h)) == 0)
                          M         clrf    (_resistor_ref + 0000Eh) + 1
                          M       else
0002B2 0E04               M         movlw   high (004E6h)
0002B4 6E43               M         movwf   (_resistor_ref + 0000Eh) + 1
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      00096         MOVE?CW 0041Bh, _resistor_ref + 00010h
                          M         CHK?RP  _resistor_ref + 00010h
                          M     if (((_resistor_ref + 00010h) > BANKA_END) & ((_resistor_ref + 00010h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00010h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00010h)
                          M PREV_BANK = high (_resistor_ref + 00010h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0041Bh)
                          M         movwf   _resistor_ref + 00010h
                          M         movlw   high (0041Bh)
                          M         movwf   (_resistor_ref + 00010h) + 1
                          M     else
                          M       if (low (0041Bh) == 0)
                          M         clrf    _resistor_ref + 00010h
                          M       else
0002B6 0E1B               M         movlw   low (0041Bh)
0002B8 6E44               M         movwf   _resistor_ref + 00010h
                          M       endif
                          M       if ((high (0041Bh)) == 0)
                          M         clrf    (_resistor_ref + 00010h) + 1
                          M       else
0002BA 0E04               M         movlw   high (0041Bh)
0002BC 6E45               M         movwf   (_resistor_ref + 00010h) + 1
                          M       endif
                          M     endif
                      00097         MOVE?CW 00376h, _resistor_ref + 00012h
                          M         CHK?RP  _resistor_ref + 00012h
                          M     if (((_resistor_ref + 00012h) > BANKA_END) & ((_resistor_ref + 00012h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00012h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00012h)
                          M PREV_BANK = high (_resistor_ref + 00012h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00376h)
                          M         movwf   _resistor_ref + 00012h
                          M         movlw   high (00376h)
                          M         movwf   (_resistor_ref + 00012h) + 1
                          M     else
                          M       if (low (00376h) == 0)
                          M         clrf    _resistor_ref + 00012h
                          M       else
0002BE 0E76               M         movlw   low (00376h)
0002C0 6E46               M         movwf   _resistor_ref + 00012h
                          M       endif
                          M       if ((high (00376h)) == 0)
                          M         clrf    (_resistor_ref + 00012h) + 1
                          M       else
0002C2 0E03               M         movlw   high (00376h)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002C4 6E47               M         movwf   (_resistor_ref + 00012h) + 1
                          M       endif
                          M     endif
                      00098         MOVE?CW 002EEh, _resistor_ref + 00014h
                          M         CHK?RP  _resistor_ref + 00014h
                          M     if (((_resistor_ref + 00014h) > BANKA_END) & ((_resistor_ref + 00014h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00014h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00014h)
                          M PREV_BANK = high (_resistor_ref + 00014h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (002EEh)
                          M         movwf   _resistor_ref + 00014h
                          M         movlw   high (002EEh)
                          M         movwf   (_resistor_ref + 00014h) + 1
                          M     else
                          M       if (low (002EEh) == 0)
                          M         clrf    _resistor_ref + 00014h
                          M       else
0002C6 0EEE               M         movlw   low (002EEh)
0002C8 6E48               M         movwf   _resistor_ref + 00014h
                          M       endif
                          M       if ((high (002EEh)) == 0)
                          M         clrf    (_resistor_ref + 00014h) + 1
                          M       else
0002CA 0E02               M         movlw   high (002EEh)
0002CC 6E49               M         movwf   (_resistor_ref + 00014h) + 1
                          M       endif
                          M     endif
                      00099         MOVE?CW 0027Fh, _resistor_ref + 00016h
                          M         CHK?RP  _resistor_ref + 00016h
                          M     if (((_resistor_ref + 00016h) > BANKA_END) & ((_resistor_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00016h)
                          M PREV_BANK = high (_resistor_ref + 00016h)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0027Fh)
                          M         movwf   _resistor_ref + 00016h
                          M         movlw   high (0027Fh)
                          M         movwf   (_resistor_ref + 00016h) + 1
                          M     else
                          M       if (low (0027Fh) == 0)
                          M         clrf    _resistor_ref + 00016h
                          M       else
0002CE 0E7F               M         movlw   low (0027Fh)
0002D0 6E4A               M         movwf   _resistor_ref + 00016h
                          M       endif
                          M       if ((high (0027Fh)) == 0)
                          M         clrf    (_resistor_ref + 00016h) + 1
                          M       else
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002D2 0E02               M         movlw   high (0027Fh)
0002D4 6E4B               M         movwf   (_resistor_ref + 00016h) + 1
                          M       endif
                          M     endif
                      00100         MOVE?CB 001h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) > BANKA_END) & ((ADCON0) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    ADCON0
                          M     else
0002D6 0E01               M         movlw   low (001h)
0002D8 6EC2               M         movwf   ADCON0
                          M     endif
                      00101         MOVE?CB 000h, ADCON1
                          M         CHK?RP  ADCON1
                          M     if (((ADCON1) > BANKA_END) & ((ADCON1) < (0f01h + BANKA_END)))
                          M       if (((ADCON1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON1)
                          M PREV_BANK = high (ADCON1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0002DA 6AC1               M         clrf    ADCON1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   ADCON1
                          M     endif
                      00102         MOVE?CB 087h, ADCON2
                          M         CHK?RP  ADCON2
                          M     if (((ADCON2) > BANKA_END) & ((ADCON2) < (0f01h + BANKA_END)))
                          M       if (((ADCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON2)
                          M PREV_BANK = high (ADCON2)
                          M       endif
                          M     endif
                          M     if (low (087h) == 0)
                          M         clrf    ADCON2
                          M     else
0002DC 0E87               M         movlw   low (087h)
0002DE 6EC0               M         movwf   ADCON2
                          M     endif
                      00103         MOVE?CB 0FFh, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) > BANKA_END) & ((TRISA) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISA
                          M     else
0002E0 0EFF               M         movlw   low (0FFh)
0002E2 6E92               M         movwf   TRISA
                          M     endif
                      00104 
                      00105         LABEL?L _main   
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _main
                          M         XALL
                          M     else
0002E4                    M _main
                          M     endif
                      00106         ADCIN?CW        000h, _t1adval
                          M         MOVE?CA 000h
0002E4 0E00               M         movlw   low (000h)
                          M         L?CALL  ADCIN
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    ADCIN
                          M     else
                          M       if ((ADCIN) < 1)
                          M         call    ADCIN
                          M       else
                          M         if ((ADCIN) > $)
                          M         call    ADCIN
                          M         else
                          M           if ((ADCIN) < ($ - 3ffh))
                          M         call    ADCIN
                          M           else
0002E6 DF12               M         rcall   ADCIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _t1adval
                          M         MOVE?AB _t1adval
                          M         CHK?RP  _t1adval
                          M     if (((_t1adval) > BANKA_END) & ((_t1adval) < (0f01h + BANKA_END)))
                          M       if (((_t1adval) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_t1adval)
                          M PREV_BANK = high (_t1adval)
                          M       endif
                          M     endif
0002E8 6E24               M         movwf   _t1adval
                          M         MOVE?BB (R0)  + 1, (_t1adval) + 1
0002EA C002 F025          M         movff   (R0) + 1, (_t1adval) + 1
                      00107         DIV?CWW 0ABE0h, _t1adval, T1
                          M         MOVE?CW 0ABE0h, R0
                          M         CHK?RP  R0
                          M     if (((R0)    > BANKA_END) & ((R0)    < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (0ABE0h)
                          M         movwf   R0
                          M         movlw   high (0ABE0h)
                          M         movwf   (R0)   + 1
                          M     else
                          M       if (low (0ABE0h) == 0)
                          M         clrf    R0
                          M       else
0002EE 0EE0               M         movlw   low (0ABE0h)
0002F0 6E01               M         movwf   R0
                          M       endif
                          M       if ((high (0ABE0h)) == 0)
                          M         clrf    (R0)   + 1
                          M       else
0002F2 0EAB               M         movlw   high (0ABE0h)
0002F4 6E02               M         movwf   (R0)   + 1
                          M       endif
                          M     endif
                          M         MOVE?WW _t1adval, R1
                          M         MOVE?BB _t1adval, R1
0002F6 C024 F003          M         movff   _t1adval, R1
                          M         MOVE?BB (_t1adval) + 1, (R1) + 1
0002FA C025 F004          M         movff   (_t1adval) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
0002FE DF57               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000300 6E13               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000302 C002 F014          M         movff   (R0) + 1, (T1) + 1
                      00108         MUL?WCW T1, 033h, T1
                          M         MOVE?WW T1,  R3
                          M         MOVE?BB T1,  R3
000306 C013 F007          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
00030A C014 F008          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?CW 033h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (033h)
                          M         movwf   R1
                          M         movlw   high (033h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (033h) == 0)
                          M         clrf    R1
                          M       else
00030E 0E33               M         movlw   low (033h)
000310 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (033h)) == 0)
000312 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (033h)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000314 DF64               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000316 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000318 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00109         SUB?WCW T1, 00898h, _t1resistance
                          M     if (_t1resistance == T1)
                          M         movlw   low (00898h)
                          M         CHK?RP  _t1resistance
                          M         subwf   _t1resistance, F
                          M         movlw   (00898h) >> 8
                          M         subwfb  _t1resistance + 1, F
                          M     else
00031C 0E98               M         movlw   low (00898h)
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
00031E 5C13               M         subwf   T1,  W
                          M         MOVE?AB _t1resistance
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
000320 6E2A               M         movwf   _t1resistance
000322 0E08               M         movlw   (00898h) >> 8
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000324 5814               M         subwfb  T1  + 1, W
                          M         MOVE?AB _t1resistance + 1
                          M         CHK?RP  _t1resistance + 1
                          M     if (((_t1resistance + 1) > BANKA_END) & ((_t1resistance + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance + 1)
                          M PREV_BANK = high (_t1resistance + 1)
                          M       endif
                          M     endif
000326 6E2B               M         movwf   _t1resistance + 1
                          M     endif
                      00110         CMPGT?WWB       _t1resistance, _resistor_ref, T1
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
000328 C02A F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
00032C C02B F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref, R1
                          M         MOVE?BB (_resistor_ref) + 1, (R1) + 1
000330 C035 F004          M         movff   (_resistor_ref) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref
                          M         CHK?RP  _resistor_ref
                          M     if (((_resistor_ref) > BANKA_END) & ((_resistor_ref) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref)
                          M PREV_BANK = high (_resistor_ref)
                          M       endif
                          M     endif
000334 5034               M         movf    _resistor_ref, W
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
                          M         call    CMPGT
                          M           else
000336 DF19               M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000338 6E13               M         movwf   T1
                      00111         CMPLT?WWB       _t1resistance, _resistor_ref + 00016h, T2
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
00033A C02A F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
00033E C02B F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA _resistor_ref + 00016h, R1
                          M         MOVE?BB (_resistor_ref + 00016h) + 1, (R1) + 1
000342 C04B F004          M         movff   (_resistor_ref + 00016h) + 1, (R1) + 1
                          M         MOVE?BA _resistor_ref + 00016h
                          M         CHK?RP  _resistor_ref + 00016h
                          M     if (((_resistor_ref + 00016h) > BANKA_END) & ((_resistor_ref + 00016h) < (0f01h + BANKA_END)))
                          M       if (((_resistor_ref + 00016h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_resistor_ref + 00016h)
                          M PREV_BANK = high (_resistor_ref + 00016h)
                          M       endif
                          M     endif
000346 504A               M         movf    _resistor_ref + 00016h, W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
                          M         call    CMPLT
                          M           else
000348 DF13               M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00034A 6E15               M         movwf   T2
                      00112         LOR?BBW T1, T2, T2
                          M         MOVE?BB T1,   R0
00034C C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000350 5015               M         movf    T2,  W
                          M         L?CALL  LOR
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LOR
                          M     else
                          M       if ((LOR)   < 1)
                          M         call    LOR
                          M       else
                          M         if ((LOR)   > $)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LOR
                          M         else
                          M           if ((LOR)   < ($ - 3ffh))
                          M         call    LOR
                          M           else
000352 DF28               M         rcall   LOR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000354 6E15               M         movwf   T2
000356 6E16               M         movwf   T2   + 1
                      00113         CMPF?WL T2, L00001
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000358 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00035A 5015               M         movf    T2,  W
00035C 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00001
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
00035E B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
000360 EFDD F001          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
                          M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00114         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000364 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000366 DE50               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00115         LCDOUT?C        001h
                          M         MOVE?CA 001h
000368 0E01               M         movlw   low (001h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00036A DE4E               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00116         LCDOUTCOUNT?C   000h
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00036C 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00117         LCDOUTNUM?W     _t1resistance
                          M         MOVE?WW _t1resistance, R2
                          M         MOVE?BB _t1resistance, R2
00036E C02A F005          M         movff   _t1resistance, R2
                          M         MOVE?BB (_t1resistance) + 1, (R2) + 1
000372 C02B F006          M         movff   (_t1resistance) + 1, (R2) + 1
                      00118         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000376 0E06               M         movlw   low (LCDOUTJ)
000378 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
00037A 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
                          M         call    SEROUT2DEC
                          M           else
00037C DE99               M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00119         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
00037E 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000380 DE43               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00120         LCDOUT?C        0C0h
                          M         MOVE?CA 0C0h
000382 0EC0               M         movlw   low (0C0h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000384 DE41               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00121         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
000386 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000388 DE3F               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00122         LCDOUT?C        075h
                          M         MOVE?CA 075h
00038A 0E75               M         movlw   low (075h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00038C DE3D               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00123         LCDOUT?C        074h
                          M         MOVE?CA 074h
00038E 0E74               M         movlw   low (074h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000390 DE3B               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00124         LCDOUT?C        020h
                          M         MOVE?CA 020h
000392 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000394 DE39               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00125         LCDOUT?C        06Fh
                          M         MOVE?CA 06Fh
000396 0E6F               M         movlw   low (06Fh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
000398 DE37               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00126         LCDOUT?C        066h
                          M         MOVE?CA 066h
00039A 0E66               M         movlw   low (066h)
                          M         L?CALL  LCDOUT
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
00039C DE35               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00127         LCDOUT?C        020h
                          M         MOVE?CA 020h
00039E 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003A0 DE33               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00128         LCDOUT?C        072h
                          M         MOVE?CA 072h
0003A2 0E72               M         movlw   low (072h)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003A4 DE31               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00129         LCDOUT?C        061h
                          M         MOVE?CA 061h
0003A6 0E61               M         movlw   low (061h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003A8 DE2F               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00130         LCDOUT?C        06Eh
                          M         MOVE?CA 06Eh
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003AA 0E6E               M         movlw   low (06Eh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003AC DE2D               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00131         LCDOUT?C        067h
                          M         MOVE?CA 067h
0003AE 0E67               M         movlw   low (067h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003B0 DE2B               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00132         LCDOUT?C        065h
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CA 065h
0003B2 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
                          M         call    LCDOUT
                          M           else
0003B4 DE29               M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00133         GOTO?L  L00002
                          M         L?GOTO  L00002
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00002))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00002
                          M     else
                          M       if ((L00002) < 1)
                          M         goto    L00002
                          M       else
                          M         if ((L00002) > $)
0003B6 EF38 F003          M         goto    L00002
                          M         else
                          M           if ((L00002) < ($ - 3ffh))
                          M         goto    L00002
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         bra     L00002
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00134         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
                          M     else
0003BA                    M L00001
                          M     endif
                      00135         MOVE?CW 000h, _i
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (000h)
                          M         movwf   _i
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
                          M     else
                          M       if (low (000h) == 0)
0003BA 6A20               M         clrf    _i
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _i
                          M       endif
                          M       if ((high (000h)) == 0)
0003BC 6A21               M         clrf    (_i)   + 1
                          M       else
                          M         movlw   high (000h)
                          M         movwf   (_i)   + 1
                          M       endif
                          M     endif
                      00136         LABEL?L L00003  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         LALL
                          M L00003
                          M         XALL
                          M     else
0003BE                    M L00003
                          M     endif
                      00137         CMPGT?WCL       _i, 00Bh, L00004
                          M         MOVE?WW _i,  R0
                          M         MOVE?BB _i,  R0
0003BE C020 F001          M         movff   _i,  R0
                          M         MOVE?BB (_i)  + 1, (R0)   + 1
0003C2 C021 F002          M         movff   (_i) + 1, (R0) + 1
                          M         MOVE?CB (00Bh) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) > BANKA_END) & ((R1 + 1) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((00Bh) >> 8) == 0)
0003C6 6A04               M         clrf    R1 + 1
                          M     else
                          M         movlw   low ((00Bh) >> 8)
                          M         movwf   R1 + 1
                          M     endif
                          M         MOVE?CA low (00Bh)
0003C8 0E0B               M         movlw   low (low (00Bh))
                          M         L?CALL  CMPGT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGT
                          M     else
                          M       if ((CMPGT) < 1)
                          M         call    CMPGT
                          M       else
                          M         if ((CMPGT) > $)
                          M         call    CMPGT
                          M         else
                          M           if ((CMPGT) < ($ - 3ffh))
                          M         call    CMPGT
                          M           else
0003CA DECF               M         rcall   CMPGT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00004
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00004))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M       else
                          M         if ((L00004) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M         else
                          M           if ((L00004) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M           else
                          M             if ((L00004) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00004
                          M             else
                          M         bov     L00004
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0003CC A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00004
                          M       else
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((L00004) < 1)
                          M         goto    L00004
                          M         else
                          M           if ((L00004) > $)
0003CE EF6C F002          M         goto    L00004
                          M           else
                          M             if ((L00004) < ($ - 3ffh))
                          M         goto    L00004
                          M             else
                          M         bra     L00004
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00138         AOUT?WWW        _resistor_ref, _i, T1
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0003D2 90D8               M         bcf     STATUS, C
0003D4 3420               M         rlcf    _i,   W
0003D6 6EE9               M         movwf   FSR0L
0003D8 3421               M         rlcf    _i   + 1, W
0003DA 6EEA               M         movwf   FSR0H
0003DC 0E34               M         movlw   low (_resistor_ref)
0003DE 26E9               M         addwf   FSR0L, F
0003E0 0E00               M         movlw   (_resistor_ref) >> 8
0003E2 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T1
0003E4 CFEF F013          M         movff   INDF0, T1
                          M         MOVE?BB PREINC0, T1   + 1
0003E8 CFEC F014          M         movff   PREINC0, T1 + 1
                      00139         CMPLT?WWB       _t1resistance, T1, T1
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
0003EC C02A F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
0003F0 C02B F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA T1,   R1
                          M         MOVE?BB (T1)  + 1, (R1)   + 1
0003F4 C014 F004          M         movff   (T1) + 1, (R1) + 1
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F8 5013               M         movf    T1,  W
                          M         L?CALL  CMPLT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLT
                          M     else
                          M       if ((CMPLT) < 1)
                          M         call    CMPLT
                          M       else
                          M         if ((CMPLT) > $)
                          M         call    CMPLT
                          M         else
                          M           if ((CMPLT) < ($ - 3ffh))
                          M         call    CMPLT
                          M           else
0003FA DEBA               M         rcall   CMPLT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0003FC 6E13               M         movwf   T1
                      00140         ADD?WCW _i, 001h, T2
                          M     if (T2   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T2
                          M         incf    T2,   F
                          M         btfsc   STATUS, Z
                          M         incf    T2   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T2
                          M         addwf   T2,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T2   + 1, F
                          M       endif
                          M     else
0003FE 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000400 2420               M         addwf   _i,  W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000402 6E15               M         movwf   T2
000404 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000406 2021               M         addwfc  _i  + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
000408 6E16               M         movwf   T2 + 1
                          M     endif
                      00141         AOUT?WWW        _resistor_ref, T2, T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00040A 90D8               M         bcf     STATUS, C
00040C 3415               M         rlcf    T2,   W
00040E 6EE9               M         movwf   FSR0L
000410 3416               M         rlcf    T2   + 1, W
000412 6EEA               M         movwf   FSR0H
000414 0E34               M         movlw   low (_resistor_ref)
000416 26E9               M         addwf   FSR0L, F
000418 0E00               M         movlw   (_resistor_ref) >> 8
00041A 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, T2
00041C CFEF F015          M         movff   INDF0, T2
                          M         MOVE?BB PREINC0, T2   + 1
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000420 CFEC F016          M         movff   PREINC0, T2 + 1
                      00142         CMPGE?WWB       _t1resistance, T2, T2
                          M         MOVE?WW _t1resistance, R0
                          M         MOVE?BB _t1resistance, R0
000424 C02A F001          M         movff   _t1resistance, R0
                          M         MOVE?BB (_t1resistance) + 1, (R0) + 1
000428 C02B F002          M         movff   (_t1resistance) + 1, (R0) + 1
                          M         MOVE?WWA T2,   R1
                          M         MOVE?BB (T2)  + 1, (R1)   + 1
00042C C016 F004          M         movff   (T2) + 1, (R1) + 1
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000430 5015               M         movf    T2,  W
                          M         L?CALL  CMPGE
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPGE
                          M     else
                          M       if ((CMPGE) < 1)
                          M         call    CMPGE
                          M       else
                          M         if ((CMPGE) > $)
                          M         call    CMPGE
                          M         else
                          M           if ((CMPGE) < ($ - 3ffh))
                          M         call    CMPGE
                          M           else
000432 DE98               M         rcall   CMPGE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000434 6E15               M         movwf   T2
                      00143         LAND?BBW        T1, T2, T2
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB T1,   R0
000436 C013 F001          M         movff   T1,  R0
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00043A 5015               M         movf    T2,  W
                          M         L?CALL  LAND
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LAND
                          M     else
                          M       if ((LAND)  < 1)
                          M         call    LAND
                          M       else
                          M         if ((LAND)  > $)
                          M         call    LAND
                          M         else
                          M           if ((LAND)  < ($ - 3ffh))
                          M         call    LAND
                          M           else
00043C DEAC               M         rcall   LAND
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00043E 6E15               M         movwf   T2
000440 6E16               M         movwf   T2   + 1
                      00144         CMPF?WL T2, L00005
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000442 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000444 5015               M         movf    T2,  W
000446 1016               M         iorwf   T2  + 1, W
                          M         BIT?GOTO 1, STATUS, Z, L00005
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00005))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M             else
                          M         bov     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (1      == 0)
                          M         btfss   STATUS, Z
                          M       else
000448 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
00044A EF67 F002          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 3ffh))
                          M         goto    L00005
                          M             else
                          M         bra     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00145         ADD?WCW _i, 001h, T1
                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
00044E 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000450 2420               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000452 6E13               M         movwf   T1
000454 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000456 2021               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000458 6E14               M         movwf   T1 + 1
                          M     endif
                      00146         AOUT?WWW        _resistor_ref, T1, _t1res_lower
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00045A 90D8               M         bcf     STATUS, C
00045C 3413               M         rlcf    T1,   W
00045E 6EE9               M         movwf   FSR0L
000460 3414               M         rlcf    T1   + 1, W
000462 6EEA               M         movwf   FSR0H
000464 0E34               M         movlw   low (_resistor_ref)
000466 26E9               M         addwf   FSR0L, F
000468 0E00               M         movlw   (_resistor_ref) >> 8
00046A 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1res_lower
00046C CFEF F026          M         movff   INDF0, _t1res_lower
                          M         MOVE?BB PREINC0, _t1res_lower + 1
000470 CFEC F027          M         movff   PREINC0, _t1res_lower + 1
                      00147         AOUT?WWW        _resistor_ref, _i, _t1res_upper
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
000474 90D8               M         bcf     STATUS, C
000476 3420               M         rlcf    _i,   W
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000478 6EE9               M         movwf   FSR0L
00047A 3421               M         rlcf    _i   + 1, W
00047C 6EEA               M         movwf   FSR0H
00047E 0E34               M         movlw   low (_resistor_ref)
000480 26E9               M         addwf   FSR0L, F
000482 0E00               M         movlw   (_resistor_ref) >> 8
000484 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1res_upper
000486 CFEF F028          M         movff   INDF0, _t1res_upper
                          M         MOVE?BB PREINC0, _t1res_upper + 1
00048A CFEC F029          M         movff   PREINC0, _t1res_upper + 1
                      00148         AOUT?WWW        _temp_ref, _i, _t1temp_lower
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
00048E 90D8               M         bcf     STATUS, C
000490 3420               M         rlcf    _i,   W
000492 6EE9               M         movwf   FSR0L
000494 3421               M         rlcf    _i   + 1, W
000496 6EEA               M         movwf   FSR0H
000498 0E4C               M         movlw   low (_temp_ref)
00049A 26E9               M         addwf   FSR0L, F
00049C 0E00               M         movlw   (_temp_ref) >> 8
00049E 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1temp_lower
0004A0 CFEF F030          M         movff   INDF0, _t1temp_lower
                          M         MOVE?BB PREINC0, _t1temp_lower + 1
0004A4 CFEC F031          M         movff   PREINC0, _t1temp_lower + 1
                      00149         ADD?WCW _i, 001h, T1
                          M     if (T1   == _i)
                          M       if ((001h) == 1)
                          M         CHK?RP  T1
                          M         incf    T1,   F
                          M         btfsc   STATUS, Z
                          M         incf    T1   + 1, F
                          M       else  
                          M         movlw   low (001h)
                          M         CHK?RP  T1
                          M         addwf   T1,   F
                          M         movlw   (001h) >> 8
                          M         addwfc  T1   + 1, F
                          M       endif
                          M     else
0004A8 0E01               M         movlw   low (001h)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
0004AA 2420               M         addwf   _i,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0004AC 6E13               M         movwf   T1
0004AE 0E00               M         movlw   (001h) >> 8
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0004B0 2021               M         addwfc  _i  + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) > BANKA_END) & ((T1 + 1) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
0004B2 6E14               M         movwf   T1 + 1
                          M     endif
                      00150         AOUT?WWW        _temp_ref, T1, _t1temp_upper
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0004B4 90D8               M         bcf     STATUS, C
0004B6 3413               M         rlcf    T1,   W
0004B8 6EE9               M         movwf   FSR0L
0004BA 3414               M         rlcf    T1   + 1, W
0004BC 6EEA               M         movwf   FSR0H
0004BE 0E4C               M         movlw   low (_temp_ref)
0004C0 26E9               M         addwf   FSR0L, F
0004C2 0E00               M         movlw   (_temp_ref) >> 8
0004C4 22EA               M         addwfc  FSR0H, F
                          M         MOVE?BB INDF0, _t1temp_upper
0004C6 CFEF F032          M         movff   INDF0, _t1temp_upper
                          M         MOVE?BB PREINC0, _t1temp_upper + 1
0004CA CFEC F033          M         movff   PREINC0, _t1temp_upper + 1
                      00151         LABEL?L L00005  
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00005
                          M         XALL
                          M     else
0004CE                    M L00005
                          M     endif
                      00152         NEXT?WCL        _i, 001h, L00003
  0000                    M     local endlabel
                          M     if (001h == 1)
                          M         CHK?RP  _i
                          M     if (((_i)    > BANKA_END) & ((_i)    < (0f01h + BANKA_END)))
                          M       if (((_i)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_i)
                          M PREV_BANK = high (_i)
                          M       endif
                          M     endif
0004CE 2A20               M         incf    _i,  F
0004D0 B4D8               M         btfsc   STATUS, Z
0004D2 2A21               M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00003))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if (0      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M             else
                          M         bov     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if (0      == 0)
0004D4 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 3ffh))
                          M         goto    L00003
                          M             else
0004D6 D773               M         bra     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (001h <= 255)
                          M         MOVE?CA 001h
                          M         CHK?RP  _i
                          M         addwf   _i,  F
                          M         BIT?GOTO 0, STATUS, C, L00003
                          M         CHK?RP  _i
                          M         incf    _i  + 1, F
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M       else
                          M         movlw   low (001h)
                          M         CHK?RP  _i
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         addwf   _i,  F
                          M         movlw   high (001h)
                          M         btfsc   STATUS, C
                          M         addlw   1
                          M         bc      endlabel
                          M         addwf   _i  + 1, F
                          M         BIT?GOTO 0, STATUS, C, L00003
                          M       endif
                          M     endif
0004D8                    M endlabel
                      00153         LABEL?L L00004  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00004
                          M         XALL
                          M     else
0004D8                    M L00004
                          M     endif
                      00154         MUL?WCW _t1temp_upper, 00Ah, T1
                          M         MOVE?WW _t1temp_upper, R3
                          M         MOVE?BB _t1temp_upper, R3
0004D8 C032 F007          M         movff   _t1temp_upper, R3
                          M         MOVE?BB (_t1temp_upper) + 1, (R3) + 1
0004DC C033 F008          M         movff   (_t1temp_upper) + 1, (R3) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    R1
                          M       else
0004E0 0E0A               M         movlw   low (00Ah)
0004E2 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
0004E4 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
0004E6 DE7B               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0004E8 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
0004EA C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00155         SUB?WWW _t1resistance, _t1res_lower, T2
                          M     if (T2   == _t1resistance)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T2
                          M         subwf   T2,   F
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T2
                          M         subwfb  T2   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
0004EE 5026               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
0004F0 5C2A               M         subwf   _t1resistance, W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0004F2 6E15               M         movwf   T2
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
                          M     endif
0004F4 5027               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
0004F6 582B               M         subwfb  _t1resistance + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
0004F8 6E16               M         movwf   T2 + 1
                          M     endif
                      00156         MUL?WCW T2, 032h, T2
                          M         MOVE?WW T2,  R3
                          M         MOVE?BB T2,  R3
0004FA C015 F007          M         movff   T2,  R3
                          M         MOVE?BB (T2)  + 1, (R3)   + 1
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004FE C016 F008          M         movff   (T2) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
000502 0E32               M         movlw   low (032h)
000504 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (032h)) == 0)
000506 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000508 DE6A               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T2
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00050A 6E15               M         movwf   T2
                          M         MOVE?BB (R2)  + 1, (T2)   + 1
00050C C006 F016          M         movff   (R2) + 1, (T2) + 1
                      00157         SUB?WWW _t1res_upper, _t1res_lower, T3
                          M     if (T3   == _t1res_upper)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T3
                          M         subwf   T3,   F
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T3
                          M         subwfb  T3   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower)
                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
000510 5026               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
000512 5C28               M         subwf   _t1res_upper, W
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000514 6E17               M         movwf   T3
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000516 5027               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
000518 5829               M         subwfb  _t1res_upper + 1, W
                          M         MOVE?AB T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
00051A 6E18               M         movwf   T3 + 1
                          M     endif
                      00158         DIV?WWW T2, T3, T3
                          M         MOVE?WW T2,   R0
                          M         MOVE?BB T2,  R0
00051C C015 F001          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
000520 C016 F002          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?WW T3,   R1
                          M         MOVE?BB T3,  R1
000524 C017 F003          M         movff   T3,  R1
                          M         MOVE?BB (T3)  + 1, (R1)   + 1
000528 C018 F004          M         movff   (T3) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
00052C DE40               M         rcall   DIV
                          M           endif
                          M         endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T3
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
00052E 6E17               M         movwf   T3
                          M         MOVE?BB (R0)  + 1, (T3)   + 1
000530 C002 F018          M         movff   (R0) + 1, (T3) + 1
                      00159         SUB?WWW T1, T3, T3
                          M     if (T3   == T1)
                          M         MOVE?BA T3
                          M         CHK?RP  T3
                          M         subwf   T3,   F
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  T3
                          M         subwfb  T3   + 1, F
                          M     else
                          M         MOVE?BA T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000534 5017               M         movf    T3,  W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000536 5C13               M         subwf   T1,   W
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000538 6E17               M         movwf   T3
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
00053A 5018               M         movf    T3 + 1, W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00053C 5814               M         subwfb  T1   + 1, W
                          M         MOVE?AB T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
00053E 6E18               M         movwf   T3 + 1
                          M     endif
                      00160         DIV?WCW T3, 00Ah, _t1temp_integer
                          M     if (00Ah == 2)
                          M         bcf     STATUS, C
                          M       if (_t1temp_integer == T3)
                          M         CHK?RP  _t1temp_integer
                          M         rrcf    _t1temp_integer + 1, F
                          M         rrcf    _t1temp_integer, F
                          M       else
                          M         CHK?RP  T3
                          M         rrcf    T3  + 1, W
                          M         MOVE?AB _t1temp_integer + 1
                          M         CHK?RP  T3
                          M         rrcf    T3,  W
                          M         MOVE?AB _t1temp_integer
                          M       endif
                          M     else
                          M         MOVE?WW T3,  R0
                          M         MOVE?BB T3,  R0
000540 C017 F001          M         movff   T3,  R0
                          M         MOVE?BB (T3)  + 1, (R0)   + 1
000544 C018 F002          M         movff   (T3) + 1, (R0) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    R1
                          M       else
000548 0E0A               M         movlw   low (00Ah)
00054A 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
00054C 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
00054E DE2F               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _t1temp_integer
                          M         MOVE?AB _t1temp_integer
                          M         CHK?RP  _t1temp_integer
                          M     if (((_t1temp_integer) > BANKA_END) & ((_t1temp_integer) < (0f01h + BANKA_END)))
                          M       if (((_t1temp_integer) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1temp_integer)
                          M PREV_BANK = high (_t1temp_integer)
                          M       endif
                          M     endif
000550 6E2E               M         movwf   _t1temp_integer
                          M         MOVE?BB (R0)  + 1, (_t1temp_integer) + 1
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000552 C002 F02F          M         movff   (R0) + 1, (_t1temp_integer) + 1
                          M     endif
                      00161         MUL?WCW _t1temp_upper, 00Ah, T1
                          M         MOVE?WW _t1temp_upper, R3
                          M         MOVE?BB _t1temp_upper, R3
000556 C032 F007          M         movff   _t1temp_upper, R3
                          M         MOVE?BB (_t1temp_upper) + 1, (R3) + 1
00055A C033 F008          M         movff   (_t1temp_upper) + 1, (R3) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    R1
                          M       else
00055E 0E0A               M         movlw   low (00Ah)
000560 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
000562 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
000564 DE3C               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000566 6E13               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000568 C006 F014          M         movff   (R2) + 1, (T1) + 1
                      00162         SUB?WWW _t1resistance, _t1res_lower, T2
                          M     if (T2   == _t1resistance)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T2
                          M         subwf   T2,   F
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T2
                          M         subwfb  T2   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower)
                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
00056C 5026               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
00056E 5C2A               M         subwf   _t1resistance, W
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000570 6E15               M         movwf   T2
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
                          M     endif
000572 5027               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1resistance
                          M     if (((_t1resistance) > BANKA_END) & ((_t1resistance) < (0f01h + BANKA_END)))
                          M       if (((_t1resistance) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1resistance)
                          M PREV_BANK = high (_t1resistance)
                          M       endif
                          M     endif
000574 582B               M         subwfb  _t1resistance + 1, W
                          M         MOVE?AB T2   + 1
                          M         CHK?RP  T2 + 1
                          M     if (((T2 + 1) > BANKA_END) & ((T2 + 1) < (0f01h + BANKA_END)))
                          M       if (((T2 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2 + 1)
                          M PREV_BANK = high (T2 + 1)
                          M       endif
                          M     endif
000576 6E16               M         movwf   T2 + 1
                          M     endif
                      00163         MUL?WCW T2, 032h, T2
                          M         MOVE?WW T2,  R3
                          M         MOVE?BB T2,  R3
000578 C015 F007          M         movff   T2,  R3
                          M         MOVE?BB (T2)  + 1, (R3)   + 1
00057C C016 F008          M         movff   (T2) + 1, (R3) + 1
                          M         MOVE?CW 032h, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (032h)
                          M         movwf   R1
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (032h) == 0)
                          M         clrf    R1
                          M       else
000580 0E32               M         movlw   low (032h)
000582 6E03               M         movwf   R1
                          M       endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((high (032h)) == 0)
000584 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (032h)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000586 DE2B               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R2, T2
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    > BANKA_END) & ((T2)    < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000588 6E15               M         movwf   T2
                          M         MOVE?BB (R2)  + 1, (T2)   + 1
00058A C006 F016          M         movff   (R2) + 1, (T2) + 1
                      00164         SUB?WWW _t1res_upper, _t1res_lower, T3
                          M     if (T3   == _t1res_upper)
                          M         MOVE?BA _t1res_lower
                          M         CHK?RP  T3
                          M         subwf   T3,   F
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  T3
                          M         subwfb  T3   + 1, F
                          M     else
                          M         MOVE?BA _t1res_lower
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _t1res_lower
                          M     if (((_t1res_lower) > BANKA_END) & ((_t1res_lower) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower)
                          M PREV_BANK = high (_t1res_lower)
                          M       endif
                          M     endif
00058E 5026               M         movf    _t1res_lower, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
000590 5C28               M         subwf   _t1res_upper, W
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
000592 6E17               M         movwf   T3
                          M         MOVE?BA _t1res_lower + 1
                          M         CHK?RP  _t1res_lower + 1
                          M     if (((_t1res_lower + 1) > BANKA_END) & ((_t1res_lower + 1) < (0f01h + BANKA_END)))
                          M       if (((_t1res_lower + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_lower + 1)
                          M PREV_BANK = high (_t1res_lower + 1)
                          M       endif
                          M     endif
000594 5027               M         movf    _t1res_lower + 1, W
                          M         CHK?RP  _t1res_upper
                          M     if (((_t1res_upper) > BANKA_END) & ((_t1res_upper) < (0f01h + BANKA_END)))
                          M       if (((_t1res_upper) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_t1res_upper)
                          M PREV_BANK = high (_t1res_upper)
                          M       endif
                          M     endif
000596 5829               M         subwfb  _t1res_upper + 1, W
                          M         MOVE?AB T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
000598 6E18               M         movwf   T3 + 1
                          M     endif
                      00165         DIV?WWW T2, T3, T3
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?WW T2,   R0
                          M         MOVE?BB T2,  R0
00059A C015 F001          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
00059E C016 F002          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?WW T3,   R1
                          M         MOVE?BB T3,  R1
0005A2 C017 F003          M         movff   T3,  R1
                          M         MOVE?BB (T3)  + 1, (R1)   + 1
0005A6 C018 F004          M         movff   (T3) + 1, (R1) + 1
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
                          M         call    DIV
                          M           else
0005AA DE01               M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, T3
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
0005AC 6E17               M         movwf   T3
                          M         MOVE?BB (R0)  + 1, (T3)   + 1
0005AE C002 F018          M         movff   (R0) + 1, (T3) + 1
                      00166         SUB?WWW T1, T3, T3
                          M     if (T3   == T1)
                          M         MOVE?BA T3
                          M         CHK?RP  T3
                          M         subwf   T3,   F
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  T3
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         subwfb  T3   + 1, F
                          M     else
                          M         MOVE?BA T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
0005B2 5017               M         movf    T3,  W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005B4 5C13               M         subwf   T1,   W
                          M         MOVE?AB T3
                          M         CHK?RP  T3
                          M     if (((T3)    > BANKA_END) & ((T3)    < (0f01h + BANKA_END)))
                          M       if (((T3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3)
                          M PREV_BANK = high (T3)
                          M       endif
                          M     endif
0005B6 6E17               M         movwf   T3
                          M         MOVE?BA T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
0005B8 5018               M         movf    T3 + 1, W
                          M         CHK?RP  T1
                          M     if (((T1)    > BANKA_END) & ((T1)    < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005BA 5814               M         subwfb  T1   + 1, W
                          M         MOVE?AB T3   + 1
                          M         CHK?RP  T3 + 1
                          M     if (((T3 + 1) > BANKA_END) & ((T3 + 1) < (0f01h + BANKA_END)))
                          M       if (((T3 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T3 + 1)
                          M PREV_BANK = high (T3 + 1)
                          M       endif
                          M     endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005BC 6E18               M         movwf   T3 + 1
                          M     endif
                      00167         MOD?WCW T3, 00Ah, _t1temp_decimal
                          M         MOVE?WW T3,  R0
                          M         MOVE?BB T3,  R0
0005BE C017 F001          M         movff   T3,  R0
                          M         MOVE?BB (T3)  + 1, (R0)   + 1
0005C2 C018 F002          M         movff   (T3) + 1, (R0) + 1
                          M         MOVE?CW 00Ah, R1
                          M         CHK?RP  R1
                          M     if (((R1)    > BANKA_END) & ((R1)    < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M     else
                          M       if (low (00Ah) == 0)
                          M         clrf    R1
                          M       else
0005C6 0E0A               M         movlw   low (00Ah)
0005C8 6E03               M         movwf   R1
                          M       endif
                          M       if ((high (00Ah)) == 0)
0005CA 6A04               M         clrf    (R1)   + 1
                          M       else
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  DIV
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIV
                          M     else
                          M       if ((DIV)   < 1)
                          M         call    DIV
                          M       else
                          M         if ((DIV)   > $)
                          M         call    DIV
                          M         else
                          M           if ((DIV)   < ($ - 3ffh))
0005CC ECD7 F000          M         call    DIV
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   DIV
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?WW R2, _t1temp_decimal
                          M         MOVE?BB R2,  _t1temp_decimal
0005D0 C005 F02C          M         movff   R2,  _t1temp_decimal
                          M         MOVE?BB (R2)  + 1, (_t1temp_decimal) + 1
0005D4 C006 F02D          M         movff   (R2) + 1, (_t1temp_decimal) + 1
                      00168         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
0005D8 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005DA EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00169         LCDOUT?C        001h
                          M         MOVE?CA 001h
0005DE 0E01               M         movlw   low (001h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005E0 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00170         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0005E4 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00171         LCDOUTNUM?W     _t1resistance
                          M         MOVE?WW _t1resistance, R2
                          M         MOVE?BB _t1resistance, R2
0005E6 C02A F005          M         movff   _t1resistance, R2
                          M         MOVE?BB (_t1resistance) + 1, (R2) + 1
0005EA C02B F006          M         movff   (_t1resistance) + 1, (R2) + 1
                      00172         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
0005EE 0E06               M         movlw   low (LCDOUTJ)
0005F0 6E11               M         movwf   R8
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
0005F2 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
0005F4 EC58 F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00173         LCDOUT?C        020h
                          M         MOVE?CA 020h
0005F8 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0005FA EC04 F000          M         call    LCDOUT
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00174         LCDOUT?C        020h
                          M         MOVE?CA 020h
0005FE 0E20               M         movlw   low (020h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000600 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00175         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000604 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00176         LCDOUTNUM?W     _t1adval
                          M         MOVE?WW _t1adval, R2
                          M         MOVE?BB _t1adval, R2
000606 C024 F005          M         movff   _t1adval, R2
                          M         MOVE?BB (_t1adval) + 1, (R2) + 1
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00060A C025 F006          M         movff   (_t1adval) + 1, (R2) + 1
                      00177         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
00060E 0E06               M         movlw   low (LCDOUTJ)
000610 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000612 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000614 EC58 F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00178         LCDOUT?C        0FEh
                          M         MOVE?CA 0FEh
000618 0EFE               M         movlw   low (0FEh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00061A EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00179         LCDOUT?C        0C0h
                          M         MOVE?CA 0C0h
00061E 0EC0               M         movlw   low (0C0h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000620 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00180         LCDOUT?C        054h
                          M         MOVE?CA 054h
000624 0E54               M         movlw   low (054h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000626 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00181         LCDOUT?C        065h
                          M         MOVE?CA 065h
00062A 0E65               M         movlw   low (065h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00062C EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      00182         LCDOUT?C        06Dh
                          M         MOVE?CA 06Dh
000630 0E6D               M         movlw   low (06Dh)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000632 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00183         LCDOUT?C        070h
                          M         MOVE?CA 070h
000636 0E70               M         movlw   low (070h)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000638 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                      00184         LCDOUT?C        03Ah
                          M         MOVE?CA 03Ah
00063C 0E3A               M         movlw   low (03Ah)
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00063E EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00185         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000642 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00186         LCDOUTNUM?W     _t1temp_integer
                          M         MOVE?WW _t1temp_integer, R2
                          M         MOVE?BB _t1temp_integer, R2
000644 C02E F005          M         movff   _t1temp_integer, R2
                          M         MOVE?BB (_t1temp_integer) + 1, (R2) + 1
000648 C02F F006          M         movff   (_t1temp_integer) + 1, (R2) + 1
                      00187         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
00064C 0E06               M         movlw   low (LCDOUTJ)
00064E 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
000650 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000652 EC58 F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00188         LCDOUT?C        02Eh
                          M         MOVE?CA 02Eh
000656 0E2E               M         movlw   low (02Eh)
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000658 EC04 F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00189         LCDOUTCOUNT?C   000h
                          M         MOVE?CB 000h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) > BANKA_END) & ((R4 + 1) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00065C 6A0A               M         clrf    R4 + 1
                          M     else
                          M         movlw   low (000h)
                          M         movwf   R4 + 1
                          M     endif
                      00190         LCDOUTNUM?W     _t1temp_decimal
                          M         MOVE?WW _t1temp_decimal, R2
                          M         MOVE?BB _t1temp_decimal, R2
00065E C02C F005          M         movff   _t1temp_decimal, R2
                          M         MOVE?BB (_t1temp_decimal) + 1, (R2) + 1
000662 C02D F006          M         movff   (_t1temp_decimal) + 1, (R2) + 1
                      00191         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M         CHK?RP  R8
                          M     if (((R8)    > BANKA_END) & ((R8)    < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     ifdef USE_LINKER
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M       if (low (LCDOUTJ) == 0)
                          M         clrf    R8
                          M       else
000666 0E06               M         movlw   low (LCDOUTJ)
000668 6E11               M         movwf   R8
                          M       endif
                          M       if ((high (LCDOUTJ)) == 0)
00066A 6A12               M         clrf    (R8)   + 1
                          M       else
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M       endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
00066C EC58 F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00192         LABEL?L L00002  
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00002
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         XALL
                          M     else
000670                    M L00002
                          M     endif
                      00193         GOTO?L  _main
                          M         L?GOTO  _main
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_main))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _main
                          M     else
                          M       if ((_main) < 1)
                          M         goto    _main
                          M       else
                          M         if ((_main) > $)
                          M         goto    _main
                          M         else
                          M           if ((_main) < ($ - 3ffh))
                          M         goto    _main
                          M           else
000670 D639               M         bra     _main
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00194         END?    
  0000                    M     local loop
000672 0003               M loop    sleep
000674 D7FE               M         bra     loop
                      00195 
                      00196         END
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 89


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCIN                             0000010C
ADCIN?CW                          
ADCIN_USED                        00000001
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          10
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      50
ADD?WCW                           
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
AOUT?WWW                          
BANK0_END                         000000FF
BANK0_START                       00000080
BANK1_END                         000001FF
BANK1_START                       00000100
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 90


SYMBOL TABLE
  LABEL                             VALUE 

BANK2_END                         000002FF
BANK2_START                       00000200
BANKA_END                         0000007F
BANKA_START                       00000000
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

CCP2_BIT                          00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCP2_REG                          00000F82
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMP                               00000176
CMPF?WL                           
CMPGE                             00000164
CMPGE?WWB                         
CMPGE_USED                        00000001
CMPGT                             0000016A
CMPGT?WCL                         
CMPGT?WWB                         
CMPGT_USED                        00000001
CMPLT                             00000170
CMPLT?WWB                         
CMPLT_USED                        00000001
CMP_USED                          00000001
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 92


SYMBOL TABLE
  LABEL                             VALUE 

CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019A
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DIV                               000001AE
DIV32DIV                          000001B2
DIV?CWW                           
DIV?WCW                           
DIV?WWW                           
DIV_USED                          00000001
DONE                              00000001
DUNN                              00000228
DUNN3                             0000022A
DUNNRET                           0000022C
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
END?                              
FAST                              00000001
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 93


SYMBOL TABLE
  LABEL                             VALUE 

FERR                              00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FLTS                              00000002
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000019
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000033
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000033
HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
IDLEN                             00000007
INDF0                             00000FEF
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 94


SYMBOL TABLE
  LABEL                             VALUE 

INDF1                             00000FE7
INDF2                             00000FDF
INIT                              0000022E
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
JUMPMAN                           0000021C
JUMPMAN_USED                      00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L00001                            000003BA
L00002                            00000670
L00003                            000003BE
L00004                            000004D8
L00005                            000004CE
L?CALL                            
L?GOTO                            
LABEL?L                           
LAND                              00000196
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 95


SYMBOL TABLE
  LABEL                             VALUE 

LAND?BBW                          
LAND_USED                         00000001
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            00000008
LCDOUT?C                          
LCDOUTCOUNT?C                     
LCDOUTDEC?                        
LCDOUTJ                           00000006
LCDOUTJ_USED                      00000001
LCDOUTNUM?W                       
LCDOUT_USED                       00000001
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          4
LCD_DREG                          PORTC
LCD_EBIT                          3
LCD_EREG                          PORTC
LCD_LINES                         2
LCD_RSBIT                         0
LCD_RSREG                         PORTC
LCD_RWBIT                         00000000
LCD_RWREG                         00000F82
LOR                               000001A4
LOR?BBW                           
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 96


SYMBOL TABLE
  LABEL                             VALUE 

LOR_USED                          00000001
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MCLR                              00000003
MOD?WCW                           
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MUL                               000001DE
MUL?WCW                           
MUL_USED                          00000001
N                                 00000004
NEXT?WCL                          
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 97


SYMBOL TABLE
  LABEL                             VALUE 

NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OSC                               8
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
PAUSEUS                           0000013C
PAUSEUSL                          0000013E
PAUSEUS_USED                      00000001
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 98


SYMBOL TABLE
  LABEL                             VALUE 

POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_BANK                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PWM1CON                           00000FB7
R                                 00000002
R0                                00000001
R1                                00000003
R2                                00000005
R3                                00000007
R4                                00000009
R5                                0000000B
R6                                0000000D
R7                                0000000F
R8                                00000011
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000003
RAM_END                           000002FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 99


SYMBOL TABLE
  LABEL                             VALUE 

RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD16                              00000007
RE3                               00000003
RESET_ORG                         00000000
RI                                00000004
RM1                               0000001A
RM2                               0000001B
RR1                               0000001C
RR2                               0000001D
RS1                               0000001E
RS2                               0000001F
RSEN                              00000001
RST?RP                            
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SEROUT2DEC                        000000B0
SEROUT2DEC_USED                   00000001
SEROUT2SEND                       000000EC
SEROUT2SEND_USED                  00000001
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 100


SYMBOL TABLE
  LABEL                             VALUE 

SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SUB?WCW                           
SUB?WWW                           
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T1                                00000013
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2                                00000015
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 101


SYMBOL TABLE
  LABEL                             VALUE 

T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3                                00000017
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 102


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 103


SYMBOL TABLE
  LABEL                             VALUE 

W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 104


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PORTH                            00000F82
_PORTL                            00000F81
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_TRISH                            00000F94
_TRISL                            00000F93
_USED                             00000001
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 105


SYMBOL TABLE
  LABEL                             VALUE 

_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F2420                         00000001
_i                                00000020
_main                             000002E4
_n                                00000022
_resistor_ref                     00000034
_t1adval                          00000024
_t1res_lower                      00000026
_t1res_upper                      00000028
_t1resistance                     0000002A
_t1temp_decimal                   0000002C
_t1temp_integer                   0000002E
_t1temp_lower                     00000030
_t1temp_upper                     00000032
_temp_ref                         0000004C
adcinloop                         0000012E
cmpnoteq                          00000182
divloop                           000001B6
divok                             000001D0
lcdchkcd                          00000080
lcdloop                           0000008E
lcdout1                           00000064
lcdoutcom                         00000062
lcdsend                           0000008C
main                              0000022E
pauseush                          00000150
pauseusloop                       0000014A
serout2ddig                       000000DC
serout2send1                      000000FC


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.51                      THERMI~1.ASM   2-5-2018  15:29:36         PAGE 106


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXX----------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  1662
Program Memory Bytes Free: 14722


Errors   :     0
Warnings :     0 reported,     4 suppressed
Messages :     0 reported,     0 suppressed

